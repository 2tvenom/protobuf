// Code generated by protoc-gen-gogo.
// source: thetest.proto
// DO NOT EDIT!

package test

import proto "code.google.com/p/gogoprotobuf/proto"
import json "encoding/json"
import math "math"

// discarding unused import gogoproto "code.google.com/p/gogoprotobuf/gogoproto/gogo.pb"

import code_google_com_p_gogoprotobuf_test_custom "code.google.com/p/gogoprotobuf/test/custom"

import fmt "fmt"
import strings "strings"
import reflect "reflect"

import fmt1 "fmt"
import strings1 "strings"
import reflect1 "reflect"

import code_google_com_p_gogoprotobuf_proto "code.google.com/p/gogoprotobuf/proto"

import fmt2 "fmt"
import bytes "bytes"

import google_protobuf "code.google.com/p/gogoprotobuf/protoc-gen-gogo/descriptor"

// Reference proto, json, and math imports to suppress error if they are not otherwise used.
var _ = proto.Marshal
var _ = &json.SyntaxError{}
var _ = math.Inf

type NidOptNative struct {
	Field1           float64 `protobuf:"fixed64,1,opt" json:"Field1"`
	Field2           float32 `protobuf:"fixed32,2,opt" json:"Field2"`
	Field3           int32   `protobuf:"varint,3,opt" json:"Field3"`
	Field4           int64   `protobuf:"varint,4,opt" json:"Field4"`
	Field5           uint32  `protobuf:"varint,5,opt" json:"Field5"`
	Field6           uint64  `protobuf:"varint,6,opt" json:"Field6"`
	Field7           int32   `protobuf:"zigzag32,7,opt" json:"Field7"`
	Field8           int64   `protobuf:"zigzag64,8,opt" json:"Field8"`
	Field9           uint32  `protobuf:"fixed32,9,opt" json:"Field9"`
	Field10          int32   `protobuf:"fixed32,10,opt" json:"Field10"`
	Field11          uint64  `protobuf:"fixed64,11,opt" json:"Field11"`
	Field12          int64   `protobuf:"fixed64,12,opt" json:"Field12"`
	Field13          bool    `protobuf:"varint,13,opt" json:"Field13"`
	Field14          string  `protobuf:"bytes,14,opt" json:"Field14"`
	Field15          []byte  `protobuf:"bytes,15,opt" json:"Field15"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *NidOptNative) Reset()      { *m = NidOptNative{} }
func (*NidOptNative) ProtoMessage() {}

type NinOptNative struct {
	Field1           *float64 `protobuf:"fixed64,1,opt" json:"Field1,omitempty"`
	Field2           *float32 `protobuf:"fixed32,2,opt" json:"Field2,omitempty"`
	Field3           *int32   `protobuf:"varint,3,opt" json:"Field3,omitempty"`
	Field4           *int64   `protobuf:"varint,4,opt" json:"Field4,omitempty"`
	Field5           *uint32  `protobuf:"varint,5,opt" json:"Field5,omitempty"`
	Field6           *uint64  `protobuf:"varint,6,opt" json:"Field6,omitempty"`
	Field7           *int32   `protobuf:"zigzag32,7,opt" json:"Field7,omitempty"`
	Field8           *int64   `protobuf:"zigzag64,8,opt" json:"Field8,omitempty"`
	Field9           *uint32  `protobuf:"fixed32,9,opt" json:"Field9,omitempty"`
	Field10          *int32   `protobuf:"fixed32,10,opt" json:"Field10,omitempty"`
	Field11          *uint64  `protobuf:"fixed64,11,opt" json:"Field11,omitempty"`
	Field12          *int64   `protobuf:"fixed64,12,opt" json:"Field12,omitempty"`
	Field13          *bool    `protobuf:"varint,13,opt" json:"Field13,omitempty"`
	Field14          *string  `protobuf:"bytes,14,opt" json:"Field14,omitempty"`
	Field15          []byte   `protobuf:"bytes,15,opt" json:"Field15,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *NinOptNative) Reset()      { *m = NinOptNative{} }
func (*NinOptNative) ProtoMessage() {}

type NidRepNative struct {
	Field1           []float64 `protobuf:"fixed64,1,rep" json:"Field1"`
	Field2           []float32 `protobuf:"fixed32,2,rep" json:"Field2"`
	Field3           []int32   `protobuf:"varint,3,rep" json:"Field3"`
	Field4           []int64   `protobuf:"varint,4,rep" json:"Field4"`
	Field5           []uint32  `protobuf:"varint,5,rep" json:"Field5"`
	Field6           []uint64  `protobuf:"varint,6,rep" json:"Field6"`
	Field7           []int32   `protobuf:"zigzag32,7,rep" json:"Field7"`
	Field8           []int64   `protobuf:"zigzag64,8,rep" json:"Field8"`
	Field9           []uint32  `protobuf:"fixed32,9,rep" json:"Field9"`
	Field10          []int32   `protobuf:"fixed32,10,rep" json:"Field10"`
	Field11          []uint64  `protobuf:"fixed64,11,rep" json:"Field11"`
	Field12          []int64   `protobuf:"fixed64,12,rep" json:"Field12"`
	Field13          []bool    `protobuf:"varint,13,rep" json:"Field13"`
	Field14          []string  `protobuf:"bytes,14,rep" json:"Field14"`
	Field15          [][]byte  `protobuf:"bytes,15,rep" json:"Field15"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *NidRepNative) Reset()      { *m = NidRepNative{} }
func (*NidRepNative) ProtoMessage() {}

type NinRepNative struct {
	Field1           []float64 `protobuf:"fixed64,1,rep" json:"Field1,omitempty"`
	Field2           []float32 `protobuf:"fixed32,2,rep" json:"Field2,omitempty"`
	Field3           []int32   `protobuf:"varint,3,rep" json:"Field3,omitempty"`
	Field4           []int64   `protobuf:"varint,4,rep" json:"Field4,omitempty"`
	Field5           []uint32  `protobuf:"varint,5,rep" json:"Field5,omitempty"`
	Field6           []uint64  `protobuf:"varint,6,rep" json:"Field6,omitempty"`
	Field7           []int32   `protobuf:"zigzag32,7,rep" json:"Field7,omitempty"`
	Field8           []int64   `protobuf:"zigzag64,8,rep" json:"Field8,omitempty"`
	Field9           []uint32  `protobuf:"fixed32,9,rep" json:"Field9,omitempty"`
	Field10          []int32   `protobuf:"fixed32,10,rep" json:"Field10,omitempty"`
	Field11          []uint64  `protobuf:"fixed64,11,rep" json:"Field11,omitempty"`
	Field12          []int64   `protobuf:"fixed64,12,rep" json:"Field12,omitempty"`
	Field13          []bool    `protobuf:"varint,13,rep" json:"Field13,omitempty"`
	Field14          []string  `protobuf:"bytes,14,rep" json:"Field14,omitempty"`
	Field15          [][]byte  `protobuf:"bytes,15,rep" json:"Field15,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *NinRepNative) Reset()      { *m = NinRepNative{} }
func (*NinRepNative) ProtoMessage() {}

type NidRepPackedNative struct {
	Field3           []int32 `protobuf:"varint,3,rep,packed" json:"Field3"`
	Field4           []int64 `protobuf:"varint,4,rep,packed" json:"Field4"`
	Field13          []bool  `protobuf:"varint,13,rep,packed" json:"Field13"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *NidRepPackedNative) Reset()      { *m = NidRepPackedNative{} }
func (*NidRepPackedNative) ProtoMessage() {}

type NinRepPackedNative struct {
	Field3           []int32 `protobuf:"varint,3,rep" json:"Field3,omitempty"`
	Field4           []int64 `protobuf:"varint,4,rep" json:"Field4,omitempty"`
	Field13          []bool  `protobuf:"varint,13,rep" json:"Field13,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *NinRepPackedNative) Reset()      { *m = NinRepPackedNative{} }
func (*NinRepPackedNative) ProtoMessage() {}

type NidOptStruct struct {
	Field1           float64      `protobuf:"fixed64,1,opt" json:"Field1"`
	Field2           float32      `protobuf:"fixed32,2,opt" json:"Field2"`
	Field3           NidOptNative `protobuf:"bytes,3,opt" json:"Field3"`
	Field4           NinOptNative `protobuf:"bytes,4,opt" json:"Field4"`
	Field6           uint64       `protobuf:"varint,6,opt" json:"Field6"`
	Field7           int32        `protobuf:"zigzag32,7,opt" json:"Field7"`
	Field8           NidOptNative `protobuf:"bytes,8,opt" json:"Field8"`
	Field13          bool         `protobuf:"varint,13,opt" json:"Field13"`
	Field14          string       `protobuf:"bytes,14,opt" json:"Field14"`
	Field15          []byte       `protobuf:"bytes,15,opt" json:"Field15"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *NidOptStruct) Reset()      { *m = NidOptStruct{} }
func (*NidOptStruct) ProtoMessage() {}

type NinOptStruct struct {
	Field1           *float64      `protobuf:"fixed64,1,opt" json:"Field1,omitempty"`
	Field2           *float32      `protobuf:"fixed32,2,opt" json:"Field2,omitempty"`
	Field3           *NidOptNative `protobuf:"bytes,3,opt" json:"Field3,omitempty"`
	Field4           *NinOptNative `protobuf:"bytes,4,opt" json:"Field4,omitempty"`
	Field6           *uint64       `protobuf:"varint,6,opt" json:"Field6,omitempty"`
	Field7           *int32        `protobuf:"zigzag32,7,opt" json:"Field7,omitempty"`
	Field8           *NidOptNative `protobuf:"bytes,8,opt" json:"Field8,omitempty"`
	Field13          *bool         `protobuf:"varint,13,opt" json:"Field13,omitempty"`
	Field14          *string       `protobuf:"bytes,14,opt" json:"Field14,omitempty"`
	Field15          []byte        `protobuf:"bytes,15,opt" json:"Field15,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *NinOptStruct) Reset()      { *m = NinOptStruct{} }
func (*NinOptStruct) ProtoMessage() {}

type NidRepStruct struct {
	Field1           []float64      `protobuf:"fixed64,1,rep" json:"Field1"`
	Field2           []float32      `protobuf:"fixed32,2,rep" json:"Field2"`
	Field3           []NidOptNative `protobuf:"bytes,3,rep" json:"Field3"`
	Field4           []NinOptNative `protobuf:"bytes,4,rep" json:"Field4"`
	Field6           []uint64       `protobuf:"varint,6,rep" json:"Field6"`
	Field7           []int32        `protobuf:"zigzag32,7,rep" json:"Field7"`
	Field8           []NidOptNative `protobuf:"bytes,8,rep" json:"Field8"`
	Field13          []bool         `protobuf:"varint,13,rep" json:"Field13"`
	Field14          []string       `protobuf:"bytes,14,rep" json:"Field14"`
	Field15          [][]byte       `protobuf:"bytes,15,rep" json:"Field15"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *NidRepStruct) Reset()      { *m = NidRepStruct{} }
func (*NidRepStruct) ProtoMessage() {}

type NinRepStruct struct {
	Field1           []float64       `protobuf:"fixed64,1,rep" json:"Field1,omitempty"`
	Field2           []float32       `protobuf:"fixed32,2,rep" json:"Field2,omitempty"`
	Field3           []*NidOptNative `protobuf:"bytes,3,rep" json:"Field3,omitempty"`
	Field4           []*NinOptNative `protobuf:"bytes,4,rep" json:"Field4,omitempty"`
	Field6           []uint64        `protobuf:"varint,6,rep" json:"Field6,omitempty"`
	Field7           []int32         `protobuf:"zigzag32,7,rep" json:"Field7,omitempty"`
	Field8           []*NidOptNative `protobuf:"bytes,8,rep" json:"Field8,omitempty"`
	Field13          []bool          `protobuf:"varint,13,rep" json:"Field13,omitempty"`
	Field14          []string        `protobuf:"bytes,14,rep" json:"Field14,omitempty"`
	Field15          [][]byte        `protobuf:"bytes,15,rep" json:"Field15,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *NinRepStruct) Reset()      { *m = NinRepStruct{} }
func (*NinRepStruct) ProtoMessage() {}

type NidEmbeddedStruct struct {
	NidOptNative     `protobuf:"bytes,1,opt,embedded=Field1" json:"Field1"`
	Field200         NidOptNative `protobuf:"bytes,200,opt" json:"Field200"`
	Field210         bool         `protobuf:"varint,210,opt" json:"Field210"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *NidEmbeddedStruct) Reset()      { *m = NidEmbeddedStruct{} }
func (*NidEmbeddedStruct) ProtoMessage() {}

type NinEmbeddedStruct struct {
	*NidOptNative    `protobuf:"bytes,1,opt,embedded=Field1" json:"Field1,omitempty"`
	Field200         *NidOptNative `protobuf:"bytes,200,opt" json:"Field200,omitempty"`
	Field210         *bool         `protobuf:"varint,210,opt" json:"Field210,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *NinEmbeddedStruct) Reset()      { *m = NinEmbeddedStruct{} }
func (*NinEmbeddedStruct) ProtoMessage() {}

type NidNestedStruct struct {
	Field1           NidOptStruct   `protobuf:"bytes,1,opt" json:"Field1"`
	Field2           []NidRepStruct `protobuf:"bytes,2,rep" json:"Field2"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *NidNestedStruct) Reset()      { *m = NidNestedStruct{} }
func (*NidNestedStruct) ProtoMessage() {}

type NinNestedStruct struct {
	Field1           *NidOptStruct   `protobuf:"bytes,1,opt" json:"Field1,omitempty"`
	Field2           []*NidRepStruct `protobuf:"bytes,2,rep" json:"Field2,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *NinNestedStruct) Reset()      { *m = NinNestedStruct{} }
func (*NinNestedStruct) ProtoMessage() {}

type NidOptCustom struct {
	Id               code_google_com_p_gogoprotobuf_test_custom.Uuid    `protobuf:"bytes,1,opt,customtype=code.google.com/p/gogoprotobuf/test/custom.Uuid" json:"Id"`
	Value            code_google_com_p_gogoprotobuf_test_custom.Uint128 `protobuf:"bytes,2,opt,customtype=code.google.com/p/gogoprotobuf/test/custom.Uint128" json:"Value"`
	XXX_unrecognized []byte                                             `json:"-"`
}

func (m *NidOptCustom) Reset()      { *m = NidOptCustom{} }
func (*NidOptCustom) ProtoMessage() {}

type NinOptCustom struct {
	Id               *code_google_com_p_gogoprotobuf_test_custom.Uuid    `protobuf:"bytes,1,opt,customtype=code.google.com/p/gogoprotobuf/test/custom.Uuid" json:"Id,omitempty"`
	Value            *code_google_com_p_gogoprotobuf_test_custom.Uint128 `protobuf:"bytes,2,opt,customtype=code.google.com/p/gogoprotobuf/test/custom.Uint128" json:"Value,omitempty"`
	XXX_unrecognized []byte                                              `json:"-"`
}

func (m *NinOptCustom) Reset()      { *m = NinOptCustom{} }
func (*NinOptCustom) ProtoMessage() {}

type NidRepCustom struct {
	Id               []code_google_com_p_gogoprotobuf_test_custom.Uuid    `protobuf:"bytes,1,rep,customtype=code.google.com/p/gogoprotobuf/test/custom.Uuid" json:"Id"`
	Value            []code_google_com_p_gogoprotobuf_test_custom.Uint128 `protobuf:"bytes,2,rep,customtype=code.google.com/p/gogoprotobuf/test/custom.Uint128" json:"Value"`
	XXX_unrecognized []byte                                               `json:"-"`
}

func (m *NidRepCustom) Reset()      { *m = NidRepCustom{} }
func (*NidRepCustom) ProtoMessage() {}

type NinRepCustom struct {
	Id               []code_google_com_p_gogoprotobuf_test_custom.Uuid    `protobuf:"bytes,1,rep,customtype=code.google.com/p/gogoprotobuf/test/custom.Uuid" json:"Id,omitempty"`
	Value            []code_google_com_p_gogoprotobuf_test_custom.Uint128 `protobuf:"bytes,2,rep,customtype=code.google.com/p/gogoprotobuf/test/custom.Uint128" json:"Value,omitempty"`
	XXX_unrecognized []byte                                               `json:"-"`
}

func (m *NinRepCustom) Reset()      { *m = NinRepCustom{} }
func (*NinRepCustom) ProtoMessage() {}

type NinOptNativeUnion struct {
	Field1           *float64 `protobuf:"fixed64,1,opt" json:"Field1,omitempty"`
	Field2           *float32 `protobuf:"fixed32,2,opt" json:"Field2,omitempty"`
	Field3           *int32   `protobuf:"varint,3,opt" json:"Field3,omitempty"`
	Field4           *int64   `protobuf:"varint,4,opt" json:"Field4,omitempty"`
	Field5           *uint32  `protobuf:"varint,5,opt" json:"Field5,omitempty"`
	Field6           *uint64  `protobuf:"varint,6,opt" json:"Field6,omitempty"`
	Field13          *bool    `protobuf:"varint,13,opt" json:"Field13,omitempty"`
	Field14          *string  `protobuf:"bytes,14,opt" json:"Field14,omitempty"`
	Field15          []byte   `protobuf:"bytes,15,opt" json:"Field15,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *NinOptNativeUnion) Reset()      { *m = NinOptNativeUnion{} }
func (*NinOptNativeUnion) ProtoMessage() {}

type NinOptStructUnion struct {
	Field1           *float64      `protobuf:"fixed64,1,opt" json:"Field1,omitempty"`
	Field2           *float32      `protobuf:"fixed32,2,opt" json:"Field2,omitempty"`
	Field3           *NidOptNative `protobuf:"bytes,3,opt" json:"Field3,omitempty"`
	Field4           *NinOptNative `protobuf:"bytes,4,opt" json:"Field4,omitempty"`
	Field6           *uint64       `protobuf:"varint,6,opt" json:"Field6,omitempty"`
	Field7           *int32        `protobuf:"zigzag32,7,opt" json:"Field7,omitempty"`
	Field13          *bool         `protobuf:"varint,13,opt" json:"Field13,omitempty"`
	Field14          *string       `protobuf:"bytes,14,opt" json:"Field14,omitempty"`
	Field15          []byte        `protobuf:"bytes,15,opt" json:"Field15,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *NinOptStructUnion) Reset()      { *m = NinOptStructUnion{} }
func (*NinOptStructUnion) ProtoMessage() {}

type NinEmbeddedStructUnion struct {
	*NidOptNative    `protobuf:"bytes,1,opt,embedded=Field1" json:"Field1,omitempty"`
	Field200         *NinOptNative `protobuf:"bytes,200,opt" json:"Field200,omitempty"`
	Field210         *bool         `protobuf:"varint,210,opt" json:"Field210,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *NinEmbeddedStructUnion) Reset()      { *m = NinEmbeddedStructUnion{} }
func (*NinEmbeddedStructUnion) ProtoMessage() {}

type NinNestedStructUnion struct {
	Field1           *NinOptNativeUnion      `protobuf:"bytes,1,opt" json:"Field1,omitempty"`
	Field2           *NinOptStructUnion      `protobuf:"bytes,2,opt" json:"Field2,omitempty"`
	Field3           *NinEmbeddedStructUnion `protobuf:"bytes,3,opt" json:"Field3,omitempty"`
	XXX_unrecognized []byte                  `json:"-"`
}

func (m *NinNestedStructUnion) Reset()      { *m = NinNestedStructUnion{} }
func (*NinNestedStructUnion) ProtoMessage() {}

type Tree struct {
	Or               *OrBranch  `protobuf:"bytes,1,opt" json:"Or,omitempty"`
	And              *AndBranch `protobuf:"bytes,2,opt" json:"And,omitempty"`
	Leaf             *Leaf      `protobuf:"bytes,3,opt" json:"Leaf,omitempty"`
	XXX_unrecognized []byte     `json:"-"`
}

func (m *Tree) Reset()      { *m = Tree{} }
func (*Tree) ProtoMessage() {}

type OrBranch struct {
	Left             Tree   `protobuf:"bytes,1,opt" json:"Left"`
	Right            Tree   `protobuf:"bytes,2,opt" json:"Right"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *OrBranch) Reset()      { *m = OrBranch{} }
func (*OrBranch) ProtoMessage() {}

type AndBranch struct {
	Left             Tree   `protobuf:"bytes,1,opt" json:"Left"`
	Right            Tree   `protobuf:"bytes,2,opt" json:"Right"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *AndBranch) Reset()      { *m = AndBranch{} }
func (*AndBranch) ProtoMessage() {}

type Leaf struct {
	Value            int64  `protobuf:"varint,1,opt" json:"Value"`
	StrValue         string `protobuf:"bytes,2,opt" json:"StrValue"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *Leaf) Reset()      { *m = Leaf{} }
func (*Leaf) ProtoMessage() {}

type DeepTree struct {
	Down             *ADeepBranch   `protobuf:"bytes,1,opt" json:"Down,omitempty"`
	And              *AndDeepBranch `protobuf:"bytes,2,opt" json:"And,omitempty"`
	Leaf             *DeepLeaf      `protobuf:"bytes,3,opt" json:"Leaf,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *DeepTree) Reset()      { *m = DeepTree{} }
func (*DeepTree) ProtoMessage() {}

type ADeepBranch struct {
	Down             DeepTree `protobuf:"bytes,2,opt" json:"Down"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *ADeepBranch) Reset()      { *m = ADeepBranch{} }
func (*ADeepBranch) ProtoMessage() {}

type AndDeepBranch struct {
	Left             DeepTree `protobuf:"bytes,1,opt" json:"Left"`
	Right            DeepTree `protobuf:"bytes,2,opt" json:"Right"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *AndDeepBranch) Reset()      { *m = AndDeepBranch{} }
func (*AndDeepBranch) ProtoMessage() {}

type DeepLeaf struct {
	Tree             Tree   `protobuf:"bytes,1,opt" json:"Tree"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *DeepLeaf) Reset()      { *m = DeepLeaf{} }
func (*DeepLeaf) ProtoMessage() {}

type Nil struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *Nil) Reset()      { *m = Nil{} }
func (*Nil) ProtoMessage() {}

func init() {
}
func (this *NinOptNativeUnion) GetValue() interface{} {
	if this.Field1 != nil {
		return this.Field1
	}
	if this.Field2 != nil {
		return this.Field2
	}
	if this.Field3 != nil {
		return this.Field3
	}
	if this.Field4 != nil {
		return this.Field4
	}
	if this.Field5 != nil {
		return this.Field5
	}
	if this.Field6 != nil {
		return this.Field6
	}
	if this.Field13 != nil {
		return this.Field13
	}
	if this.Field14 != nil {
		return this.Field14
	}
	if this.Field15 != nil {
		return this.Field15
	}
	return nil
}

func (this *NinOptNativeUnion) SetValue(value interface{}) bool {
	switch vt := value.(type) {
	case *float64:
		this.Field1 = vt
	case *float32:
		this.Field2 = vt
	case *int32:
		this.Field3 = vt
	case *int64:
		this.Field4 = vt
	case *uint32:
		this.Field5 = vt
	case *uint64:
		this.Field6 = vt
	case *bool:
		this.Field13 = vt
	case *string:
		this.Field14 = vt
	case []byte:
		this.Field15 = vt
	default:
		return false
	}
	return true
}
func (this *NinOptStructUnion) GetValue() interface{} {
	if this.Field1 != nil {
		return this.Field1
	}
	if this.Field2 != nil {
		return this.Field2
	}
	if this.Field3 != nil {
		return this.Field3
	}
	if this.Field4 != nil {
		return this.Field4
	}
	if this.Field6 != nil {
		return this.Field6
	}
	if this.Field7 != nil {
		return this.Field7
	}
	if this.Field13 != nil {
		return this.Field13
	}
	if this.Field14 != nil {
		return this.Field14
	}
	if this.Field15 != nil {
		return this.Field15
	}
	return nil
}

func (this *NinOptStructUnion) SetValue(value interface{}) bool {
	switch vt := value.(type) {
	case *float64:
		this.Field1 = vt
	case *float32:
		this.Field2 = vt
	case *NidOptNative:
		this.Field3 = vt
	case *NinOptNative:
		this.Field4 = vt
	case *uint64:
		this.Field6 = vt
	case *int32:
		this.Field7 = vt
	case *bool:
		this.Field13 = vt
	case *string:
		this.Field14 = vt
	case []byte:
		this.Field15 = vt
	default:
		return false
	}
	return true
}
func (this *NinEmbeddedStructUnion) GetValue() interface{} {
	if this.NidOptNative != nil {
		return this.NidOptNative
	}
	if this.Field200 != nil {
		return this.Field200
	}
	if this.Field210 != nil {
		return this.Field210
	}
	return nil
}

func (this *NinEmbeddedStructUnion) SetValue(value interface{}) bool {
	switch vt := value.(type) {
	case *NidOptNative:
		this.NidOptNative = vt
	case *NinOptNative:
		this.Field200 = vt
	case *bool:
		this.Field210 = vt
	default:
		return false
	}
	return true
}
func (this *NinNestedStructUnion) GetValue() interface{} {
	if this.Field1 != nil {
		return this.Field1
	}
	if this.Field2 != nil {
		return this.Field2
	}
	if this.Field3 != nil {
		return this.Field3
	}
	return nil
}

func (this *NinNestedStructUnion) SetValue(value interface{}) bool {
	switch vt := value.(type) {
	case *NinOptNativeUnion:
		this.Field1 = vt
	case *NinOptStructUnion:
		this.Field2 = vt
	case *NinEmbeddedStructUnion:
		this.Field3 = vt
	default:
		this.Field1 = new(NinOptNativeUnion)
		if set := this.Field1.SetValue(value); set {
			return true
		}
		this.Field1 = nil
		this.Field2 = new(NinOptStructUnion)
		if set := this.Field2.SetValue(value); set {
			return true
		}
		this.Field2 = nil
		this.Field3 = new(NinEmbeddedStructUnion)
		if set := this.Field3.SetValue(value); set {
			return true
		}
		this.Field3 = nil
		return false
	}
	return true
}
func (this *Tree) GetValue() interface{} {
	if this.Or != nil {
		return this.Or
	}
	if this.And != nil {
		return this.And
	}
	if this.Leaf != nil {
		return this.Leaf
	}
	return nil
}

func (this *Tree) SetValue(value interface{}) bool {
	switch vt := value.(type) {
	case *OrBranch:
		this.Or = vt
	case *AndBranch:
		this.And = vt
	case *Leaf:
		this.Leaf = vt
	default:
		return false
	}
	return true
}
func (this *DeepTree) GetValue() interface{} {
	if this.Down != nil {
		return this.Down
	}
	if this.And != nil {
		return this.And
	}
	if this.Leaf != nil {
		return this.Leaf
	}
	return nil
}

func (this *DeepTree) SetValue(value interface{}) bool {
	switch vt := value.(type) {
	case *ADeepBranch:
		this.Down = vt
	case *AndDeepBranch:
		this.And = vt
	case *DeepLeaf:
		this.Leaf = vt
	default:
		return false
	}
	return true
}
func (this *NidOptNative) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&NidOptNative{`,
		`Field1:` + fmt.Sprintf("%v", this.Field1) + `,`,
		`Field2:` + fmt.Sprintf("%v", this.Field2) + `,`,
		`Field3:` + fmt.Sprintf("%v", this.Field3) + `,`,
		`Field4:` + fmt.Sprintf("%v", this.Field4) + `,`,
		`Field5:` + fmt.Sprintf("%v", this.Field5) + `,`,
		`Field6:` + fmt.Sprintf("%v", this.Field6) + `,`,
		`Field7:` + fmt.Sprintf("%v", this.Field7) + `,`,
		`Field8:` + fmt.Sprintf("%v", this.Field8) + `,`,
		`Field9:` + fmt.Sprintf("%v", this.Field9) + `,`,
		`Field10:` + fmt.Sprintf("%v", this.Field10) + `,`,
		`Field11:` + fmt.Sprintf("%v", this.Field11) + `,`,
		`Field12:` + fmt.Sprintf("%v", this.Field12) + `,`,
		`Field13:` + fmt.Sprintf("%v", this.Field13) + `,`,
		`Field14:` + fmt.Sprintf("%v", this.Field14) + `,`,
		`Field15:` + fmt.Sprintf("%v", this.Field15) + `,`,
		`}`,
	}, "")
	return s
}
func (this *NinOptNative) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&NinOptNative{`,
		`Field1:` + valueToString(this.Field1) + `,`,
		`Field2:` + valueToString(this.Field2) + `,`,
		`Field3:` + valueToString(this.Field3) + `,`,
		`Field4:` + valueToString(this.Field4) + `,`,
		`Field5:` + valueToString(this.Field5) + `,`,
		`Field6:` + valueToString(this.Field6) + `,`,
		`Field7:` + valueToString(this.Field7) + `,`,
		`Field8:` + valueToString(this.Field8) + `,`,
		`Field9:` + valueToString(this.Field9) + `,`,
		`Field10:` + valueToString(this.Field10) + `,`,
		`Field11:` + valueToString(this.Field11) + `,`,
		`Field12:` + valueToString(this.Field12) + `,`,
		`Field13:` + valueToString(this.Field13) + `,`,
		`Field14:` + valueToString(this.Field14) + `,`,
		`Field15:` + valueToString(this.Field15) + `,`,
		`}`,
	}, "")
	return s
}
func (this *NidRepNative) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&NidRepNative{`,
		`Field1:` + fmt.Sprintf("%v", this.Field1) + `,`,
		`Field2:` + fmt.Sprintf("%v", this.Field2) + `,`,
		`Field3:` + fmt.Sprintf("%v", this.Field3) + `,`,
		`Field4:` + fmt.Sprintf("%v", this.Field4) + `,`,
		`Field5:` + fmt.Sprintf("%v", this.Field5) + `,`,
		`Field6:` + fmt.Sprintf("%v", this.Field6) + `,`,
		`Field7:` + fmt.Sprintf("%v", this.Field7) + `,`,
		`Field8:` + fmt.Sprintf("%v", this.Field8) + `,`,
		`Field9:` + fmt.Sprintf("%v", this.Field9) + `,`,
		`Field10:` + fmt.Sprintf("%v", this.Field10) + `,`,
		`Field11:` + fmt.Sprintf("%v", this.Field11) + `,`,
		`Field12:` + fmt.Sprintf("%v", this.Field12) + `,`,
		`Field13:` + fmt.Sprintf("%v", this.Field13) + `,`,
		`Field14:` + fmt.Sprintf("%v", this.Field14) + `,`,
		`Field15:` + fmt.Sprintf("%v", this.Field15) + `,`,
		`}`,
	}, "")
	return s
}
func (this *NinRepNative) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&NinRepNative{`,
		`Field1:` + fmt.Sprintf("%v", this.Field1) + `,`,
		`Field2:` + fmt.Sprintf("%v", this.Field2) + `,`,
		`Field3:` + fmt.Sprintf("%v", this.Field3) + `,`,
		`Field4:` + fmt.Sprintf("%v", this.Field4) + `,`,
		`Field5:` + fmt.Sprintf("%v", this.Field5) + `,`,
		`Field6:` + fmt.Sprintf("%v", this.Field6) + `,`,
		`Field7:` + fmt.Sprintf("%v", this.Field7) + `,`,
		`Field8:` + fmt.Sprintf("%v", this.Field8) + `,`,
		`Field9:` + fmt.Sprintf("%v", this.Field9) + `,`,
		`Field10:` + fmt.Sprintf("%v", this.Field10) + `,`,
		`Field11:` + fmt.Sprintf("%v", this.Field11) + `,`,
		`Field12:` + fmt.Sprintf("%v", this.Field12) + `,`,
		`Field13:` + fmt.Sprintf("%v", this.Field13) + `,`,
		`Field14:` + fmt.Sprintf("%v", this.Field14) + `,`,
		`Field15:` + fmt.Sprintf("%v", this.Field15) + `,`,
		`}`,
	}, "")
	return s
}
func (this *NidRepPackedNative) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&NidRepPackedNative{`,
		`Field3:` + fmt.Sprintf("%v", this.Field3) + `,`,
		`Field4:` + fmt.Sprintf("%v", this.Field4) + `,`,
		`Field13:` + fmt.Sprintf("%v", this.Field13) + `,`,
		`}`,
	}, "")
	return s
}
func (this *NinRepPackedNative) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&NinRepPackedNative{`,
		`Field3:` + fmt.Sprintf("%v", this.Field3) + `,`,
		`Field4:` + fmt.Sprintf("%v", this.Field4) + `,`,
		`Field13:` + fmt.Sprintf("%v", this.Field13) + `,`,
		`}`,
	}, "")
	return s
}
func (this *NidOptStruct) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&NidOptStruct{`,
		`Field1:` + fmt.Sprintf("%v", this.Field1) + `,`,
		`Field2:` + fmt.Sprintf("%v", this.Field2) + `,`,
		`Field3:` + strings.Replace(strings.Replace(this.Field3.String(), "NidOptNative", "NidOptNative", 1), `&`, ``, 1) + `,`,
		`Field4:` + strings.Replace(strings.Replace(this.Field4.String(), "NinOptNative", "NinOptNative", 1), `&`, ``, 1) + `,`,
		`Field6:` + fmt.Sprintf("%v", this.Field6) + `,`,
		`Field7:` + fmt.Sprintf("%v", this.Field7) + `,`,
		`Field8:` + strings.Replace(strings.Replace(this.Field8.String(), "NidOptNative", "NidOptNative", 1), `&`, ``, 1) + `,`,
		`Field13:` + fmt.Sprintf("%v", this.Field13) + `,`,
		`Field14:` + fmt.Sprintf("%v", this.Field14) + `,`,
		`Field15:` + fmt.Sprintf("%v", this.Field15) + `,`,
		`}`,
	}, "")
	return s
}
func (this *NinOptStruct) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&NinOptStruct{`,
		`Field1:` + valueToString(this.Field1) + `,`,
		`Field2:` + valueToString(this.Field2) + `,`,
		`Field3:` + strings.Replace(fmt.Sprintf("%v", this.Field3), "NidOptNative", "NidOptNative", 1) + `,`,
		`Field4:` + strings.Replace(fmt.Sprintf("%v", this.Field4), "NinOptNative", "NinOptNative", 1) + `,`,
		`Field6:` + valueToString(this.Field6) + `,`,
		`Field7:` + valueToString(this.Field7) + `,`,
		`Field8:` + strings.Replace(fmt.Sprintf("%v", this.Field8), "NidOptNative", "NidOptNative", 1) + `,`,
		`Field13:` + valueToString(this.Field13) + `,`,
		`Field14:` + valueToString(this.Field14) + `,`,
		`Field15:` + valueToString(this.Field15) + `,`,
		`}`,
	}, "")
	return s
}
func (this *NidRepStruct) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&NidRepStruct{`,
		`Field1:` + fmt.Sprintf("%v", this.Field1) + `,`,
		`Field2:` + fmt.Sprintf("%v", this.Field2) + `,`,
		`Field3:` + strings.Replace(strings.Replace(fmt.Sprintf("%v", this.Field3), "NidOptNative", "NidOptNative", 1), `&`, ``, 1) + `,`,
		`Field4:` + strings.Replace(strings.Replace(fmt.Sprintf("%v", this.Field4), "NinOptNative", "NinOptNative", 1), `&`, ``, 1) + `,`,
		`Field6:` + fmt.Sprintf("%v", this.Field6) + `,`,
		`Field7:` + fmt.Sprintf("%v", this.Field7) + `,`,
		`Field8:` + strings.Replace(strings.Replace(fmt.Sprintf("%v", this.Field8), "NidOptNative", "NidOptNative", 1), `&`, ``, 1) + `,`,
		`Field13:` + fmt.Sprintf("%v", this.Field13) + `,`,
		`Field14:` + fmt.Sprintf("%v", this.Field14) + `,`,
		`Field15:` + fmt.Sprintf("%v", this.Field15) + `,`,
		`}`,
	}, "")
	return s
}
func (this *NinRepStruct) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&NinRepStruct{`,
		`Field1:` + fmt.Sprintf("%v", this.Field1) + `,`,
		`Field2:` + fmt.Sprintf("%v", this.Field2) + `,`,
		`Field3:` + strings.Replace(fmt.Sprintf("%v", this.Field3), "NidOptNative", "NidOptNative", 1) + `,`,
		`Field4:` + strings.Replace(fmt.Sprintf("%v", this.Field4), "NinOptNative", "NinOptNative", 1) + `,`,
		`Field6:` + fmt.Sprintf("%v", this.Field6) + `,`,
		`Field7:` + fmt.Sprintf("%v", this.Field7) + `,`,
		`Field8:` + strings.Replace(fmt.Sprintf("%v", this.Field8), "NidOptNative", "NidOptNative", 1) + `,`,
		`Field13:` + fmt.Sprintf("%v", this.Field13) + `,`,
		`Field14:` + fmt.Sprintf("%v", this.Field14) + `,`,
		`Field15:` + fmt.Sprintf("%v", this.Field15) + `,`,
		`}`,
	}, "")
	return s
}
func (this *NidEmbeddedStruct) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&NidEmbeddedStruct{`,
		`NidOptNative:` + strings.Replace(strings.Replace(this.NidOptNative.String(), "NidOptNative", "NidOptNative", 1), `&`, ``, 1) + `,`,
		`Field200:` + strings.Replace(strings.Replace(this.Field200.String(), "NidOptNative", "NidOptNative", 1), `&`, ``, 1) + `,`,
		`Field210:` + fmt.Sprintf("%v", this.Field210) + `,`,
		`}`,
	}, "")
	return s
}
func (this *NinEmbeddedStruct) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&NinEmbeddedStruct{`,
		`NidOptNative:` + strings.Replace(fmt.Sprintf("%v", this.NidOptNative), "NidOptNative", "NidOptNative", 1) + `,`,
		`Field200:` + strings.Replace(fmt.Sprintf("%v", this.Field200), "NidOptNative", "NidOptNative", 1) + `,`,
		`Field210:` + valueToString(this.Field210) + `,`,
		`}`,
	}, "")
	return s
}
func (this *NidNestedStruct) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&NidNestedStruct{`,
		`Field1:` + strings.Replace(strings.Replace(this.Field1.String(), "NidOptStruct", "NidOptStruct", 1), `&`, ``, 1) + `,`,
		`Field2:` + strings.Replace(strings.Replace(fmt.Sprintf("%v", this.Field2), "NidRepStruct", "NidRepStruct", 1), `&`, ``, 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *NinNestedStruct) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&NinNestedStruct{`,
		`Field1:` + strings.Replace(fmt.Sprintf("%v", this.Field1), "NidOptStruct", "NidOptStruct", 1) + `,`,
		`Field2:` + strings.Replace(fmt.Sprintf("%v", this.Field2), "NidRepStruct", "NidRepStruct", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *NidOptCustom) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&NidOptCustom{`,
		`Id:` + fmt.Sprintf("%v", this.Id) + `,`,
		`Value:` + fmt.Sprintf("%v", this.Value) + `,`,
		`}`,
	}, "")
	return s
}
func (this *NinOptCustom) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&NinOptCustom{`,
		`Id:` + valueToString(this.Id) + `,`,
		`Value:` + valueToString(this.Value) + `,`,
		`}`,
	}, "")
	return s
}
func (this *NidRepCustom) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&NidRepCustom{`,
		`Id:` + fmt.Sprintf("%v", this.Id) + `,`,
		`Value:` + fmt.Sprintf("%v", this.Value) + `,`,
		`}`,
	}, "")
	return s
}
func (this *NinRepCustom) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&NinRepCustom{`,
		`Id:` + fmt.Sprintf("%v", this.Id) + `,`,
		`Value:` + fmt.Sprintf("%v", this.Value) + `,`,
		`}`,
	}, "")
	return s
}
func (this *NinOptNativeUnion) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&NinOptNativeUnion{`,
		`Field1:` + valueToString(this.Field1) + `,`,
		`Field2:` + valueToString(this.Field2) + `,`,
		`Field3:` + valueToString(this.Field3) + `,`,
		`Field4:` + valueToString(this.Field4) + `,`,
		`Field5:` + valueToString(this.Field5) + `,`,
		`Field6:` + valueToString(this.Field6) + `,`,
		`Field13:` + valueToString(this.Field13) + `,`,
		`Field14:` + valueToString(this.Field14) + `,`,
		`Field15:` + valueToString(this.Field15) + `,`,
		`}`,
	}, "")
	return s
}
func (this *NinOptStructUnion) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&NinOptStructUnion{`,
		`Field1:` + valueToString(this.Field1) + `,`,
		`Field2:` + valueToString(this.Field2) + `,`,
		`Field3:` + strings.Replace(fmt.Sprintf("%v", this.Field3), "NidOptNative", "NidOptNative", 1) + `,`,
		`Field4:` + strings.Replace(fmt.Sprintf("%v", this.Field4), "NinOptNative", "NinOptNative", 1) + `,`,
		`Field6:` + valueToString(this.Field6) + `,`,
		`Field7:` + valueToString(this.Field7) + `,`,
		`Field13:` + valueToString(this.Field13) + `,`,
		`Field14:` + valueToString(this.Field14) + `,`,
		`Field15:` + valueToString(this.Field15) + `,`,
		`}`,
	}, "")
	return s
}
func (this *NinEmbeddedStructUnion) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&NinEmbeddedStructUnion{`,
		`NidOptNative:` + strings.Replace(fmt.Sprintf("%v", this.NidOptNative), "NidOptNative", "NidOptNative", 1) + `,`,
		`Field200:` + strings.Replace(fmt.Sprintf("%v", this.Field200), "NinOptNative", "NinOptNative", 1) + `,`,
		`Field210:` + valueToString(this.Field210) + `,`,
		`}`,
	}, "")
	return s
}
func (this *NinNestedStructUnion) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&NinNestedStructUnion{`,
		`Field1:` + strings.Replace(fmt.Sprintf("%v", this.Field1), "NinOptNativeUnion", "NinOptNativeUnion", 1) + `,`,
		`Field2:` + strings.Replace(fmt.Sprintf("%v", this.Field2), "NinOptStructUnion", "NinOptStructUnion", 1) + `,`,
		`Field3:` + strings.Replace(fmt.Sprintf("%v", this.Field3), "NinEmbeddedStructUnion", "NinEmbeddedStructUnion", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *Tree) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&Tree{`,
		`Or:` + strings.Replace(fmt.Sprintf("%v", this.Or), "OrBranch", "OrBranch", 1) + `,`,
		`And:` + strings.Replace(fmt.Sprintf("%v", this.And), "AndBranch", "AndBranch", 1) + `,`,
		`Leaf:` + strings.Replace(fmt.Sprintf("%v", this.Leaf), "Leaf", "Leaf", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *OrBranch) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&OrBranch{`,
		`Left:` + strings.Replace(strings.Replace(this.Left.String(), "Tree", "Tree", 1), `&`, ``, 1) + `,`,
		`Right:` + strings.Replace(strings.Replace(this.Right.String(), "Tree", "Tree", 1), `&`, ``, 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *AndBranch) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AndBranch{`,
		`Left:` + strings.Replace(strings.Replace(this.Left.String(), "Tree", "Tree", 1), `&`, ``, 1) + `,`,
		`Right:` + strings.Replace(strings.Replace(this.Right.String(), "Tree", "Tree", 1), `&`, ``, 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *Leaf) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&Leaf{`,
		`Value:` + fmt.Sprintf("%v", this.Value) + `,`,
		`StrValue:` + fmt.Sprintf("%v", this.StrValue) + `,`,
		`}`,
	}, "")
	return s
}
func (this *DeepTree) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&DeepTree{`,
		`Down:` + strings.Replace(fmt.Sprintf("%v", this.Down), "ADeepBranch", "ADeepBranch", 1) + `,`,
		`And:` + strings.Replace(fmt.Sprintf("%v", this.And), "AndDeepBranch", "AndDeepBranch", 1) + `,`,
		`Leaf:` + strings.Replace(fmt.Sprintf("%v", this.Leaf), "DeepLeaf", "DeepLeaf", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ADeepBranch) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ADeepBranch{`,
		`Down:` + strings.Replace(strings.Replace(this.Down.String(), "DeepTree", "DeepTree", 1), `&`, ``, 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *AndDeepBranch) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AndDeepBranch{`,
		`Left:` + strings.Replace(strings.Replace(this.Left.String(), "DeepTree", "DeepTree", 1), `&`, ``, 1) + `,`,
		`Right:` + strings.Replace(strings.Replace(this.Right.String(), "DeepTree", "DeepTree", 1), `&`, ``, 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *DeepLeaf) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&DeepLeaf{`,
		`Tree:` + strings.Replace(strings.Replace(this.Tree.String(), "Tree", "Tree", 1), `&`, ``, 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *Nil) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&Nil{`,
		`}`,
	}, "")
	return s
}
func valueToString(v interface{}) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("*%v", pv)
}
func NewPopulatedNidOptNative(r randy) *NidOptNative {
	this := &NidOptNative{}
	this.Field1 = r.Float64()
	this.Field2 = r.Float32()
	this.Field3 = r.Int31()
	this.Field4 = r.Int63()
	this.Field5 = r.Uint32()
	this.Field6 = uint64(r.Uint32())
	this.Field7 = r.Int31()
	this.Field8 = r.Int63()
	this.Field9 = r.Uint32()
	this.Field10 = r.Int31()
	this.Field11 = uint64(r.Uint32())
	this.Field12 = r.Int63()
	this.Field13 = bool(r.Intn(2) == 0)
	this.Field14 = randString(r)
	v1 := r.Intn(100)
	this.Field15 = make([]byte, v1)
	for i := 0; i < v1; i++ {
		this.Field15[i] = byte(r.Intn(256))
	}
	return this
}

func NewPopulatedNinOptNative(r randy) *NinOptNative {
	this := &NinOptNative{}
	if r.Intn(10) != 0 {
		v2 := r.Float64()
		this.Field1 = &v2
	}
	if r.Intn(10) != 0 {
		v3 := r.Float32()
		this.Field2 = &v3
	}
	if r.Intn(10) != 0 {
		v4 := r.Int31()
		this.Field3 = &v4
	}
	if r.Intn(10) != 0 {
		v5 := r.Int63()
		this.Field4 = &v5
	}
	if r.Intn(10) != 0 {
		v6 := r.Uint32()
		this.Field5 = &v6
	}
	if r.Intn(10) != 0 {
		v7 := uint64(r.Uint32())
		this.Field6 = &v7
	}
	if r.Intn(10) != 0 {
		v8 := r.Int31()
		this.Field7 = &v8
	}
	if r.Intn(10) != 0 {
		v9 := r.Int63()
		this.Field8 = &v9
	}
	if r.Intn(10) != 0 {
		v10 := r.Uint32()
		this.Field9 = &v10
	}
	if r.Intn(10) != 0 {
		v11 := r.Int31()
		this.Field10 = &v11
	}
	if r.Intn(10) != 0 {
		v12 := uint64(r.Uint32())
		this.Field11 = &v12
	}
	if r.Intn(10) != 0 {
		v13 := r.Int63()
		this.Field12 = &v13
	}
	if r.Intn(10) != 0 {
		v14 := bool(r.Intn(2) == 0)
		this.Field13 = &v14
	}
	if r.Intn(10) != 0 {
		v15 := randString(r)
		this.Field14 = &v15
	}
	if r.Intn(10) != 0 {
		v16 := r.Intn(100)
		this.Field15 = make([]byte, v16)
		for i := 0; i < v16; i++ {
			this.Field15[i] = byte(r.Intn(256))
		}
	}
	return this
}

func NewPopulatedNidRepNative(r randy) *NidRepNative {
	this := &NidRepNative{}
	if r.Intn(10) != 0 {
		v17 := r.Intn(100)
		this.Field1 = make([]float64, v17)
		for i := 0; i < v17; i++ {
			this.Field1[i] = r.Float64()
		}
	}
	if r.Intn(10) != 0 {
		v18 := r.Intn(100)
		this.Field2 = make([]float32, v18)
		for i := 0; i < v18; i++ {
			this.Field2[i] = r.Float32()
		}
	}
	if r.Intn(10) != 0 {
		v19 := r.Intn(100)
		this.Field3 = make([]int32, v19)
		for i := 0; i < v19; i++ {
			this.Field3[i] = r.Int31()
		}
	}
	if r.Intn(10) != 0 {
		v20 := r.Intn(100)
		this.Field4 = make([]int64, v20)
		for i := 0; i < v20; i++ {
			this.Field4[i] = r.Int63()
		}
	}
	if r.Intn(10) != 0 {
		v21 := r.Intn(100)
		this.Field5 = make([]uint32, v21)
		for i := 0; i < v21; i++ {
			this.Field5[i] = r.Uint32()
		}
	}
	if r.Intn(10) != 0 {
		v22 := r.Intn(100)
		this.Field6 = make([]uint64, v22)
		for i := 0; i < v22; i++ {
			this.Field6[i] = uint64(r.Uint32())
		}
	}
	if r.Intn(10) != 0 {
		v23 := r.Intn(100)
		this.Field7 = make([]int32, v23)
		for i := 0; i < v23; i++ {
			this.Field7[i] = r.Int31()
		}
	}
	if r.Intn(10) != 0 {
		v24 := r.Intn(100)
		this.Field8 = make([]int64, v24)
		for i := 0; i < v24; i++ {
			this.Field8[i] = r.Int63()
		}
	}
	if r.Intn(10) != 0 {
		v25 := r.Intn(100)
		this.Field9 = make([]uint32, v25)
		for i := 0; i < v25; i++ {
			this.Field9[i] = r.Uint32()
		}
	}
	if r.Intn(10) != 0 {
		v26 := r.Intn(100)
		this.Field10 = make([]int32, v26)
		for i := 0; i < v26; i++ {
			this.Field10[i] = r.Int31()
		}
	}
	if r.Intn(10) != 0 {
		v27 := r.Intn(100)
		this.Field11 = make([]uint64, v27)
		for i := 0; i < v27; i++ {
			this.Field11[i] = uint64(r.Uint32())
		}
	}
	if r.Intn(10) != 0 {
		v28 := r.Intn(100)
		this.Field12 = make([]int64, v28)
		for i := 0; i < v28; i++ {
			this.Field12[i] = r.Int63()
		}
	}
	if r.Intn(10) != 0 {
		v29 := r.Intn(100)
		this.Field13 = make([]bool, v29)
		for i := 0; i < v29; i++ {
			this.Field13[i] = bool(r.Intn(2) == 0)
		}
	}
	if r.Intn(10) != 0 {
		v30 := r.Intn(10)
		this.Field14 = make([]string, v30)
		for i := 0; i < v30; i++ {
			this.Field14[i] = randString(r)
		}
	}
	if r.Intn(10) != 0 {
		v31 := r.Intn(100)
		this.Field15 = make([][]byte, v31)
		for i := 0; i < v31; i++ {
			v32 := r.Intn(100)
			this.Field15[i] = make([]byte, v32)
			for j := 0; j < v32; j++ {
				this.Field15[i][j] = byte(r.Intn(256))
			}
		}
	}
	return this
}

func NewPopulatedNinRepNative(r randy) *NinRepNative {
	this := &NinRepNative{}
	if r.Intn(10) != 0 {
		v33 := r.Intn(100)
		this.Field1 = make([]float64, v33)
		for i := 0; i < v33; i++ {
			this.Field1[i] = r.Float64()
		}
	}
	if r.Intn(10) != 0 {
		v34 := r.Intn(100)
		this.Field2 = make([]float32, v34)
		for i := 0; i < v34; i++ {
			this.Field2[i] = r.Float32()
		}
	}
	if r.Intn(10) != 0 {
		v35 := r.Intn(100)
		this.Field3 = make([]int32, v35)
		for i := 0; i < v35; i++ {
			this.Field3[i] = r.Int31()
		}
	}
	if r.Intn(10) != 0 {
		v36 := r.Intn(100)
		this.Field4 = make([]int64, v36)
		for i := 0; i < v36; i++ {
			this.Field4[i] = r.Int63()
		}
	}
	if r.Intn(10) != 0 {
		v37 := r.Intn(100)
		this.Field5 = make([]uint32, v37)
		for i := 0; i < v37; i++ {
			this.Field5[i] = r.Uint32()
		}
	}
	if r.Intn(10) != 0 {
		v38 := r.Intn(100)
		this.Field6 = make([]uint64, v38)
		for i := 0; i < v38; i++ {
			this.Field6[i] = uint64(r.Uint32())
		}
	}
	if r.Intn(10) != 0 {
		v39 := r.Intn(100)
		this.Field7 = make([]int32, v39)
		for i := 0; i < v39; i++ {
			this.Field7[i] = r.Int31()
		}
	}
	if r.Intn(10) != 0 {
		v40 := r.Intn(100)
		this.Field8 = make([]int64, v40)
		for i := 0; i < v40; i++ {
			this.Field8[i] = r.Int63()
		}
	}
	if r.Intn(10) != 0 {
		v41 := r.Intn(100)
		this.Field9 = make([]uint32, v41)
		for i := 0; i < v41; i++ {
			this.Field9[i] = r.Uint32()
		}
	}
	if r.Intn(10) != 0 {
		v42 := r.Intn(100)
		this.Field10 = make([]int32, v42)
		for i := 0; i < v42; i++ {
			this.Field10[i] = r.Int31()
		}
	}
	if r.Intn(10) != 0 {
		v43 := r.Intn(100)
		this.Field11 = make([]uint64, v43)
		for i := 0; i < v43; i++ {
			this.Field11[i] = uint64(r.Uint32())
		}
	}
	if r.Intn(10) != 0 {
		v44 := r.Intn(100)
		this.Field12 = make([]int64, v44)
		for i := 0; i < v44; i++ {
			this.Field12[i] = r.Int63()
		}
	}
	if r.Intn(10) != 0 {
		v45 := r.Intn(100)
		this.Field13 = make([]bool, v45)
		for i := 0; i < v45; i++ {
			this.Field13[i] = bool(r.Intn(2) == 0)
		}
	}
	if r.Intn(10) != 0 {
		v46 := r.Intn(10)
		this.Field14 = make([]string, v46)
		for i := 0; i < v46; i++ {
			this.Field14[i] = randString(r)
		}
	}
	if r.Intn(10) != 0 {
		v47 := r.Intn(100)
		this.Field15 = make([][]byte, v47)
		for i := 0; i < v47; i++ {
			v48 := r.Intn(100)
			this.Field15[i] = make([]byte, v48)
			for j := 0; j < v48; j++ {
				this.Field15[i][j] = byte(r.Intn(256))
			}
		}
	}
	return this
}

func NewPopulatedNidRepPackedNative(r randy) *NidRepPackedNative {
	this := &NidRepPackedNative{}
	if r.Intn(10) != 0 {
		v49 := r.Intn(100)
		this.Field3 = make([]int32, v49)
		for i := 0; i < v49; i++ {
			this.Field3[i] = r.Int31()
		}
	}
	if r.Intn(10) != 0 {
		v50 := r.Intn(100)
		this.Field4 = make([]int64, v50)
		for i := 0; i < v50; i++ {
			this.Field4[i] = r.Int63()
		}
	}
	if r.Intn(10) != 0 {
		v51 := r.Intn(100)
		this.Field13 = make([]bool, v51)
		for i := 0; i < v51; i++ {
			this.Field13[i] = bool(r.Intn(2) == 0)
		}
	}
	return this
}

func NewPopulatedNinRepPackedNative(r randy) *NinRepPackedNative {
	this := &NinRepPackedNative{}
	if r.Intn(10) != 0 {
		v52 := r.Intn(100)
		this.Field3 = make([]int32, v52)
		for i := 0; i < v52; i++ {
			this.Field3[i] = r.Int31()
		}
	}
	if r.Intn(10) != 0 {
		v53 := r.Intn(100)
		this.Field4 = make([]int64, v53)
		for i := 0; i < v53; i++ {
			this.Field4[i] = r.Int63()
		}
	}
	if r.Intn(10) != 0 {
		v54 := r.Intn(100)
		this.Field13 = make([]bool, v54)
		for i := 0; i < v54; i++ {
			this.Field13[i] = bool(r.Intn(2) == 0)
		}
	}
	return this
}

func NewPopulatedNidOptStruct(r randy) *NidOptStruct {
	this := &NidOptStruct{}
	this.Field1 = r.Float64()
	this.Field2 = r.Float32()
	v55 := NewPopulatedNidOptNative(r)
	this.Field3 = *v55
	v56 := NewPopulatedNinOptNative(r)
	this.Field4 = *v56
	this.Field6 = uint64(r.Uint32())
	this.Field7 = r.Int31()
	v57 := NewPopulatedNidOptNative(r)
	this.Field8 = *v57
	this.Field13 = bool(r.Intn(2) == 0)
	this.Field14 = randString(r)
	v58 := r.Intn(100)
	this.Field15 = make([]byte, v58)
	for i := 0; i < v58; i++ {
		this.Field15[i] = byte(r.Intn(256))
	}
	return this
}

func NewPopulatedNinOptStruct(r randy) *NinOptStruct {
	this := &NinOptStruct{}
	if r.Intn(10) != 0 {
		v59 := r.Float64()
		this.Field1 = &v59
	}
	if r.Intn(10) != 0 {
		v60 := r.Float32()
		this.Field2 = &v60
	}
	if r.Intn(10) != 0 {
		this.Field3 = NewPopulatedNidOptNative(r)
	}
	if r.Intn(10) != 0 {
		this.Field4 = NewPopulatedNinOptNative(r)
	}
	if r.Intn(10) != 0 {
		v61 := uint64(r.Uint32())
		this.Field6 = &v61
	}
	if r.Intn(10) != 0 {
		v62 := r.Int31()
		this.Field7 = &v62
	}
	if r.Intn(10) != 0 {
		this.Field8 = NewPopulatedNidOptNative(r)
	}
	if r.Intn(10) != 0 {
		v63 := bool(r.Intn(2) == 0)
		this.Field13 = &v63
	}
	if r.Intn(10) != 0 {
		v64 := randString(r)
		this.Field14 = &v64
	}
	if r.Intn(10) != 0 {
		v65 := r.Intn(100)
		this.Field15 = make([]byte, v65)
		for i := 0; i < v65; i++ {
			this.Field15[i] = byte(r.Intn(256))
		}
	}
	return this
}

func NewPopulatedNidRepStruct(r randy) *NidRepStruct {
	this := &NidRepStruct{}
	if r.Intn(10) != 0 {
		v66 := r.Intn(100)
		this.Field1 = make([]float64, v66)
		for i := 0; i < v66; i++ {
			this.Field1[i] = r.Float64()
		}
	}
	if r.Intn(10) != 0 {
		v67 := r.Intn(100)
		this.Field2 = make([]float32, v67)
		for i := 0; i < v67; i++ {
			this.Field2[i] = r.Float32()
		}
	}
	if r.Intn(10) != 0 {
		v68 := r.Intn(10)
		this.Field3 = make([]NidOptNative, v68)
		for i := 0; i < v68; i++ {
			v69 := NewPopulatedNidOptNative(r)
			this.Field3[i] = *v69
		}
	}
	if r.Intn(10) != 0 {
		v70 := r.Intn(10)
		this.Field4 = make([]NinOptNative, v70)
		for i := 0; i < v70; i++ {
			v71 := NewPopulatedNinOptNative(r)
			this.Field4[i] = *v71
		}
	}
	if r.Intn(10) != 0 {
		v72 := r.Intn(100)
		this.Field6 = make([]uint64, v72)
		for i := 0; i < v72; i++ {
			this.Field6[i] = uint64(r.Uint32())
		}
	}
	if r.Intn(10) != 0 {
		v73 := r.Intn(100)
		this.Field7 = make([]int32, v73)
		for i := 0; i < v73; i++ {
			this.Field7[i] = r.Int31()
		}
	}
	if r.Intn(10) != 0 {
		v74 := r.Intn(10)
		this.Field8 = make([]NidOptNative, v74)
		for i := 0; i < v74; i++ {
			v75 := NewPopulatedNidOptNative(r)
			this.Field8[i] = *v75
		}
	}
	if r.Intn(10) != 0 {
		v76 := r.Intn(100)
		this.Field13 = make([]bool, v76)
		for i := 0; i < v76; i++ {
			this.Field13[i] = bool(r.Intn(2) == 0)
		}
	}
	if r.Intn(10) != 0 {
		v77 := r.Intn(10)
		this.Field14 = make([]string, v77)
		for i := 0; i < v77; i++ {
			this.Field14[i] = randString(r)
		}
	}
	if r.Intn(10) != 0 {
		v78 := r.Intn(100)
		this.Field15 = make([][]byte, v78)
		for i := 0; i < v78; i++ {
			v79 := r.Intn(100)
			this.Field15[i] = make([]byte, v79)
			for j := 0; j < v79; j++ {
				this.Field15[i][j] = byte(r.Intn(256))
			}
		}
	}
	return this
}

func NewPopulatedNinRepStruct(r randy) *NinRepStruct {
	this := &NinRepStruct{}
	if r.Intn(10) != 0 {
		v80 := r.Intn(100)
		this.Field1 = make([]float64, v80)
		for i := 0; i < v80; i++ {
			this.Field1[i] = r.Float64()
		}
	}
	if r.Intn(10) != 0 {
		v81 := r.Intn(100)
		this.Field2 = make([]float32, v81)
		for i := 0; i < v81; i++ {
			this.Field2[i] = r.Float32()
		}
	}
	if r.Intn(10) != 0 {
		v82 := r.Intn(10)
		this.Field3 = make([]*NidOptNative, v82)
		for i := 0; i < v82; i++ {
			this.Field3[i] = NewPopulatedNidOptNative(r)
		}
	}
	if r.Intn(10) != 0 {
		v83 := r.Intn(10)
		this.Field4 = make([]*NinOptNative, v83)
		for i := 0; i < v83; i++ {
			this.Field4[i] = NewPopulatedNinOptNative(r)
		}
	}
	if r.Intn(10) != 0 {
		v84 := r.Intn(100)
		this.Field6 = make([]uint64, v84)
		for i := 0; i < v84; i++ {
			this.Field6[i] = uint64(r.Uint32())
		}
	}
	if r.Intn(10) != 0 {
		v85 := r.Intn(100)
		this.Field7 = make([]int32, v85)
		for i := 0; i < v85; i++ {
			this.Field7[i] = r.Int31()
		}
	}
	if r.Intn(10) != 0 {
		v86 := r.Intn(10)
		this.Field8 = make([]*NidOptNative, v86)
		for i := 0; i < v86; i++ {
			this.Field8[i] = NewPopulatedNidOptNative(r)
		}
	}
	if r.Intn(10) != 0 {
		v87 := r.Intn(100)
		this.Field13 = make([]bool, v87)
		for i := 0; i < v87; i++ {
			this.Field13[i] = bool(r.Intn(2) == 0)
		}
	}
	if r.Intn(10) != 0 {
		v88 := r.Intn(10)
		this.Field14 = make([]string, v88)
		for i := 0; i < v88; i++ {
			this.Field14[i] = randString(r)
		}
	}
	if r.Intn(10) != 0 {
		v89 := r.Intn(100)
		this.Field15 = make([][]byte, v89)
		for i := 0; i < v89; i++ {
			v90 := r.Intn(100)
			this.Field15[i] = make([]byte, v90)
			for j := 0; j < v90; j++ {
				this.Field15[i][j] = byte(r.Intn(256))
			}
		}
	}
	return this
}

func NewPopulatedNidEmbeddedStruct(r randy) *NidEmbeddedStruct {
	this := &NidEmbeddedStruct{}
	v91 := NewPopulatedNidOptNative(r)
	this.NidOptNative = *v91
	v92 := NewPopulatedNidOptNative(r)
	this.Field200 = *v92
	this.Field210 = bool(r.Intn(2) == 0)
	return this
}

func NewPopulatedNinEmbeddedStruct(r randy) *NinEmbeddedStruct {
	this := &NinEmbeddedStruct{}
	if r.Intn(10) != 0 {
		this.NidOptNative = NewPopulatedNidOptNative(r)
	}
	if r.Intn(10) != 0 {
		this.Field200 = NewPopulatedNidOptNative(r)
	}
	if r.Intn(10) != 0 {
		v93 := bool(r.Intn(2) == 0)
		this.Field210 = &v93
	}
	return this
}

func NewPopulatedNidNestedStruct(r randy) *NidNestedStruct {
	this := &NidNestedStruct{}
	v94 := NewPopulatedNidOptStruct(r)
	this.Field1 = *v94
	if r.Intn(10) != 0 {
		v95 := r.Intn(10)
		this.Field2 = make([]NidRepStruct, v95)
		for i := 0; i < v95; i++ {
			v96 := NewPopulatedNidRepStruct(r)
			this.Field2[i] = *v96
		}
	}
	return this
}

func NewPopulatedNinNestedStruct(r randy) *NinNestedStruct {
	this := &NinNestedStruct{}
	if r.Intn(10) != 0 {
		this.Field1 = NewPopulatedNidOptStruct(r)
	}
	if r.Intn(10) != 0 {
		v97 := r.Intn(10)
		this.Field2 = make([]*NidRepStruct, v97)
		for i := 0; i < v97; i++ {
			this.Field2[i] = NewPopulatedNidRepStruct(r)
		}
	}
	return this
}

func NewPopulatedNidOptCustom(r randy) *NidOptCustom {
	this := &NidOptCustom{}
	v98 := code_google_com_p_gogoprotobuf_test_custom.NewPopulatedUuid(r)
	this.Id = *v98
	v99 := code_google_com_p_gogoprotobuf_test_custom.NewPopulatedUint128(r)
	this.Value = *v99
	return this
}

func NewPopulatedNinOptCustom(r randy) *NinOptCustom {
	this := &NinOptCustom{}
	if r.Intn(10) != 0 {
		this.Id = code_google_com_p_gogoprotobuf_test_custom.NewPopulatedUuid(r)
	}
	if r.Intn(10) != 0 {
		this.Value = code_google_com_p_gogoprotobuf_test_custom.NewPopulatedUint128(r)
	}
	return this
}

func NewPopulatedNidRepCustom(r randy) *NidRepCustom {
	this := &NidRepCustom{}
	if r.Intn(10) != 0 {
		v100 := r.Intn(10)
		this.Id = make([]code_google_com_p_gogoprotobuf_test_custom.Uuid, v100)
		for i := 0; i < v100; i++ {
			v101 := code_google_com_p_gogoprotobuf_test_custom.NewPopulatedUuid(r)
			this.Id[i] = *v101
		}
	}
	if r.Intn(10) != 0 {
		v102 := r.Intn(10)
		this.Value = make([]code_google_com_p_gogoprotobuf_test_custom.Uint128, v102)
		for i := 0; i < v102; i++ {
			v103 := code_google_com_p_gogoprotobuf_test_custom.NewPopulatedUint128(r)
			this.Value[i] = *v103
		}
	}
	return this
}

func NewPopulatedNinRepCustom(r randy) *NinRepCustom {
	this := &NinRepCustom{}
	if r.Intn(10) != 0 {
		v104 := r.Intn(10)
		this.Id = make([]code_google_com_p_gogoprotobuf_test_custom.Uuid, v104)
		for i := 0; i < v104; i++ {
			v105 := code_google_com_p_gogoprotobuf_test_custom.NewPopulatedUuid(r)
			this.Id[i] = *v105
		}
	}
	if r.Intn(10) != 0 {
		v106 := r.Intn(10)
		this.Value = make([]code_google_com_p_gogoprotobuf_test_custom.Uint128, v106)
		for i := 0; i < v106; i++ {
			v107 := code_google_com_p_gogoprotobuf_test_custom.NewPopulatedUint128(r)
			this.Value[i] = *v107
		}
	}
	return this
}

func NewPopulatedNinOptNativeUnion(r randy) *NinOptNativeUnion {
	this := &NinOptNativeUnion{}
	fieldNum := r.Intn(9)
	switch fieldNum {
	case 0:
		v108 := r.Float64()
		this.Field1 = &v108
	case 1:
		v109 := r.Float32()
		this.Field2 = &v109
	case 2:
		v110 := r.Int31()
		this.Field3 = &v110
	case 3:
		v111 := r.Int63()
		this.Field4 = &v111
	case 4:
		v112 := r.Uint32()
		this.Field5 = &v112
	case 5:
		v113 := uint64(r.Uint32())
		this.Field6 = &v113
	case 6:
		v114 := bool(r.Intn(2) == 0)
		this.Field13 = &v114
	case 7:
		v115 := randString(r)
		this.Field14 = &v115
	case 8:
		v116 := r.Intn(100)
		this.Field15 = make([]byte, v116)
		for i := 0; i < v116; i++ {
			this.Field15[i] = byte(r.Intn(256))
		}
	}
	return this
}

func NewPopulatedNinOptStructUnion(r randy) *NinOptStructUnion {
	this := &NinOptStructUnion{}
	fieldNum := r.Intn(9)
	switch fieldNum {
	case 0:
		v117 := r.Float64()
		this.Field1 = &v117
	case 1:
		v118 := r.Float32()
		this.Field2 = &v118
	case 2:
		this.Field3 = NewPopulatedNidOptNative(r)
	case 3:
		this.Field4 = NewPopulatedNinOptNative(r)
	case 4:
		v119 := uint64(r.Uint32())
		this.Field6 = &v119
	case 5:
		v120 := r.Int31()
		this.Field7 = &v120
	case 6:
		v121 := bool(r.Intn(2) == 0)
		this.Field13 = &v121
	case 7:
		v122 := randString(r)
		this.Field14 = &v122
	case 8:
		v123 := r.Intn(100)
		this.Field15 = make([]byte, v123)
		for i := 0; i < v123; i++ {
			this.Field15[i] = byte(r.Intn(256))
		}
	}
	return this
}

func NewPopulatedNinEmbeddedStructUnion(r randy) *NinEmbeddedStructUnion {
	this := &NinEmbeddedStructUnion{}
	fieldNum := r.Intn(3)
	switch fieldNum {
	case 0:
		this.NidOptNative = NewPopulatedNidOptNative(r)
	case 1:
		this.Field200 = NewPopulatedNinOptNative(r)
	case 2:
		v124 := bool(r.Intn(2) == 0)
		this.Field210 = &v124
	}
	return this
}

func NewPopulatedNinNestedStructUnion(r randy) *NinNestedStructUnion {
	this := &NinNestedStructUnion{}
	fieldNum := r.Intn(3)
	switch fieldNum {
	case 0:
		this.Field1 = NewPopulatedNinOptNativeUnion(r)
	case 1:
		this.Field2 = NewPopulatedNinOptStructUnion(r)
	case 2:
		this.Field3 = NewPopulatedNinEmbeddedStructUnion(r)
	}
	return this
}

func NewPopulatedTree(r randy) *Tree {
	this := &Tree{}
	fieldNum := r.Intn(102)
	switch fieldNum {
	case 0:
		this.Or = NewPopulatedOrBranch(r)
	case 1:
		this.And = NewPopulatedAndBranch(r)
	case 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101:
		this.Leaf = NewPopulatedLeaf(r)
	}
	return this
}

func NewPopulatedOrBranch(r randy) *OrBranch {
	this := &OrBranch{}
	v125 := NewPopulatedTree(r)
	this.Left = *v125
	v126 := NewPopulatedTree(r)
	this.Right = *v126
	return this
}

func NewPopulatedAndBranch(r randy) *AndBranch {
	this := &AndBranch{}
	v127 := NewPopulatedTree(r)
	this.Left = *v127
	v128 := NewPopulatedTree(r)
	this.Right = *v128
	return this
}

func NewPopulatedLeaf(r randy) *Leaf {
	this := &Leaf{}
	this.Value = r.Int63()
	this.StrValue = randString(r)
	return this
}

func NewPopulatedDeepTree(r randy) *DeepTree {
	this := &DeepTree{}
	fieldNum := r.Intn(102)
	switch fieldNum {
	case 0:
		this.Down = NewPopulatedADeepBranch(r)
	case 1:
		this.And = NewPopulatedAndDeepBranch(r)
	case 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101:
		this.Leaf = NewPopulatedDeepLeaf(r)
	}
	return this
}

func NewPopulatedADeepBranch(r randy) *ADeepBranch {
	this := &ADeepBranch{}
	v129 := NewPopulatedDeepTree(r)
	this.Down = *v129
	return this
}

func NewPopulatedAndDeepBranch(r randy) *AndDeepBranch {
	this := &AndDeepBranch{}
	v130 := NewPopulatedDeepTree(r)
	this.Left = *v130
	v131 := NewPopulatedDeepTree(r)
	this.Right = *v131
	return this
}

func NewPopulatedDeepLeaf(r randy) *DeepLeaf {
	this := &DeepLeaf{}
	v132 := NewPopulatedTree(r)
	this.Tree = *v132
	return this
}

func NewPopulatedNil(r randy) *Nil {
	this := &Nil{}
	return this
}

type randy interface {
	Float32() float32
	Float64() float64
	Int63() int64
	Int31() int32
	Uint32() uint32
	Intn(n int) int
}

func randUTF8Rune(r randy) rune {
	res := rune(r.Uint32() % 1112064)
	if 55296 <= res {
		res += 2047
	}
	return res
}
func randString(r randy) string {
	v133 := r.Intn(100)
	tmps := make([]rune, v133)
	for i := 0; i < v133; i++ {
		tmps[i] = randUTF8Rune(r)
	}
	return string(tmps)
}
func (this *NidOptNative) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings1.Join([]string{`&test.NidOptNative{` + `Field1:` + fmt1.Sprintf("%#v", this.Field1), `Field2:` + fmt1.Sprintf("%#v", this.Field2), `Field3:` + fmt1.Sprintf("%#v", this.Field3), `Field4:` + fmt1.Sprintf("%#v", this.Field4), `Field5:` + fmt1.Sprintf("%#v", this.Field5), `Field6:` + fmt1.Sprintf("%#v", this.Field6), `Field7:` + fmt1.Sprintf("%#v", this.Field7), `Field8:` + fmt1.Sprintf("%#v", this.Field8), `Field9:` + fmt1.Sprintf("%#v", this.Field9), `Field10:` + fmt1.Sprintf("%#v", this.Field10), `Field11:` + fmt1.Sprintf("%#v", this.Field11), `Field12:` + fmt1.Sprintf("%#v", this.Field12), `Field13:` + fmt1.Sprintf("%#v", this.Field13), `Field14:` + fmt1.Sprintf("%#v", this.Field14), `Field15:` + fmt1.Sprintf("%#v", this.Field15) + `}`}, ", ")
	return s
}
func (this *NinOptNative) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings1.Join([]string{`&test.NinOptNative{` + `Field1:` + valueToGoString(this.Field1, "float64"), `Field2:` + valueToGoString(this.Field2, "float32"), `Field3:` + valueToGoString(this.Field3, "int32"), `Field4:` + valueToGoString(this.Field4, "int64"), `Field5:` + valueToGoString(this.Field5, "uint32"), `Field6:` + valueToGoString(this.Field6, "uint64"), `Field7:` + valueToGoString(this.Field7, "int32"), `Field8:` + valueToGoString(this.Field8, "int64"), `Field9:` + valueToGoString(this.Field9, "uint32"), `Field10:` + valueToGoString(this.Field10, "int32"), `Field11:` + valueToGoString(this.Field11, "uint64"), `Field12:` + valueToGoString(this.Field12, "int64"), `Field13:` + valueToGoString(this.Field13, "bool"), `Field14:` + valueToGoString(this.Field14, "string"), `Field15:` + valueToGoString(this.Field15, "byte") + `}`}, ", ")
	return s
}
func (this *NidRepNative) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings1.Join([]string{`&test.NidRepNative{` + `Field1:` + fmt1.Sprintf("%#v", this.Field1), `Field2:` + fmt1.Sprintf("%#v", this.Field2), `Field3:` + fmt1.Sprintf("%#v", this.Field3), `Field4:` + fmt1.Sprintf("%#v", this.Field4), `Field5:` + fmt1.Sprintf("%#v", this.Field5), `Field6:` + fmt1.Sprintf("%#v", this.Field6), `Field7:` + fmt1.Sprintf("%#v", this.Field7), `Field8:` + fmt1.Sprintf("%#v", this.Field8), `Field9:` + fmt1.Sprintf("%#v", this.Field9), `Field10:` + fmt1.Sprintf("%#v", this.Field10), `Field11:` + fmt1.Sprintf("%#v", this.Field11), `Field12:` + fmt1.Sprintf("%#v", this.Field12), `Field13:` + fmt1.Sprintf("%#v", this.Field13), `Field14:` + fmt1.Sprintf("%#v", this.Field14), `Field15:` + fmt1.Sprintf("%#v", this.Field15) + `}`}, ", ")
	return s
}
func (this *NinRepNative) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings1.Join([]string{`&test.NinRepNative{` + `Field1:` + fmt1.Sprintf("%#v", this.Field1), `Field2:` + fmt1.Sprintf("%#v", this.Field2), `Field3:` + fmt1.Sprintf("%#v", this.Field3), `Field4:` + fmt1.Sprintf("%#v", this.Field4), `Field5:` + fmt1.Sprintf("%#v", this.Field5), `Field6:` + fmt1.Sprintf("%#v", this.Field6), `Field7:` + fmt1.Sprintf("%#v", this.Field7), `Field8:` + fmt1.Sprintf("%#v", this.Field8), `Field9:` + fmt1.Sprintf("%#v", this.Field9), `Field10:` + fmt1.Sprintf("%#v", this.Field10), `Field11:` + fmt1.Sprintf("%#v", this.Field11), `Field12:` + fmt1.Sprintf("%#v", this.Field12), `Field13:` + fmt1.Sprintf("%#v", this.Field13), `Field14:` + fmt1.Sprintf("%#v", this.Field14), `Field15:` + fmt1.Sprintf("%#v", this.Field15) + `}`}, ", ")
	return s
}
func (this *NidRepPackedNative) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings1.Join([]string{`&test.NidRepPackedNative{` + `Field3:` + fmt1.Sprintf("%#v", this.Field3), `Field4:` + fmt1.Sprintf("%#v", this.Field4), `Field13:` + fmt1.Sprintf("%#v", this.Field13) + `}`}, ", ")
	return s
}
func (this *NinRepPackedNative) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings1.Join([]string{`&test.NinRepPackedNative{` + `Field3:` + fmt1.Sprintf("%#v", this.Field3), `Field4:` + fmt1.Sprintf("%#v", this.Field4), `Field13:` + fmt1.Sprintf("%#v", this.Field13) + `}`}, ", ")
	return s
}
func (this *NidOptStruct) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings1.Join([]string{`&test.NidOptStruct{` + `Field1:` + fmt1.Sprintf("%#v", this.Field1), `Field2:` + fmt1.Sprintf("%#v", this.Field2), `Field3:` + strings1.Replace(this.Field3.GoString(), `&`, ``, 1), `Field4:` + strings1.Replace(this.Field4.GoString(), `&`, ``, 1), `Field6:` + fmt1.Sprintf("%#v", this.Field6), `Field7:` + fmt1.Sprintf("%#v", this.Field7), `Field8:` + strings1.Replace(this.Field8.GoString(), `&`, ``, 1), `Field13:` + fmt1.Sprintf("%#v", this.Field13), `Field14:` + fmt1.Sprintf("%#v", this.Field14), `Field15:` + fmt1.Sprintf("%#v", this.Field15) + `}`}, ", ")
	return s
}
func (this *NinOptStruct) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings1.Join([]string{`&test.NinOptStruct{` + `Field1:` + valueToGoString(this.Field1, "float64"), `Field2:` + valueToGoString(this.Field2, "float32"), `Field3:` + fmt1.Sprintf("%#v", this.Field3), `Field4:` + fmt1.Sprintf("%#v", this.Field4), `Field6:` + valueToGoString(this.Field6, "uint64"), `Field7:` + valueToGoString(this.Field7, "int32"), `Field8:` + fmt1.Sprintf("%#v", this.Field8), `Field13:` + valueToGoString(this.Field13, "bool"), `Field14:` + valueToGoString(this.Field14, "string"), `Field15:` + valueToGoString(this.Field15, "byte") + `}`}, ", ")
	return s
}
func (this *NidRepStruct) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings1.Join([]string{`&test.NidRepStruct{` + `Field1:` + fmt1.Sprintf("%#v", this.Field1), `Field2:` + fmt1.Sprintf("%#v", this.Field2), `Field3:` + strings1.Replace(fmt1.Sprintf("%#v", this.Field3), `&`, ``, 1), `Field4:` + strings1.Replace(fmt1.Sprintf("%#v", this.Field4), `&`, ``, 1), `Field6:` + fmt1.Sprintf("%#v", this.Field6), `Field7:` + fmt1.Sprintf("%#v", this.Field7), `Field8:` + strings1.Replace(fmt1.Sprintf("%#v", this.Field8), `&`, ``, 1), `Field13:` + fmt1.Sprintf("%#v", this.Field13), `Field14:` + fmt1.Sprintf("%#v", this.Field14), `Field15:` + fmt1.Sprintf("%#v", this.Field15) + `}`}, ", ")
	return s
}
func (this *NinRepStruct) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings1.Join([]string{`&test.NinRepStruct{` + `Field1:` + fmt1.Sprintf("%#v", this.Field1), `Field2:` + fmt1.Sprintf("%#v", this.Field2), `Field3:` + fmt1.Sprintf("%#v", this.Field3), `Field4:` + fmt1.Sprintf("%#v", this.Field4), `Field6:` + fmt1.Sprintf("%#v", this.Field6), `Field7:` + fmt1.Sprintf("%#v", this.Field7), `Field8:` + fmt1.Sprintf("%#v", this.Field8), `Field13:` + fmt1.Sprintf("%#v", this.Field13), `Field14:` + fmt1.Sprintf("%#v", this.Field14), `Field15:` + fmt1.Sprintf("%#v", this.Field15) + `}`}, ", ")
	return s
}
func (this *NidEmbeddedStruct) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings1.Join([]string{`&test.NidEmbeddedStruct{` + `NidOptNative:` + strings1.Replace(this.NidOptNative.GoString(), `&`, ``, 1), `Field200:` + strings1.Replace(this.Field200.GoString(), `&`, ``, 1), `Field210:` + fmt1.Sprintf("%#v", this.Field210) + `}`}, ", ")
	return s
}
func (this *NinEmbeddedStruct) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings1.Join([]string{`&test.NinEmbeddedStruct{` + `NidOptNative:` + fmt1.Sprintf("%#v", this.NidOptNative), `Field200:` + fmt1.Sprintf("%#v", this.Field200), `Field210:` + valueToGoString(this.Field210, "bool") + `}`}, ", ")
	return s
}
func (this *NidNestedStruct) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings1.Join([]string{`&test.NidNestedStruct{` + `Field1:` + strings1.Replace(this.Field1.GoString(), `&`, ``, 1), `Field2:` + strings1.Replace(fmt1.Sprintf("%#v", this.Field2), `&`, ``, 1) + `}`}, ", ")
	return s
}
func (this *NinNestedStruct) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings1.Join([]string{`&test.NinNestedStruct{` + `Field1:` + fmt1.Sprintf("%#v", this.Field1), `Field2:` + fmt1.Sprintf("%#v", this.Field2) + `}`}, ", ")
	return s
}
func (this *NidOptCustom) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings1.Join([]string{`&test.NidOptCustom{` + `Id:` + fmt1.Sprintf("%#v", this.Id), `Value:` + fmt1.Sprintf("%#v", this.Value) + `}`}, ", ")
	return s
}
func (this *NinOptCustom) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings1.Join([]string{`&test.NinOptCustom{` + `Id:` + valueToGoString(this.Id, "code_google_com_p_gogoprotobuf_test_custom.Uuid"), `Value:` + valueToGoString(this.Value, "code_google_com_p_gogoprotobuf_test_custom.Uint128") + `}`}, ", ")
	return s
}
func (this *NidRepCustom) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings1.Join([]string{`&test.NidRepCustom{` + `Id:` + fmt1.Sprintf("%#v", this.Id), `Value:` + fmt1.Sprintf("%#v", this.Value) + `}`}, ", ")
	return s
}
func (this *NinRepCustom) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings1.Join([]string{`&test.NinRepCustom{` + `Id:` + fmt1.Sprintf("%#v", this.Id), `Value:` + fmt1.Sprintf("%#v", this.Value) + `}`}, ", ")
	return s
}
func (this *NinOptNativeUnion) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings1.Join([]string{`&test.NinOptNativeUnion{` + `Field1:` + valueToGoString(this.Field1, "float64"), `Field2:` + valueToGoString(this.Field2, "float32"), `Field3:` + valueToGoString(this.Field3, "int32"), `Field4:` + valueToGoString(this.Field4, "int64"), `Field5:` + valueToGoString(this.Field5, "uint32"), `Field6:` + valueToGoString(this.Field6, "uint64"), `Field13:` + valueToGoString(this.Field13, "bool"), `Field14:` + valueToGoString(this.Field14, "string"), `Field15:` + valueToGoString(this.Field15, "byte") + `}`}, ", ")
	return s
}
func (this *NinOptStructUnion) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings1.Join([]string{`&test.NinOptStructUnion{` + `Field1:` + valueToGoString(this.Field1, "float64"), `Field2:` + valueToGoString(this.Field2, "float32"), `Field3:` + fmt1.Sprintf("%#v", this.Field3), `Field4:` + fmt1.Sprintf("%#v", this.Field4), `Field6:` + valueToGoString(this.Field6, "uint64"), `Field7:` + valueToGoString(this.Field7, "int32"), `Field13:` + valueToGoString(this.Field13, "bool"), `Field14:` + valueToGoString(this.Field14, "string"), `Field15:` + valueToGoString(this.Field15, "byte") + `}`}, ", ")
	return s
}
func (this *NinEmbeddedStructUnion) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings1.Join([]string{`&test.NinEmbeddedStructUnion{` + `NidOptNative:` + fmt1.Sprintf("%#v", this.NidOptNative), `Field200:` + fmt1.Sprintf("%#v", this.Field200), `Field210:` + valueToGoString(this.Field210, "bool") + `}`}, ", ")
	return s
}
func (this *NinNestedStructUnion) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings1.Join([]string{`&test.NinNestedStructUnion{` + `Field1:` + fmt1.Sprintf("%#v", this.Field1), `Field2:` + fmt1.Sprintf("%#v", this.Field2), `Field3:` + fmt1.Sprintf("%#v", this.Field3) + `}`}, ", ")
	return s
}
func (this *Tree) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings1.Join([]string{`&test.Tree{` + `Or:` + fmt1.Sprintf("%#v", this.Or), `And:` + fmt1.Sprintf("%#v", this.And), `Leaf:` + fmt1.Sprintf("%#v", this.Leaf) + `}`}, ", ")
	return s
}
func (this *OrBranch) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings1.Join([]string{`&test.OrBranch{` + `Left:` + strings1.Replace(this.Left.GoString(), `&`, ``, 1), `Right:` + strings1.Replace(this.Right.GoString(), `&`, ``, 1) + `}`}, ", ")
	return s
}
func (this *AndBranch) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings1.Join([]string{`&test.AndBranch{` + `Left:` + strings1.Replace(this.Left.GoString(), `&`, ``, 1), `Right:` + strings1.Replace(this.Right.GoString(), `&`, ``, 1) + `}`}, ", ")
	return s
}
func (this *Leaf) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings1.Join([]string{`&test.Leaf{` + `Value:` + fmt1.Sprintf("%#v", this.Value), `StrValue:` + fmt1.Sprintf("%#v", this.StrValue) + `}`}, ", ")
	return s
}
func (this *DeepTree) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings1.Join([]string{`&test.DeepTree{` + `Down:` + fmt1.Sprintf("%#v", this.Down), `And:` + fmt1.Sprintf("%#v", this.And), `Leaf:` + fmt1.Sprintf("%#v", this.Leaf) + `}`}, ", ")
	return s
}
func (this *ADeepBranch) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings1.Join([]string{`&test.ADeepBranch{` + `Down:` + strings1.Replace(this.Down.GoString(), `&`, ``, 1) + `}`}, ", ")
	return s
}
func (this *AndDeepBranch) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings1.Join([]string{`&test.AndDeepBranch{` + `Left:` + strings1.Replace(this.Left.GoString(), `&`, ``, 1), `Right:` + strings1.Replace(this.Right.GoString(), `&`, ``, 1) + `}`}, ", ")
	return s
}
func (this *DeepLeaf) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings1.Join([]string{`&test.DeepLeaf{` + `Tree:` + strings1.Replace(this.Tree.GoString(), `&`, ``, 1) + `}`}, ", ")
	return s
}
func (this *Nil) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings1.Join([]string{`&test.Nil{` + `}`}, ", ")
	return s
}
func valueToGoString(v interface{}, typ string) string {
	rv := reflect1.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect1.Indirect(rv).Interface()
	return fmt1.Sprintf("func(v %v) *%v { return &v } ( %#v )", typ, typ, pv)
}

type NidOptNativeFace interface {
	Proto() code_google_com_p_gogoprotobuf_proto.Message
	GetField1() float64
	GetField2() float32
	GetField3() int32
	GetField4() int64
	GetField5() uint32
	GetField6() uint64
	GetField7() int32
	GetField8() int64
	GetField9() uint32
	GetField10() int32
	GetField11() uint64
	GetField12() int64
	GetField13() bool
	GetField14() string
	GetField15() []byte
}

func (this *NidOptNative) Proto() code_google_com_p_gogoprotobuf_proto.Message {
	return this
}

func (this *NidOptNative) TestProto() code_google_com_p_gogoprotobuf_proto.Message {
	return NewNidOptNativeFromFace(this)
}

func (this *NidOptNative) GetField1() float64 {
	return this.Field1
}

func (this *NidOptNative) GetField2() float32 {
	return this.Field2
}

func (this *NidOptNative) GetField3() int32 {
	return this.Field3
}

func (this *NidOptNative) GetField4() int64 {
	return this.Field4
}

func (this *NidOptNative) GetField5() uint32 {
	return this.Field5
}

func (this *NidOptNative) GetField6() uint64 {
	return this.Field6
}

func (this *NidOptNative) GetField7() int32 {
	return this.Field7
}

func (this *NidOptNative) GetField8() int64 {
	return this.Field8
}

func (this *NidOptNative) GetField9() uint32 {
	return this.Field9
}

func (this *NidOptNative) GetField10() int32 {
	return this.Field10
}

func (this *NidOptNative) GetField11() uint64 {
	return this.Field11
}

func (this *NidOptNative) GetField12() int64 {
	return this.Field12
}

func (this *NidOptNative) GetField13() bool {
	return this.Field13
}

func (this *NidOptNative) GetField14() string {
	return this.Field14
}

func (this *NidOptNative) GetField15() []byte {
	return this.Field15
}

func NewNidOptNativeFromFace(that NidOptNativeFace) *NidOptNative {
	this := &NidOptNative{}
	this.Field1 = that.GetField1()
	this.Field2 = that.GetField2()
	this.Field3 = that.GetField3()
	this.Field4 = that.GetField4()
	this.Field5 = that.GetField5()
	this.Field6 = that.GetField6()
	this.Field7 = that.GetField7()
	this.Field8 = that.GetField8()
	this.Field9 = that.GetField9()
	this.Field10 = that.GetField10()
	this.Field11 = that.GetField11()
	this.Field12 = that.GetField12()
	this.Field13 = that.GetField13()
	this.Field14 = that.GetField14()
	this.Field15 = that.GetField15()
	return this
}

type NinOptNativeFace interface {
	Proto() code_google_com_p_gogoprotobuf_proto.Message
	GetField1() *float64
	GetField2() *float32
	GetField3() *int32
	GetField4() *int64
	GetField5() *uint32
	GetField6() *uint64
	GetField7() *int32
	GetField8() *int64
	GetField9() *uint32
	GetField10() *int32
	GetField11() *uint64
	GetField12() *int64
	GetField13() *bool
	GetField14() *string
	GetField15() []byte
}

func (this *NinOptNative) Proto() code_google_com_p_gogoprotobuf_proto.Message {
	return this
}

func (this *NinOptNative) TestProto() code_google_com_p_gogoprotobuf_proto.Message {
	return NewNinOptNativeFromFace(this)
}

func (this *NinOptNative) GetField1() *float64 {
	return this.Field1
}

func (this *NinOptNative) GetField2() *float32 {
	return this.Field2
}

func (this *NinOptNative) GetField3() *int32 {
	return this.Field3
}

func (this *NinOptNative) GetField4() *int64 {
	return this.Field4
}

func (this *NinOptNative) GetField5() *uint32 {
	return this.Field5
}

func (this *NinOptNative) GetField6() *uint64 {
	return this.Field6
}

func (this *NinOptNative) GetField7() *int32 {
	return this.Field7
}

func (this *NinOptNative) GetField8() *int64 {
	return this.Field8
}

func (this *NinOptNative) GetField9() *uint32 {
	return this.Field9
}

func (this *NinOptNative) GetField10() *int32 {
	return this.Field10
}

func (this *NinOptNative) GetField11() *uint64 {
	return this.Field11
}

func (this *NinOptNative) GetField12() *int64 {
	return this.Field12
}

func (this *NinOptNative) GetField13() *bool {
	return this.Field13
}

func (this *NinOptNative) GetField14() *string {
	return this.Field14
}

func (this *NinOptNative) GetField15() []byte {
	return this.Field15
}

func NewNinOptNativeFromFace(that NinOptNativeFace) *NinOptNative {
	this := &NinOptNative{}
	this.Field1 = that.GetField1()
	this.Field2 = that.GetField2()
	this.Field3 = that.GetField3()
	this.Field4 = that.GetField4()
	this.Field5 = that.GetField5()
	this.Field6 = that.GetField6()
	this.Field7 = that.GetField7()
	this.Field8 = that.GetField8()
	this.Field9 = that.GetField9()
	this.Field10 = that.GetField10()
	this.Field11 = that.GetField11()
	this.Field12 = that.GetField12()
	this.Field13 = that.GetField13()
	this.Field14 = that.GetField14()
	this.Field15 = that.GetField15()
	return this
}

type NidRepNativeFace interface {
	Proto() code_google_com_p_gogoprotobuf_proto.Message
	GetField1() []float64
	GetField2() []float32
	GetField3() []int32
	GetField4() []int64
	GetField5() []uint32
	GetField6() []uint64
	GetField7() []int32
	GetField8() []int64
	GetField9() []uint32
	GetField10() []int32
	GetField11() []uint64
	GetField12() []int64
	GetField13() []bool
	GetField14() []string
	GetField15() [][]byte
}

func (this *NidRepNative) Proto() code_google_com_p_gogoprotobuf_proto.Message {
	return this
}

func (this *NidRepNative) TestProto() code_google_com_p_gogoprotobuf_proto.Message {
	return NewNidRepNativeFromFace(this)
}

func (this *NidRepNative) GetField1() []float64 {
	return this.Field1
}

func (this *NidRepNative) GetField2() []float32 {
	return this.Field2
}

func (this *NidRepNative) GetField3() []int32 {
	return this.Field3
}

func (this *NidRepNative) GetField4() []int64 {
	return this.Field4
}

func (this *NidRepNative) GetField5() []uint32 {
	return this.Field5
}

func (this *NidRepNative) GetField6() []uint64 {
	return this.Field6
}

func (this *NidRepNative) GetField7() []int32 {
	return this.Field7
}

func (this *NidRepNative) GetField8() []int64 {
	return this.Field8
}

func (this *NidRepNative) GetField9() []uint32 {
	return this.Field9
}

func (this *NidRepNative) GetField10() []int32 {
	return this.Field10
}

func (this *NidRepNative) GetField11() []uint64 {
	return this.Field11
}

func (this *NidRepNative) GetField12() []int64 {
	return this.Field12
}

func (this *NidRepNative) GetField13() []bool {
	return this.Field13
}

func (this *NidRepNative) GetField14() []string {
	return this.Field14
}

func (this *NidRepNative) GetField15() [][]byte {
	return this.Field15
}

func NewNidRepNativeFromFace(that NidRepNativeFace) *NidRepNative {
	this := &NidRepNative{}
	this.Field1 = that.GetField1()
	this.Field2 = that.GetField2()
	this.Field3 = that.GetField3()
	this.Field4 = that.GetField4()
	this.Field5 = that.GetField5()
	this.Field6 = that.GetField6()
	this.Field7 = that.GetField7()
	this.Field8 = that.GetField8()
	this.Field9 = that.GetField9()
	this.Field10 = that.GetField10()
	this.Field11 = that.GetField11()
	this.Field12 = that.GetField12()
	this.Field13 = that.GetField13()
	this.Field14 = that.GetField14()
	this.Field15 = that.GetField15()
	return this
}

type NinRepNativeFace interface {
	Proto() code_google_com_p_gogoprotobuf_proto.Message
	GetField1() []float64
	GetField2() []float32
	GetField3() []int32
	GetField4() []int64
	GetField5() []uint32
	GetField6() []uint64
	GetField7() []int32
	GetField8() []int64
	GetField9() []uint32
	GetField10() []int32
	GetField11() []uint64
	GetField12() []int64
	GetField13() []bool
	GetField14() []string
	GetField15() [][]byte
}

func (this *NinRepNative) Proto() code_google_com_p_gogoprotobuf_proto.Message {
	return this
}

func (this *NinRepNative) TestProto() code_google_com_p_gogoprotobuf_proto.Message {
	return NewNinRepNativeFromFace(this)
}

func (this *NinRepNative) GetField1() []float64 {
	return this.Field1
}

func (this *NinRepNative) GetField2() []float32 {
	return this.Field2
}

func (this *NinRepNative) GetField3() []int32 {
	return this.Field3
}

func (this *NinRepNative) GetField4() []int64 {
	return this.Field4
}

func (this *NinRepNative) GetField5() []uint32 {
	return this.Field5
}

func (this *NinRepNative) GetField6() []uint64 {
	return this.Field6
}

func (this *NinRepNative) GetField7() []int32 {
	return this.Field7
}

func (this *NinRepNative) GetField8() []int64 {
	return this.Field8
}

func (this *NinRepNative) GetField9() []uint32 {
	return this.Field9
}

func (this *NinRepNative) GetField10() []int32 {
	return this.Field10
}

func (this *NinRepNative) GetField11() []uint64 {
	return this.Field11
}

func (this *NinRepNative) GetField12() []int64 {
	return this.Field12
}

func (this *NinRepNative) GetField13() []bool {
	return this.Field13
}

func (this *NinRepNative) GetField14() []string {
	return this.Field14
}

func (this *NinRepNative) GetField15() [][]byte {
	return this.Field15
}

func NewNinRepNativeFromFace(that NinRepNativeFace) *NinRepNative {
	this := &NinRepNative{}
	this.Field1 = that.GetField1()
	this.Field2 = that.GetField2()
	this.Field3 = that.GetField3()
	this.Field4 = that.GetField4()
	this.Field5 = that.GetField5()
	this.Field6 = that.GetField6()
	this.Field7 = that.GetField7()
	this.Field8 = that.GetField8()
	this.Field9 = that.GetField9()
	this.Field10 = that.GetField10()
	this.Field11 = that.GetField11()
	this.Field12 = that.GetField12()
	this.Field13 = that.GetField13()
	this.Field14 = that.GetField14()
	this.Field15 = that.GetField15()
	return this
}

type NidRepPackedNativeFace interface {
	Proto() code_google_com_p_gogoprotobuf_proto.Message
	GetField3() []int32
	GetField4() []int64
	GetField13() []bool
}

func (this *NidRepPackedNative) Proto() code_google_com_p_gogoprotobuf_proto.Message {
	return this
}

func (this *NidRepPackedNative) TestProto() code_google_com_p_gogoprotobuf_proto.Message {
	return NewNidRepPackedNativeFromFace(this)
}

func (this *NidRepPackedNative) GetField3() []int32 {
	return this.Field3
}

func (this *NidRepPackedNative) GetField4() []int64 {
	return this.Field4
}

func (this *NidRepPackedNative) GetField13() []bool {
	return this.Field13
}

func NewNidRepPackedNativeFromFace(that NidRepPackedNativeFace) *NidRepPackedNative {
	this := &NidRepPackedNative{}
	this.Field3 = that.GetField3()
	this.Field4 = that.GetField4()
	this.Field13 = that.GetField13()
	return this
}

type NinRepPackedNativeFace interface {
	Proto() code_google_com_p_gogoprotobuf_proto.Message
	GetField3() []int32
	GetField4() []int64
	GetField13() []bool
}

func (this *NinRepPackedNative) Proto() code_google_com_p_gogoprotobuf_proto.Message {
	return this
}

func (this *NinRepPackedNative) TestProto() code_google_com_p_gogoprotobuf_proto.Message {
	return NewNinRepPackedNativeFromFace(this)
}

func (this *NinRepPackedNative) GetField3() []int32 {
	return this.Field3
}

func (this *NinRepPackedNative) GetField4() []int64 {
	return this.Field4
}

func (this *NinRepPackedNative) GetField13() []bool {
	return this.Field13
}

func NewNinRepPackedNativeFromFace(that NinRepPackedNativeFace) *NinRepPackedNative {
	this := &NinRepPackedNative{}
	this.Field3 = that.GetField3()
	this.Field4 = that.GetField4()
	this.Field13 = that.GetField13()
	return this
}

type NidOptStructFace interface {
	Proto() code_google_com_p_gogoprotobuf_proto.Message
	GetField1() float64
	GetField2() float32
	GetField3() NidOptNative
	GetField4() NinOptNative
	GetField6() uint64
	GetField7() int32
	GetField8() NidOptNative
	GetField13() bool
	GetField14() string
	GetField15() []byte
}

func (this *NidOptStruct) Proto() code_google_com_p_gogoprotobuf_proto.Message {
	return this
}

func (this *NidOptStruct) TestProto() code_google_com_p_gogoprotobuf_proto.Message {
	return NewNidOptStructFromFace(this)
}

func (this *NidOptStruct) GetField1() float64 {
	return this.Field1
}

func (this *NidOptStruct) GetField2() float32 {
	return this.Field2
}

func (this *NidOptStruct) GetField3() NidOptNative {
	return this.Field3
}

func (this *NidOptStruct) GetField4() NinOptNative {
	return this.Field4
}

func (this *NidOptStruct) GetField6() uint64 {
	return this.Field6
}

func (this *NidOptStruct) GetField7() int32 {
	return this.Field7
}

func (this *NidOptStruct) GetField8() NidOptNative {
	return this.Field8
}

func (this *NidOptStruct) GetField13() bool {
	return this.Field13
}

func (this *NidOptStruct) GetField14() string {
	return this.Field14
}

func (this *NidOptStruct) GetField15() []byte {
	return this.Field15
}

func NewNidOptStructFromFace(that NidOptStructFace) *NidOptStruct {
	this := &NidOptStruct{}
	this.Field1 = that.GetField1()
	this.Field2 = that.GetField2()
	this.Field3 = that.GetField3()
	this.Field4 = that.GetField4()
	this.Field6 = that.GetField6()
	this.Field7 = that.GetField7()
	this.Field8 = that.GetField8()
	this.Field13 = that.GetField13()
	this.Field14 = that.GetField14()
	this.Field15 = that.GetField15()
	return this
}

type NinOptStructFace interface {
	Proto() code_google_com_p_gogoprotobuf_proto.Message
	GetField1() *float64
	GetField2() *float32
	GetField3() *NidOptNative
	GetField4() *NinOptNative
	GetField6() *uint64
	GetField7() *int32
	GetField8() *NidOptNative
	GetField13() *bool
	GetField14() *string
	GetField15() []byte
}

func (this *NinOptStruct) Proto() code_google_com_p_gogoprotobuf_proto.Message {
	return this
}

func (this *NinOptStruct) TestProto() code_google_com_p_gogoprotobuf_proto.Message {
	return NewNinOptStructFromFace(this)
}

func (this *NinOptStruct) GetField1() *float64 {
	return this.Field1
}

func (this *NinOptStruct) GetField2() *float32 {
	return this.Field2
}

func (this *NinOptStruct) GetField3() *NidOptNative {
	return this.Field3
}

func (this *NinOptStruct) GetField4() *NinOptNative {
	return this.Field4
}

func (this *NinOptStruct) GetField6() *uint64 {
	return this.Field6
}

func (this *NinOptStruct) GetField7() *int32 {
	return this.Field7
}

func (this *NinOptStruct) GetField8() *NidOptNative {
	return this.Field8
}

func (this *NinOptStruct) GetField13() *bool {
	return this.Field13
}

func (this *NinOptStruct) GetField14() *string {
	return this.Field14
}

func (this *NinOptStruct) GetField15() []byte {
	return this.Field15
}

func NewNinOptStructFromFace(that NinOptStructFace) *NinOptStruct {
	this := &NinOptStruct{}
	this.Field1 = that.GetField1()
	this.Field2 = that.GetField2()
	this.Field3 = that.GetField3()
	this.Field4 = that.GetField4()
	this.Field6 = that.GetField6()
	this.Field7 = that.GetField7()
	this.Field8 = that.GetField8()
	this.Field13 = that.GetField13()
	this.Field14 = that.GetField14()
	this.Field15 = that.GetField15()
	return this
}

type NidRepStructFace interface {
	Proto() code_google_com_p_gogoprotobuf_proto.Message
	GetField1() []float64
	GetField2() []float32
	GetField3() []NidOptNative
	GetField4() []NinOptNative
	GetField6() []uint64
	GetField7() []int32
	GetField8() []NidOptNative
	GetField13() []bool
	GetField14() []string
	GetField15() [][]byte
}

func (this *NidRepStruct) Proto() code_google_com_p_gogoprotobuf_proto.Message {
	return this
}

func (this *NidRepStruct) TestProto() code_google_com_p_gogoprotobuf_proto.Message {
	return NewNidRepStructFromFace(this)
}

func (this *NidRepStruct) GetField1() []float64 {
	return this.Field1
}

func (this *NidRepStruct) GetField2() []float32 {
	return this.Field2
}

func (this *NidRepStruct) GetField3() []NidOptNative {
	return this.Field3
}

func (this *NidRepStruct) GetField4() []NinOptNative {
	return this.Field4
}

func (this *NidRepStruct) GetField6() []uint64 {
	return this.Field6
}

func (this *NidRepStruct) GetField7() []int32 {
	return this.Field7
}

func (this *NidRepStruct) GetField8() []NidOptNative {
	return this.Field8
}

func (this *NidRepStruct) GetField13() []bool {
	return this.Field13
}

func (this *NidRepStruct) GetField14() []string {
	return this.Field14
}

func (this *NidRepStruct) GetField15() [][]byte {
	return this.Field15
}

func NewNidRepStructFromFace(that NidRepStructFace) *NidRepStruct {
	this := &NidRepStruct{}
	this.Field1 = that.GetField1()
	this.Field2 = that.GetField2()
	this.Field3 = that.GetField3()
	this.Field4 = that.GetField4()
	this.Field6 = that.GetField6()
	this.Field7 = that.GetField7()
	this.Field8 = that.GetField8()
	this.Field13 = that.GetField13()
	this.Field14 = that.GetField14()
	this.Field15 = that.GetField15()
	return this
}

type NinRepStructFace interface {
	Proto() code_google_com_p_gogoprotobuf_proto.Message
	GetField1() []float64
	GetField2() []float32
	GetField3() []*NidOptNative
	GetField4() []*NinOptNative
	GetField6() []uint64
	GetField7() []int32
	GetField8() []*NidOptNative
	GetField13() []bool
	GetField14() []string
	GetField15() [][]byte
}

func (this *NinRepStruct) Proto() code_google_com_p_gogoprotobuf_proto.Message {
	return this
}

func (this *NinRepStruct) TestProto() code_google_com_p_gogoprotobuf_proto.Message {
	return NewNinRepStructFromFace(this)
}

func (this *NinRepStruct) GetField1() []float64 {
	return this.Field1
}

func (this *NinRepStruct) GetField2() []float32 {
	return this.Field2
}

func (this *NinRepStruct) GetField3() []*NidOptNative {
	return this.Field3
}

func (this *NinRepStruct) GetField4() []*NinOptNative {
	return this.Field4
}

func (this *NinRepStruct) GetField6() []uint64 {
	return this.Field6
}

func (this *NinRepStruct) GetField7() []int32 {
	return this.Field7
}

func (this *NinRepStruct) GetField8() []*NidOptNative {
	return this.Field8
}

func (this *NinRepStruct) GetField13() []bool {
	return this.Field13
}

func (this *NinRepStruct) GetField14() []string {
	return this.Field14
}

func (this *NinRepStruct) GetField15() [][]byte {
	return this.Field15
}

func NewNinRepStructFromFace(that NinRepStructFace) *NinRepStruct {
	this := &NinRepStruct{}
	this.Field1 = that.GetField1()
	this.Field2 = that.GetField2()
	this.Field3 = that.GetField3()
	this.Field4 = that.GetField4()
	this.Field6 = that.GetField6()
	this.Field7 = that.GetField7()
	this.Field8 = that.GetField8()
	this.Field13 = that.GetField13()
	this.Field14 = that.GetField14()
	this.Field15 = that.GetField15()
	return this
}

type NidEmbeddedStructFace interface {
	Proto() code_google_com_p_gogoprotobuf_proto.Message
	GetNidOptNative() NidOptNative
	GetField200() NidOptNative
	GetField210() bool
}

func (this *NidEmbeddedStruct) Proto() code_google_com_p_gogoprotobuf_proto.Message {
	return this
}

func (this *NidEmbeddedStruct) TestProto() code_google_com_p_gogoprotobuf_proto.Message {
	return NewNidEmbeddedStructFromFace(this)
}

func (this *NidEmbeddedStruct) GetNidOptNative() NidOptNative {
	return this.NidOptNative
}

func (this *NidEmbeddedStruct) GetField200() NidOptNative {
	return this.Field200
}

func (this *NidEmbeddedStruct) GetField210() bool {
	return this.Field210
}

func NewNidEmbeddedStructFromFace(that NidEmbeddedStructFace) *NidEmbeddedStruct {
	this := &NidEmbeddedStruct{}
	this.NidOptNative = that.GetNidOptNative()
	this.Field200 = that.GetField200()
	this.Field210 = that.GetField210()
	return this
}

type NinEmbeddedStructFace interface {
	Proto() code_google_com_p_gogoprotobuf_proto.Message
	GetNidOptNative() *NidOptNative
	GetField200() *NidOptNative
	GetField210() *bool
}

func (this *NinEmbeddedStruct) Proto() code_google_com_p_gogoprotobuf_proto.Message {
	return this
}

func (this *NinEmbeddedStruct) TestProto() code_google_com_p_gogoprotobuf_proto.Message {
	return NewNinEmbeddedStructFromFace(this)
}

func (this *NinEmbeddedStruct) GetNidOptNative() *NidOptNative {
	return this.NidOptNative
}

func (this *NinEmbeddedStruct) GetField200() *NidOptNative {
	return this.Field200
}

func (this *NinEmbeddedStruct) GetField210() *bool {
	return this.Field210
}

func NewNinEmbeddedStructFromFace(that NinEmbeddedStructFace) *NinEmbeddedStruct {
	this := &NinEmbeddedStruct{}
	this.NidOptNative = that.GetNidOptNative()
	this.Field200 = that.GetField200()
	this.Field210 = that.GetField210()
	return this
}

type NidNestedStructFace interface {
	Proto() code_google_com_p_gogoprotobuf_proto.Message
	GetField1() NidOptStruct
	GetField2() []NidRepStruct
}

func (this *NidNestedStruct) Proto() code_google_com_p_gogoprotobuf_proto.Message {
	return this
}

func (this *NidNestedStruct) TestProto() code_google_com_p_gogoprotobuf_proto.Message {
	return NewNidNestedStructFromFace(this)
}

func (this *NidNestedStruct) GetField1() NidOptStruct {
	return this.Field1
}

func (this *NidNestedStruct) GetField2() []NidRepStruct {
	return this.Field2
}

func NewNidNestedStructFromFace(that NidNestedStructFace) *NidNestedStruct {
	this := &NidNestedStruct{}
	this.Field1 = that.GetField1()
	this.Field2 = that.GetField2()
	return this
}

type NinNestedStructFace interface {
	Proto() code_google_com_p_gogoprotobuf_proto.Message
	GetField1() *NidOptStruct
	GetField2() []*NidRepStruct
}

func (this *NinNestedStruct) Proto() code_google_com_p_gogoprotobuf_proto.Message {
	return this
}

func (this *NinNestedStruct) TestProto() code_google_com_p_gogoprotobuf_proto.Message {
	return NewNinNestedStructFromFace(this)
}

func (this *NinNestedStruct) GetField1() *NidOptStruct {
	return this.Field1
}

func (this *NinNestedStruct) GetField2() []*NidRepStruct {
	return this.Field2
}

func NewNinNestedStructFromFace(that NinNestedStructFace) *NinNestedStruct {
	this := &NinNestedStruct{}
	this.Field1 = that.GetField1()
	this.Field2 = that.GetField2()
	return this
}

type NidOptCustomFace interface {
	Proto() code_google_com_p_gogoprotobuf_proto.Message
	GetId() code_google_com_p_gogoprotobuf_test_custom.Uuid
	GetValue() code_google_com_p_gogoprotobuf_test_custom.Uint128
}

func (this *NidOptCustom) Proto() code_google_com_p_gogoprotobuf_proto.Message {
	return this
}

func (this *NidOptCustom) TestProto() code_google_com_p_gogoprotobuf_proto.Message {
	return NewNidOptCustomFromFace(this)
}

func (this *NidOptCustom) GetId() code_google_com_p_gogoprotobuf_test_custom.Uuid {
	return this.Id
}

func (this *NidOptCustom) GetValue() code_google_com_p_gogoprotobuf_test_custom.Uint128 {
	return this.Value
}

func NewNidOptCustomFromFace(that NidOptCustomFace) *NidOptCustom {
	this := &NidOptCustom{}
	this.Id = that.GetId()
	this.Value = that.GetValue()
	return this
}

type NinOptCustomFace interface {
	Proto() code_google_com_p_gogoprotobuf_proto.Message
	GetId() *code_google_com_p_gogoprotobuf_test_custom.Uuid
	GetValue() *code_google_com_p_gogoprotobuf_test_custom.Uint128
}

func (this *NinOptCustom) Proto() code_google_com_p_gogoprotobuf_proto.Message {
	return this
}

func (this *NinOptCustom) TestProto() code_google_com_p_gogoprotobuf_proto.Message {
	return NewNinOptCustomFromFace(this)
}

func (this *NinOptCustom) GetId() *code_google_com_p_gogoprotobuf_test_custom.Uuid {
	return this.Id
}

func (this *NinOptCustom) GetValue() *code_google_com_p_gogoprotobuf_test_custom.Uint128 {
	return this.Value
}

func NewNinOptCustomFromFace(that NinOptCustomFace) *NinOptCustom {
	this := &NinOptCustom{}
	this.Id = that.GetId()
	this.Value = that.GetValue()
	return this
}

type NidRepCustomFace interface {
	Proto() code_google_com_p_gogoprotobuf_proto.Message
	GetId() []code_google_com_p_gogoprotobuf_test_custom.Uuid
	GetValue() []code_google_com_p_gogoprotobuf_test_custom.Uint128
}

func (this *NidRepCustom) Proto() code_google_com_p_gogoprotobuf_proto.Message {
	return this
}

func (this *NidRepCustom) TestProto() code_google_com_p_gogoprotobuf_proto.Message {
	return NewNidRepCustomFromFace(this)
}

func (this *NidRepCustom) GetId() []code_google_com_p_gogoprotobuf_test_custom.Uuid {
	return this.Id
}

func (this *NidRepCustom) GetValue() []code_google_com_p_gogoprotobuf_test_custom.Uint128 {
	return this.Value
}

func NewNidRepCustomFromFace(that NidRepCustomFace) *NidRepCustom {
	this := &NidRepCustom{}
	this.Id = that.GetId()
	this.Value = that.GetValue()
	return this
}

type NinRepCustomFace interface {
	Proto() code_google_com_p_gogoprotobuf_proto.Message
	GetId() []code_google_com_p_gogoprotobuf_test_custom.Uuid
	GetValue() []code_google_com_p_gogoprotobuf_test_custom.Uint128
}

func (this *NinRepCustom) Proto() code_google_com_p_gogoprotobuf_proto.Message {
	return this
}

func (this *NinRepCustom) TestProto() code_google_com_p_gogoprotobuf_proto.Message {
	return NewNinRepCustomFromFace(this)
}

func (this *NinRepCustom) GetId() []code_google_com_p_gogoprotobuf_test_custom.Uuid {
	return this.Id
}

func (this *NinRepCustom) GetValue() []code_google_com_p_gogoprotobuf_test_custom.Uint128 {
	return this.Value
}

func NewNinRepCustomFromFace(that NinRepCustomFace) *NinRepCustom {
	this := &NinRepCustom{}
	this.Id = that.GetId()
	this.Value = that.GetValue()
	return this
}

type NinOptNativeUnionFace interface {
	Proto() code_google_com_p_gogoprotobuf_proto.Message
	GetField1() *float64
	GetField2() *float32
	GetField3() *int32
	GetField4() *int64
	GetField5() *uint32
	GetField6() *uint64
	GetField13() *bool
	GetField14() *string
	GetField15() []byte
}

func (this *NinOptNativeUnion) Proto() code_google_com_p_gogoprotobuf_proto.Message {
	return this
}

func (this *NinOptNativeUnion) TestProto() code_google_com_p_gogoprotobuf_proto.Message {
	return NewNinOptNativeUnionFromFace(this)
}

func (this *NinOptNativeUnion) GetField1() *float64 {
	return this.Field1
}

func (this *NinOptNativeUnion) GetField2() *float32 {
	return this.Field2
}

func (this *NinOptNativeUnion) GetField3() *int32 {
	return this.Field3
}

func (this *NinOptNativeUnion) GetField4() *int64 {
	return this.Field4
}

func (this *NinOptNativeUnion) GetField5() *uint32 {
	return this.Field5
}

func (this *NinOptNativeUnion) GetField6() *uint64 {
	return this.Field6
}

func (this *NinOptNativeUnion) GetField13() *bool {
	return this.Field13
}

func (this *NinOptNativeUnion) GetField14() *string {
	return this.Field14
}

func (this *NinOptNativeUnion) GetField15() []byte {
	return this.Field15
}

func NewNinOptNativeUnionFromFace(that NinOptNativeUnionFace) *NinOptNativeUnion {
	this := &NinOptNativeUnion{}
	this.Field1 = that.GetField1()
	this.Field2 = that.GetField2()
	this.Field3 = that.GetField3()
	this.Field4 = that.GetField4()
	this.Field5 = that.GetField5()
	this.Field6 = that.GetField6()
	this.Field13 = that.GetField13()
	this.Field14 = that.GetField14()
	this.Field15 = that.GetField15()
	return this
}

type NinOptStructUnionFace interface {
	Proto() code_google_com_p_gogoprotobuf_proto.Message
	GetField1() *float64
	GetField2() *float32
	GetField3() *NidOptNative
	GetField4() *NinOptNative
	GetField6() *uint64
	GetField7() *int32
	GetField13() *bool
	GetField14() *string
	GetField15() []byte
}

func (this *NinOptStructUnion) Proto() code_google_com_p_gogoprotobuf_proto.Message {
	return this
}

func (this *NinOptStructUnion) TestProto() code_google_com_p_gogoprotobuf_proto.Message {
	return NewNinOptStructUnionFromFace(this)
}

func (this *NinOptStructUnion) GetField1() *float64 {
	return this.Field1
}

func (this *NinOptStructUnion) GetField2() *float32 {
	return this.Field2
}

func (this *NinOptStructUnion) GetField3() *NidOptNative {
	return this.Field3
}

func (this *NinOptStructUnion) GetField4() *NinOptNative {
	return this.Field4
}

func (this *NinOptStructUnion) GetField6() *uint64 {
	return this.Field6
}

func (this *NinOptStructUnion) GetField7() *int32 {
	return this.Field7
}

func (this *NinOptStructUnion) GetField13() *bool {
	return this.Field13
}

func (this *NinOptStructUnion) GetField14() *string {
	return this.Field14
}

func (this *NinOptStructUnion) GetField15() []byte {
	return this.Field15
}

func NewNinOptStructUnionFromFace(that NinOptStructUnionFace) *NinOptStructUnion {
	this := &NinOptStructUnion{}
	this.Field1 = that.GetField1()
	this.Field2 = that.GetField2()
	this.Field3 = that.GetField3()
	this.Field4 = that.GetField4()
	this.Field6 = that.GetField6()
	this.Field7 = that.GetField7()
	this.Field13 = that.GetField13()
	this.Field14 = that.GetField14()
	this.Field15 = that.GetField15()
	return this
}

type NinEmbeddedStructUnionFace interface {
	Proto() code_google_com_p_gogoprotobuf_proto.Message
	GetNidOptNative() *NidOptNative
	GetField200() *NinOptNative
	GetField210() *bool
}

func (this *NinEmbeddedStructUnion) Proto() code_google_com_p_gogoprotobuf_proto.Message {
	return this
}

func (this *NinEmbeddedStructUnion) TestProto() code_google_com_p_gogoprotobuf_proto.Message {
	return NewNinEmbeddedStructUnionFromFace(this)
}

func (this *NinEmbeddedStructUnion) GetNidOptNative() *NidOptNative {
	return this.NidOptNative
}

func (this *NinEmbeddedStructUnion) GetField200() *NinOptNative {
	return this.Field200
}

func (this *NinEmbeddedStructUnion) GetField210() *bool {
	return this.Field210
}

func NewNinEmbeddedStructUnionFromFace(that NinEmbeddedStructUnionFace) *NinEmbeddedStructUnion {
	this := &NinEmbeddedStructUnion{}
	this.NidOptNative = that.GetNidOptNative()
	this.Field200 = that.GetField200()
	this.Field210 = that.GetField210()
	return this
}

type NinNestedStructUnionFace interface {
	Proto() code_google_com_p_gogoprotobuf_proto.Message
	GetField1() *NinOptNativeUnion
	GetField2() *NinOptStructUnion
	GetField3() *NinEmbeddedStructUnion
}

func (this *NinNestedStructUnion) Proto() code_google_com_p_gogoprotobuf_proto.Message {
	return this
}

func (this *NinNestedStructUnion) TestProto() code_google_com_p_gogoprotobuf_proto.Message {
	return NewNinNestedStructUnionFromFace(this)
}

func (this *NinNestedStructUnion) GetField1() *NinOptNativeUnion {
	return this.Field1
}

func (this *NinNestedStructUnion) GetField2() *NinOptStructUnion {
	return this.Field2
}

func (this *NinNestedStructUnion) GetField3() *NinEmbeddedStructUnion {
	return this.Field3
}

func NewNinNestedStructUnionFromFace(that NinNestedStructUnionFace) *NinNestedStructUnion {
	this := &NinNestedStructUnion{}
	this.Field1 = that.GetField1()
	this.Field2 = that.GetField2()
	this.Field3 = that.GetField3()
	return this
}

type TreeFace interface {
	Proto() code_google_com_p_gogoprotobuf_proto.Message
	GetOr() *OrBranch
	GetAnd() *AndBranch
	GetLeaf() *Leaf
}

func (this *Tree) Proto() code_google_com_p_gogoprotobuf_proto.Message {
	return this
}

func (this *Tree) TestProto() code_google_com_p_gogoprotobuf_proto.Message {
	return NewTreeFromFace(this)
}

func (this *Tree) GetOr() *OrBranch {
	return this.Or
}

func (this *Tree) GetAnd() *AndBranch {
	return this.And
}

func (this *Tree) GetLeaf() *Leaf {
	return this.Leaf
}

func NewTreeFromFace(that TreeFace) *Tree {
	this := &Tree{}
	this.Or = that.GetOr()
	this.And = that.GetAnd()
	this.Leaf = that.GetLeaf()
	return this
}

type OrBranchFace interface {
	Proto() code_google_com_p_gogoprotobuf_proto.Message
	GetLeft() Tree
	GetRight() Tree
}

func (this *OrBranch) Proto() code_google_com_p_gogoprotobuf_proto.Message {
	return this
}

func (this *OrBranch) TestProto() code_google_com_p_gogoprotobuf_proto.Message {
	return NewOrBranchFromFace(this)
}

func (this *OrBranch) GetLeft() Tree {
	return this.Left
}

func (this *OrBranch) GetRight() Tree {
	return this.Right
}

func NewOrBranchFromFace(that OrBranchFace) *OrBranch {
	this := &OrBranch{}
	this.Left = that.GetLeft()
	this.Right = that.GetRight()
	return this
}

type AndBranchFace interface {
	Proto() code_google_com_p_gogoprotobuf_proto.Message
	GetLeft() Tree
	GetRight() Tree
}

func (this *AndBranch) Proto() code_google_com_p_gogoprotobuf_proto.Message {
	return this
}

func (this *AndBranch) TestProto() code_google_com_p_gogoprotobuf_proto.Message {
	return NewAndBranchFromFace(this)
}

func (this *AndBranch) GetLeft() Tree {
	return this.Left
}

func (this *AndBranch) GetRight() Tree {
	return this.Right
}

func NewAndBranchFromFace(that AndBranchFace) *AndBranch {
	this := &AndBranch{}
	this.Left = that.GetLeft()
	this.Right = that.GetRight()
	return this
}

type LeafFace interface {
	Proto() code_google_com_p_gogoprotobuf_proto.Message
	GetValue() int64
	GetStrValue() string
}

func (this *Leaf) Proto() code_google_com_p_gogoprotobuf_proto.Message {
	return this
}

func (this *Leaf) TestProto() code_google_com_p_gogoprotobuf_proto.Message {
	return NewLeafFromFace(this)
}

func (this *Leaf) GetValue() int64 {
	return this.Value
}

func (this *Leaf) GetStrValue() string {
	return this.StrValue
}

func NewLeafFromFace(that LeafFace) *Leaf {
	this := &Leaf{}
	this.Value = that.GetValue()
	this.StrValue = that.GetStrValue()
	return this
}

type DeepTreeFace interface {
	Proto() code_google_com_p_gogoprotobuf_proto.Message
	GetDown() *ADeepBranch
	GetAnd() *AndDeepBranch
	GetLeaf() *DeepLeaf
}

func (this *DeepTree) Proto() code_google_com_p_gogoprotobuf_proto.Message {
	return this
}

func (this *DeepTree) TestProto() code_google_com_p_gogoprotobuf_proto.Message {
	return NewDeepTreeFromFace(this)
}

func (this *DeepTree) GetDown() *ADeepBranch {
	return this.Down
}

func (this *DeepTree) GetAnd() *AndDeepBranch {
	return this.And
}

func (this *DeepTree) GetLeaf() *DeepLeaf {
	return this.Leaf
}

func NewDeepTreeFromFace(that DeepTreeFace) *DeepTree {
	this := &DeepTree{}
	this.Down = that.GetDown()
	this.And = that.GetAnd()
	this.Leaf = that.GetLeaf()
	return this
}

type ADeepBranchFace interface {
	Proto() code_google_com_p_gogoprotobuf_proto.Message
	GetDown() DeepTree
}

func (this *ADeepBranch) Proto() code_google_com_p_gogoprotobuf_proto.Message {
	return this
}

func (this *ADeepBranch) TestProto() code_google_com_p_gogoprotobuf_proto.Message {
	return NewADeepBranchFromFace(this)
}

func (this *ADeepBranch) GetDown() DeepTree {
	return this.Down
}

func NewADeepBranchFromFace(that ADeepBranchFace) *ADeepBranch {
	this := &ADeepBranch{}
	this.Down = that.GetDown()
	return this
}

type AndDeepBranchFace interface {
	Proto() code_google_com_p_gogoprotobuf_proto.Message
	GetLeft() DeepTree
	GetRight() DeepTree
}

func (this *AndDeepBranch) Proto() code_google_com_p_gogoprotobuf_proto.Message {
	return this
}

func (this *AndDeepBranch) TestProto() code_google_com_p_gogoprotobuf_proto.Message {
	return NewAndDeepBranchFromFace(this)
}

func (this *AndDeepBranch) GetLeft() DeepTree {
	return this.Left
}

func (this *AndDeepBranch) GetRight() DeepTree {
	return this.Right
}

func NewAndDeepBranchFromFace(that AndDeepBranchFace) *AndDeepBranch {
	this := &AndDeepBranch{}
	this.Left = that.GetLeft()
	this.Right = that.GetRight()
	return this
}

type DeepLeafFace interface {
	Proto() code_google_com_p_gogoprotobuf_proto.Message
	GetTree() Tree
}

func (this *DeepLeaf) Proto() code_google_com_p_gogoprotobuf_proto.Message {
	return this
}

func (this *DeepLeaf) TestProto() code_google_com_p_gogoprotobuf_proto.Message {
	return NewDeepLeafFromFace(this)
}

func (this *DeepLeaf) GetTree() Tree {
	return this.Tree
}

func NewDeepLeafFromFace(that DeepLeafFace) *DeepLeaf {
	this := &DeepLeaf{}
	this.Tree = that.GetTree()
	return this
}

type NilFace interface {
	Proto() code_google_com_p_gogoprotobuf_proto.Message
}

func (this *Nil) Proto() code_google_com_p_gogoprotobuf_proto.Message {
	return this
}

func (this *Nil) TestProto() code_google_com_p_gogoprotobuf_proto.Message {
	return NewNilFromFace(this)
}

func NewNilFromFace(that NilFace) *Nil {
	this := &Nil{}
	return this
}

func (this *NidOptNative) VerboseEqual(that interface{}) error {
	if that == nil {
		if this == nil {
			return nil
		}
		return fmt2.Errorf("that == nil && this != nil")
	}

	that1, ok := that.(*NidOptNative)
	if !ok {
		return fmt2.Errorf("that is not of type *NidOptNative")
	}
	if that1 == nil {
		if this == nil {
			return nil
		}
		return fmt2.Errorf("that is type *NidOptNative but is nil && this != nil")
	} else if this == nil {
		return fmt2.Errorf("that is type *NidOptNativebut is not nil && this == nil")
	}
	if this.Field1 != that1.Field1 {
		return fmt2.Errorf("Field1 this(%v) Not Equal that(%v)", this.Field1, that1.Field1)
	}
	if this.Field2 != that1.Field2 {
		return fmt2.Errorf("Field2 this(%v) Not Equal that(%v)", this.Field2, that1.Field2)
	}
	if this.Field3 != that1.Field3 {
		return fmt2.Errorf("Field3 this(%v) Not Equal that(%v)", this.Field3, that1.Field3)
	}
	if this.Field4 != that1.Field4 {
		return fmt2.Errorf("Field4 this(%v) Not Equal that(%v)", this.Field4, that1.Field4)
	}
	if this.Field5 != that1.Field5 {
		return fmt2.Errorf("Field5 this(%v) Not Equal that(%v)", this.Field5, that1.Field5)
	}
	if this.Field6 != that1.Field6 {
		return fmt2.Errorf("Field6 this(%v) Not Equal that(%v)", this.Field6, that1.Field6)
	}
	if this.Field7 != that1.Field7 {
		return fmt2.Errorf("Field7 this(%v) Not Equal that(%v)", this.Field7, that1.Field7)
	}
	if this.Field8 != that1.Field8 {
		return fmt2.Errorf("Field8 this(%v) Not Equal that(%v)", this.Field8, that1.Field8)
	}
	if this.Field9 != that1.Field9 {
		return fmt2.Errorf("Field9 this(%v) Not Equal that(%v)", this.Field9, that1.Field9)
	}
	if this.Field10 != that1.Field10 {
		return fmt2.Errorf("Field10 this(%v) Not Equal that(%v)", this.Field10, that1.Field10)
	}
	if this.Field11 != that1.Field11 {
		return fmt2.Errorf("Field11 this(%v) Not Equal that(%v)", this.Field11, that1.Field11)
	}
	if this.Field12 != that1.Field12 {
		return fmt2.Errorf("Field12 this(%v) Not Equal that(%v)", this.Field12, that1.Field12)
	}
	if this.Field13 != that1.Field13 {
		return fmt2.Errorf("Field13 this(%v) Not Equal that(%v)", this.Field13, that1.Field13)
	}
	if this.Field14 != that1.Field14 {
		return fmt2.Errorf("Field14 this(%v) Not Equal that(%v)", this.Field14, that1.Field14)
	}
	if !bytes.Equal(this.Field15, that1.Field15) {
		return fmt2.Errorf("Field15 this(%v) Not Equal that(%v)", this.Field15, that1.Field15)
	}
	return nil
}
func (this *NidOptNative) Equal(that interface{}) bool {
	if that == nil {
		if this == nil {
			return true
		}
		return false
	}

	that1, ok := that.(*NidOptNative)
	if !ok {
		return false
	}
	if that1 == nil {
		if this == nil {
			return true
		}
		return false
	} else if this == nil {
		return false
	}
	if this.Field1 != that1.Field1 {
		return false
	}
	if this.Field2 != that1.Field2 {
		return false
	}
	if this.Field3 != that1.Field3 {
		return false
	}
	if this.Field4 != that1.Field4 {
		return false
	}
	if this.Field5 != that1.Field5 {
		return false
	}
	if this.Field6 != that1.Field6 {
		return false
	}
	if this.Field7 != that1.Field7 {
		return false
	}
	if this.Field8 != that1.Field8 {
		return false
	}
	if this.Field9 != that1.Field9 {
		return false
	}
	if this.Field10 != that1.Field10 {
		return false
	}
	if this.Field11 != that1.Field11 {
		return false
	}
	if this.Field12 != that1.Field12 {
		return false
	}
	if this.Field13 != that1.Field13 {
		return false
	}
	if this.Field14 != that1.Field14 {
		return false
	}
	if !bytes.Equal(this.Field15, that1.Field15) {
		return false
	}
	return true
}
func (this *NinOptNative) VerboseEqual(that interface{}) error {
	if that == nil {
		if this == nil {
			return nil
		}
		return fmt2.Errorf("that == nil && this != nil")
	}

	that1, ok := that.(*NinOptNative)
	if !ok {
		return fmt2.Errorf("that is not of type *NinOptNative")
	}
	if that1 == nil {
		if this == nil {
			return nil
		}
		return fmt2.Errorf("that is type *NinOptNative but is nil && this != nil")
	} else if this == nil {
		return fmt2.Errorf("that is type *NinOptNativebut is not nil && this == nil")
	}
	if this.Field1 != nil && that1.Field1 != nil {
		if *this.Field1 != *that1.Field1 {
			return fmt2.Errorf("Field1 this(%v) Not Equal that(%v)", *this.Field1, *that1.Field1)
		}
	} else if this.Field1 != nil {
		return fmt2.Errorf("this.Field1 == nil && that.Field1 != nil")
	} else if that1.Field1 != nil {
		return fmt2.Errorf("Field1 this(%v) Not Equal that(%v)", this.Field1, that1.Field1)
	}
	if this.Field2 != nil && that1.Field2 != nil {
		if *this.Field2 != *that1.Field2 {
			return fmt2.Errorf("Field2 this(%v) Not Equal that(%v)", *this.Field2, *that1.Field2)
		}
	} else if this.Field2 != nil {
		return fmt2.Errorf("this.Field2 == nil && that.Field2 != nil")
	} else if that1.Field2 != nil {
		return fmt2.Errorf("Field2 this(%v) Not Equal that(%v)", this.Field2, that1.Field2)
	}
	if this.Field3 != nil && that1.Field3 != nil {
		if *this.Field3 != *that1.Field3 {
			return fmt2.Errorf("Field3 this(%v) Not Equal that(%v)", *this.Field3, *that1.Field3)
		}
	} else if this.Field3 != nil {
		return fmt2.Errorf("this.Field3 == nil && that.Field3 != nil")
	} else if that1.Field3 != nil {
		return fmt2.Errorf("Field3 this(%v) Not Equal that(%v)", this.Field3, that1.Field3)
	}
	if this.Field4 != nil && that1.Field4 != nil {
		if *this.Field4 != *that1.Field4 {
			return fmt2.Errorf("Field4 this(%v) Not Equal that(%v)", *this.Field4, *that1.Field4)
		}
	} else if this.Field4 != nil {
		return fmt2.Errorf("this.Field4 == nil && that.Field4 != nil")
	} else if that1.Field4 != nil {
		return fmt2.Errorf("Field4 this(%v) Not Equal that(%v)", this.Field4, that1.Field4)
	}
	if this.Field5 != nil && that1.Field5 != nil {
		if *this.Field5 != *that1.Field5 {
			return fmt2.Errorf("Field5 this(%v) Not Equal that(%v)", *this.Field5, *that1.Field5)
		}
	} else if this.Field5 != nil {
		return fmt2.Errorf("this.Field5 == nil && that.Field5 != nil")
	} else if that1.Field5 != nil {
		return fmt2.Errorf("Field5 this(%v) Not Equal that(%v)", this.Field5, that1.Field5)
	}
	if this.Field6 != nil && that1.Field6 != nil {
		if *this.Field6 != *that1.Field6 {
			return fmt2.Errorf("Field6 this(%v) Not Equal that(%v)", *this.Field6, *that1.Field6)
		}
	} else if this.Field6 != nil {
		return fmt2.Errorf("this.Field6 == nil && that.Field6 != nil")
	} else if that1.Field6 != nil {
		return fmt2.Errorf("Field6 this(%v) Not Equal that(%v)", this.Field6, that1.Field6)
	}
	if this.Field7 != nil && that1.Field7 != nil {
		if *this.Field7 != *that1.Field7 {
			return fmt2.Errorf("Field7 this(%v) Not Equal that(%v)", *this.Field7, *that1.Field7)
		}
	} else if this.Field7 != nil {
		return fmt2.Errorf("this.Field7 == nil && that.Field7 != nil")
	} else if that1.Field7 != nil {
		return fmt2.Errorf("Field7 this(%v) Not Equal that(%v)", this.Field7, that1.Field7)
	}
	if this.Field8 != nil && that1.Field8 != nil {
		if *this.Field8 != *that1.Field8 {
			return fmt2.Errorf("Field8 this(%v) Not Equal that(%v)", *this.Field8, *that1.Field8)
		}
	} else if this.Field8 != nil {
		return fmt2.Errorf("this.Field8 == nil && that.Field8 != nil")
	} else if that1.Field8 != nil {
		return fmt2.Errorf("Field8 this(%v) Not Equal that(%v)", this.Field8, that1.Field8)
	}
	if this.Field9 != nil && that1.Field9 != nil {
		if *this.Field9 != *that1.Field9 {
			return fmt2.Errorf("Field9 this(%v) Not Equal that(%v)", *this.Field9, *that1.Field9)
		}
	} else if this.Field9 != nil {
		return fmt2.Errorf("this.Field9 == nil && that.Field9 != nil")
	} else if that1.Field9 != nil {
		return fmt2.Errorf("Field9 this(%v) Not Equal that(%v)", this.Field9, that1.Field9)
	}
	if this.Field10 != nil && that1.Field10 != nil {
		if *this.Field10 != *that1.Field10 {
			return fmt2.Errorf("Field10 this(%v) Not Equal that(%v)", *this.Field10, *that1.Field10)
		}
	} else if this.Field10 != nil {
		return fmt2.Errorf("this.Field10 == nil && that.Field10 != nil")
	} else if that1.Field10 != nil {
		return fmt2.Errorf("Field10 this(%v) Not Equal that(%v)", this.Field10, that1.Field10)
	}
	if this.Field11 != nil && that1.Field11 != nil {
		if *this.Field11 != *that1.Field11 {
			return fmt2.Errorf("Field11 this(%v) Not Equal that(%v)", *this.Field11, *that1.Field11)
		}
	} else if this.Field11 != nil {
		return fmt2.Errorf("this.Field11 == nil && that.Field11 != nil")
	} else if that1.Field11 != nil {
		return fmt2.Errorf("Field11 this(%v) Not Equal that(%v)", this.Field11, that1.Field11)
	}
	if this.Field12 != nil && that1.Field12 != nil {
		if *this.Field12 != *that1.Field12 {
			return fmt2.Errorf("Field12 this(%v) Not Equal that(%v)", *this.Field12, *that1.Field12)
		}
	} else if this.Field12 != nil {
		return fmt2.Errorf("this.Field12 == nil && that.Field12 != nil")
	} else if that1.Field12 != nil {
		return fmt2.Errorf("Field12 this(%v) Not Equal that(%v)", this.Field12, that1.Field12)
	}
	if this.Field13 != nil && that1.Field13 != nil {
		if *this.Field13 != *that1.Field13 {
			return fmt2.Errorf("Field13 this(%v) Not Equal that(%v)", *this.Field13, *that1.Field13)
		}
	} else if this.Field13 != nil {
		return fmt2.Errorf("this.Field13 == nil && that.Field13 != nil")
	} else if that1.Field13 != nil {
		return fmt2.Errorf("Field13 this(%v) Not Equal that(%v)", this.Field13, that1.Field13)
	}
	if this.Field14 != nil && that1.Field14 != nil {
		if *this.Field14 != *that1.Field14 {
			return fmt2.Errorf("Field14 this(%v) Not Equal that(%v)", *this.Field14, *that1.Field14)
		}
	} else if this.Field14 != nil {
		return fmt2.Errorf("this.Field14 == nil && that.Field14 != nil")
	} else if that1.Field14 != nil {
		return fmt2.Errorf("Field14 this(%v) Not Equal that(%v)", this.Field14, that1.Field14)
	}
	if !bytes.Equal(this.Field15, that1.Field15) {
		return fmt2.Errorf("Field15 this(%v) Not Equal that(%v)", this.Field15, that1.Field15)
	}
	return nil
}
func (this *NinOptNative) Equal(that interface{}) bool {
	if that == nil {
		if this == nil {
			return true
		}
		return false
	}

	that1, ok := that.(*NinOptNative)
	if !ok {
		return false
	}
	if that1 == nil {
		if this == nil {
			return true
		}
		return false
	} else if this == nil {
		return false
	}
	if this.Field1 != nil && that1.Field1 != nil {
		if *this.Field1 != *that1.Field1 {
			return false
		}
	} else if this.Field1 != nil {
		return false
	} else if that1.Field1 != nil {
		return false
	}
	if this.Field2 != nil && that1.Field2 != nil {
		if *this.Field2 != *that1.Field2 {
			return false
		}
	} else if this.Field2 != nil {
		return false
	} else if that1.Field2 != nil {
		return false
	}
	if this.Field3 != nil && that1.Field3 != nil {
		if *this.Field3 != *that1.Field3 {
			return false
		}
	} else if this.Field3 != nil {
		return false
	} else if that1.Field3 != nil {
		return false
	}
	if this.Field4 != nil && that1.Field4 != nil {
		if *this.Field4 != *that1.Field4 {
			return false
		}
	} else if this.Field4 != nil {
		return false
	} else if that1.Field4 != nil {
		return false
	}
	if this.Field5 != nil && that1.Field5 != nil {
		if *this.Field5 != *that1.Field5 {
			return false
		}
	} else if this.Field5 != nil {
		return false
	} else if that1.Field5 != nil {
		return false
	}
	if this.Field6 != nil && that1.Field6 != nil {
		if *this.Field6 != *that1.Field6 {
			return false
		}
	} else if this.Field6 != nil {
		return false
	} else if that1.Field6 != nil {
		return false
	}
	if this.Field7 != nil && that1.Field7 != nil {
		if *this.Field7 != *that1.Field7 {
			return false
		}
	} else if this.Field7 != nil {
		return false
	} else if that1.Field7 != nil {
		return false
	}
	if this.Field8 != nil && that1.Field8 != nil {
		if *this.Field8 != *that1.Field8 {
			return false
		}
	} else if this.Field8 != nil {
		return false
	} else if that1.Field8 != nil {
		return false
	}
	if this.Field9 != nil && that1.Field9 != nil {
		if *this.Field9 != *that1.Field9 {
			return false
		}
	} else if this.Field9 != nil {
		return false
	} else if that1.Field9 != nil {
		return false
	}
	if this.Field10 != nil && that1.Field10 != nil {
		if *this.Field10 != *that1.Field10 {
			return false
		}
	} else if this.Field10 != nil {
		return false
	} else if that1.Field10 != nil {
		return false
	}
	if this.Field11 != nil && that1.Field11 != nil {
		if *this.Field11 != *that1.Field11 {
			return false
		}
	} else if this.Field11 != nil {
		return false
	} else if that1.Field11 != nil {
		return false
	}
	if this.Field12 != nil && that1.Field12 != nil {
		if *this.Field12 != *that1.Field12 {
			return false
		}
	} else if this.Field12 != nil {
		return false
	} else if that1.Field12 != nil {
		return false
	}
	if this.Field13 != nil && that1.Field13 != nil {
		if *this.Field13 != *that1.Field13 {
			return false
		}
	} else if this.Field13 != nil {
		return false
	} else if that1.Field13 != nil {
		return false
	}
	if this.Field14 != nil && that1.Field14 != nil {
		if *this.Field14 != *that1.Field14 {
			return false
		}
	} else if this.Field14 != nil {
		return false
	} else if that1.Field14 != nil {
		return false
	}
	if !bytes.Equal(this.Field15, that1.Field15) {
		return false
	}
	return true
}
func (this *NidRepNative) VerboseEqual(that interface{}) error {
	if that == nil {
		if this == nil {
			return nil
		}
		return fmt2.Errorf("that == nil && this != nil")
	}

	that1, ok := that.(*NidRepNative)
	if !ok {
		return fmt2.Errorf("that is not of type *NidRepNative")
	}
	if that1 == nil {
		if this == nil {
			return nil
		}
		return fmt2.Errorf("that is type *NidRepNative but is nil && this != nil")
	} else if this == nil {
		return fmt2.Errorf("that is type *NidRepNativebut is not nil && this == nil")
	}
	if len(this.Field1) != len(that1.Field1) {
		return fmt2.Errorf("Field1 this(%v) Not Equal that(%v)", len(this.Field1), len(that1.Field1))
	}
	for i := range this.Field1 {
		if this.Field1[i] != that1.Field1[i] {
			return fmt2.Errorf("Field1 this[%v](%v) Not Equal that[%v](%v)", i, this.Field1[i], i, that1.Field1[i])
		}
	}
	if len(this.Field2) != len(that1.Field2) {
		return fmt2.Errorf("Field2 this(%v) Not Equal that(%v)", len(this.Field2), len(that1.Field2))
	}
	for i := range this.Field2 {
		if this.Field2[i] != that1.Field2[i] {
			return fmt2.Errorf("Field2 this[%v](%v) Not Equal that[%v](%v)", i, this.Field2[i], i, that1.Field2[i])
		}
	}
	if len(this.Field3) != len(that1.Field3) {
		return fmt2.Errorf("Field3 this(%v) Not Equal that(%v)", len(this.Field3), len(that1.Field3))
	}
	for i := range this.Field3 {
		if this.Field3[i] != that1.Field3[i] {
			return fmt2.Errorf("Field3 this[%v](%v) Not Equal that[%v](%v)", i, this.Field3[i], i, that1.Field3[i])
		}
	}
	if len(this.Field4) != len(that1.Field4) {
		return fmt2.Errorf("Field4 this(%v) Not Equal that(%v)", len(this.Field4), len(that1.Field4))
	}
	for i := range this.Field4 {
		if this.Field4[i] != that1.Field4[i] {
			return fmt2.Errorf("Field4 this[%v](%v) Not Equal that[%v](%v)", i, this.Field4[i], i, that1.Field4[i])
		}
	}
	if len(this.Field5) != len(that1.Field5) {
		return fmt2.Errorf("Field5 this(%v) Not Equal that(%v)", len(this.Field5), len(that1.Field5))
	}
	for i := range this.Field5 {
		if this.Field5[i] != that1.Field5[i] {
			return fmt2.Errorf("Field5 this[%v](%v) Not Equal that[%v](%v)", i, this.Field5[i], i, that1.Field5[i])
		}
	}
	if len(this.Field6) != len(that1.Field6) {
		return fmt2.Errorf("Field6 this(%v) Not Equal that(%v)", len(this.Field6), len(that1.Field6))
	}
	for i := range this.Field6 {
		if this.Field6[i] != that1.Field6[i] {
			return fmt2.Errorf("Field6 this[%v](%v) Not Equal that[%v](%v)", i, this.Field6[i], i, that1.Field6[i])
		}
	}
	if len(this.Field7) != len(that1.Field7) {
		return fmt2.Errorf("Field7 this(%v) Not Equal that(%v)", len(this.Field7), len(that1.Field7))
	}
	for i := range this.Field7 {
		if this.Field7[i] != that1.Field7[i] {
			return fmt2.Errorf("Field7 this[%v](%v) Not Equal that[%v](%v)", i, this.Field7[i], i, that1.Field7[i])
		}
	}
	if len(this.Field8) != len(that1.Field8) {
		return fmt2.Errorf("Field8 this(%v) Not Equal that(%v)", len(this.Field8), len(that1.Field8))
	}
	for i := range this.Field8 {
		if this.Field8[i] != that1.Field8[i] {
			return fmt2.Errorf("Field8 this[%v](%v) Not Equal that[%v](%v)", i, this.Field8[i], i, that1.Field8[i])
		}
	}
	if len(this.Field9) != len(that1.Field9) {
		return fmt2.Errorf("Field9 this(%v) Not Equal that(%v)", len(this.Field9), len(that1.Field9))
	}
	for i := range this.Field9 {
		if this.Field9[i] != that1.Field9[i] {
			return fmt2.Errorf("Field9 this[%v](%v) Not Equal that[%v](%v)", i, this.Field9[i], i, that1.Field9[i])
		}
	}
	if len(this.Field10) != len(that1.Field10) {
		return fmt2.Errorf("Field10 this(%v) Not Equal that(%v)", len(this.Field10), len(that1.Field10))
	}
	for i := range this.Field10 {
		if this.Field10[i] != that1.Field10[i] {
			return fmt2.Errorf("Field10 this[%v](%v) Not Equal that[%v](%v)", i, this.Field10[i], i, that1.Field10[i])
		}
	}
	if len(this.Field11) != len(that1.Field11) {
		return fmt2.Errorf("Field11 this(%v) Not Equal that(%v)", len(this.Field11), len(that1.Field11))
	}
	for i := range this.Field11 {
		if this.Field11[i] != that1.Field11[i] {
			return fmt2.Errorf("Field11 this[%v](%v) Not Equal that[%v](%v)", i, this.Field11[i], i, that1.Field11[i])
		}
	}
	if len(this.Field12) != len(that1.Field12) {
		return fmt2.Errorf("Field12 this(%v) Not Equal that(%v)", len(this.Field12), len(that1.Field12))
	}
	for i := range this.Field12 {
		if this.Field12[i] != that1.Field12[i] {
			return fmt2.Errorf("Field12 this[%v](%v) Not Equal that[%v](%v)", i, this.Field12[i], i, that1.Field12[i])
		}
	}
	if len(this.Field13) != len(that1.Field13) {
		return fmt2.Errorf("Field13 this(%v) Not Equal that(%v)", len(this.Field13), len(that1.Field13))
	}
	for i := range this.Field13 {
		if this.Field13[i] != that1.Field13[i] {
			return fmt2.Errorf("Field13 this[%v](%v) Not Equal that[%v](%v)", i, this.Field13[i], i, that1.Field13[i])
		}
	}
	if len(this.Field14) != len(that1.Field14) {
		return fmt2.Errorf("Field14 this(%v) Not Equal that(%v)", len(this.Field14), len(that1.Field14))
	}
	for i := range this.Field14 {
		if this.Field14[i] != that1.Field14[i] {
			return fmt2.Errorf("Field14 this[%v](%v) Not Equal that[%v](%v)", i, this.Field14[i], i, that1.Field14[i])
		}
	}
	if len(this.Field15) != len(that1.Field15) {
		return fmt2.Errorf("Field15 this(%v) Not Equal that(%v)", len(this.Field15), len(that1.Field15))
	}
	for i := range this.Field15 {
		if !bytes.Equal(this.Field15[i], that1.Field15[i]) {
			return fmt2.Errorf("Field15 this[%v](%v) Not Equal that[%v](%v)", i, this.Field15[i], i, that1.Field15[i])
		}
	}
	return nil
}
func (this *NidRepNative) Equal(that interface{}) bool {
	if that == nil {
		if this == nil {
			return true
		}
		return false
	}

	that1, ok := that.(*NidRepNative)
	if !ok {
		return false
	}
	if that1 == nil {
		if this == nil {
			return true
		}
		return false
	} else if this == nil {
		return false
	}
	if len(this.Field1) != len(that1.Field1) {
		return false
	}
	for i := range this.Field1 {
		if this.Field1[i] != that1.Field1[i] {
			return false
		}
	}
	if len(this.Field2) != len(that1.Field2) {
		return false
	}
	for i := range this.Field2 {
		if this.Field2[i] != that1.Field2[i] {
			return false
		}
	}
	if len(this.Field3) != len(that1.Field3) {
		return false
	}
	for i := range this.Field3 {
		if this.Field3[i] != that1.Field3[i] {
			return false
		}
	}
	if len(this.Field4) != len(that1.Field4) {
		return false
	}
	for i := range this.Field4 {
		if this.Field4[i] != that1.Field4[i] {
			return false
		}
	}
	if len(this.Field5) != len(that1.Field5) {
		return false
	}
	for i := range this.Field5 {
		if this.Field5[i] != that1.Field5[i] {
			return false
		}
	}
	if len(this.Field6) != len(that1.Field6) {
		return false
	}
	for i := range this.Field6 {
		if this.Field6[i] != that1.Field6[i] {
			return false
		}
	}
	if len(this.Field7) != len(that1.Field7) {
		return false
	}
	for i := range this.Field7 {
		if this.Field7[i] != that1.Field7[i] {
			return false
		}
	}
	if len(this.Field8) != len(that1.Field8) {
		return false
	}
	for i := range this.Field8 {
		if this.Field8[i] != that1.Field8[i] {
			return false
		}
	}
	if len(this.Field9) != len(that1.Field9) {
		return false
	}
	for i := range this.Field9 {
		if this.Field9[i] != that1.Field9[i] {
			return false
		}
	}
	if len(this.Field10) != len(that1.Field10) {
		return false
	}
	for i := range this.Field10 {
		if this.Field10[i] != that1.Field10[i] {
			return false
		}
	}
	if len(this.Field11) != len(that1.Field11) {
		return false
	}
	for i := range this.Field11 {
		if this.Field11[i] != that1.Field11[i] {
			return false
		}
	}
	if len(this.Field12) != len(that1.Field12) {
		return false
	}
	for i := range this.Field12 {
		if this.Field12[i] != that1.Field12[i] {
			return false
		}
	}
	if len(this.Field13) != len(that1.Field13) {
		return false
	}
	for i := range this.Field13 {
		if this.Field13[i] != that1.Field13[i] {
			return false
		}
	}
	if len(this.Field14) != len(that1.Field14) {
		return false
	}
	for i := range this.Field14 {
		if this.Field14[i] != that1.Field14[i] {
			return false
		}
	}
	if len(this.Field15) != len(that1.Field15) {
		return false
	}
	for i := range this.Field15 {
		if !bytes.Equal(this.Field15[i], that1.Field15[i]) {
			return false
		}
	}
	return true
}
func (this *NinRepNative) VerboseEqual(that interface{}) error {
	if that == nil {
		if this == nil {
			return nil
		}
		return fmt2.Errorf("that == nil && this != nil")
	}

	that1, ok := that.(*NinRepNative)
	if !ok {
		return fmt2.Errorf("that is not of type *NinRepNative")
	}
	if that1 == nil {
		if this == nil {
			return nil
		}
		return fmt2.Errorf("that is type *NinRepNative but is nil && this != nil")
	} else if this == nil {
		return fmt2.Errorf("that is type *NinRepNativebut is not nil && this == nil")
	}
	if len(this.Field1) != len(that1.Field1) {
		return fmt2.Errorf("Field1 this(%v) Not Equal that(%v)", len(this.Field1), len(that1.Field1))
	}
	for i := range this.Field1 {
		if this.Field1[i] != that1.Field1[i] {
			return fmt2.Errorf("Field1 this[%v](%v) Not Equal that[%v](%v)", i, this.Field1[i], i, that1.Field1[i])
		}
	}
	if len(this.Field2) != len(that1.Field2) {
		return fmt2.Errorf("Field2 this(%v) Not Equal that(%v)", len(this.Field2), len(that1.Field2))
	}
	for i := range this.Field2 {
		if this.Field2[i] != that1.Field2[i] {
			return fmt2.Errorf("Field2 this[%v](%v) Not Equal that[%v](%v)", i, this.Field2[i], i, that1.Field2[i])
		}
	}
	if len(this.Field3) != len(that1.Field3) {
		return fmt2.Errorf("Field3 this(%v) Not Equal that(%v)", len(this.Field3), len(that1.Field3))
	}
	for i := range this.Field3 {
		if this.Field3[i] != that1.Field3[i] {
			return fmt2.Errorf("Field3 this[%v](%v) Not Equal that[%v](%v)", i, this.Field3[i], i, that1.Field3[i])
		}
	}
	if len(this.Field4) != len(that1.Field4) {
		return fmt2.Errorf("Field4 this(%v) Not Equal that(%v)", len(this.Field4), len(that1.Field4))
	}
	for i := range this.Field4 {
		if this.Field4[i] != that1.Field4[i] {
			return fmt2.Errorf("Field4 this[%v](%v) Not Equal that[%v](%v)", i, this.Field4[i], i, that1.Field4[i])
		}
	}
	if len(this.Field5) != len(that1.Field5) {
		return fmt2.Errorf("Field5 this(%v) Not Equal that(%v)", len(this.Field5), len(that1.Field5))
	}
	for i := range this.Field5 {
		if this.Field5[i] != that1.Field5[i] {
			return fmt2.Errorf("Field5 this[%v](%v) Not Equal that[%v](%v)", i, this.Field5[i], i, that1.Field5[i])
		}
	}
	if len(this.Field6) != len(that1.Field6) {
		return fmt2.Errorf("Field6 this(%v) Not Equal that(%v)", len(this.Field6), len(that1.Field6))
	}
	for i := range this.Field6 {
		if this.Field6[i] != that1.Field6[i] {
			return fmt2.Errorf("Field6 this[%v](%v) Not Equal that[%v](%v)", i, this.Field6[i], i, that1.Field6[i])
		}
	}
	if len(this.Field7) != len(that1.Field7) {
		return fmt2.Errorf("Field7 this(%v) Not Equal that(%v)", len(this.Field7), len(that1.Field7))
	}
	for i := range this.Field7 {
		if this.Field7[i] != that1.Field7[i] {
			return fmt2.Errorf("Field7 this[%v](%v) Not Equal that[%v](%v)", i, this.Field7[i], i, that1.Field7[i])
		}
	}
	if len(this.Field8) != len(that1.Field8) {
		return fmt2.Errorf("Field8 this(%v) Not Equal that(%v)", len(this.Field8), len(that1.Field8))
	}
	for i := range this.Field8 {
		if this.Field8[i] != that1.Field8[i] {
			return fmt2.Errorf("Field8 this[%v](%v) Not Equal that[%v](%v)", i, this.Field8[i], i, that1.Field8[i])
		}
	}
	if len(this.Field9) != len(that1.Field9) {
		return fmt2.Errorf("Field9 this(%v) Not Equal that(%v)", len(this.Field9), len(that1.Field9))
	}
	for i := range this.Field9 {
		if this.Field9[i] != that1.Field9[i] {
			return fmt2.Errorf("Field9 this[%v](%v) Not Equal that[%v](%v)", i, this.Field9[i], i, that1.Field9[i])
		}
	}
	if len(this.Field10) != len(that1.Field10) {
		return fmt2.Errorf("Field10 this(%v) Not Equal that(%v)", len(this.Field10), len(that1.Field10))
	}
	for i := range this.Field10 {
		if this.Field10[i] != that1.Field10[i] {
			return fmt2.Errorf("Field10 this[%v](%v) Not Equal that[%v](%v)", i, this.Field10[i], i, that1.Field10[i])
		}
	}
	if len(this.Field11) != len(that1.Field11) {
		return fmt2.Errorf("Field11 this(%v) Not Equal that(%v)", len(this.Field11), len(that1.Field11))
	}
	for i := range this.Field11 {
		if this.Field11[i] != that1.Field11[i] {
			return fmt2.Errorf("Field11 this[%v](%v) Not Equal that[%v](%v)", i, this.Field11[i], i, that1.Field11[i])
		}
	}
	if len(this.Field12) != len(that1.Field12) {
		return fmt2.Errorf("Field12 this(%v) Not Equal that(%v)", len(this.Field12), len(that1.Field12))
	}
	for i := range this.Field12 {
		if this.Field12[i] != that1.Field12[i] {
			return fmt2.Errorf("Field12 this[%v](%v) Not Equal that[%v](%v)", i, this.Field12[i], i, that1.Field12[i])
		}
	}
	if len(this.Field13) != len(that1.Field13) {
		return fmt2.Errorf("Field13 this(%v) Not Equal that(%v)", len(this.Field13), len(that1.Field13))
	}
	for i := range this.Field13 {
		if this.Field13[i] != that1.Field13[i] {
			return fmt2.Errorf("Field13 this[%v](%v) Not Equal that[%v](%v)", i, this.Field13[i], i, that1.Field13[i])
		}
	}
	if len(this.Field14) != len(that1.Field14) {
		return fmt2.Errorf("Field14 this(%v) Not Equal that(%v)", len(this.Field14), len(that1.Field14))
	}
	for i := range this.Field14 {
		if this.Field14[i] != that1.Field14[i] {
			return fmt2.Errorf("Field14 this[%v](%v) Not Equal that[%v](%v)", i, this.Field14[i], i, that1.Field14[i])
		}
	}
	if len(this.Field15) != len(that1.Field15) {
		return fmt2.Errorf("Field15 this(%v) Not Equal that(%v)", len(this.Field15), len(that1.Field15))
	}
	for i := range this.Field15 {
		if !bytes.Equal(this.Field15[i], that1.Field15[i]) {
			return fmt2.Errorf("Field15 this[%v](%v) Not Equal that[%v](%v)", i, this.Field15[i], i, that1.Field15[i])
		}
	}
	return nil
}
func (this *NinRepNative) Equal(that interface{}) bool {
	if that == nil {
		if this == nil {
			return true
		}
		return false
	}

	that1, ok := that.(*NinRepNative)
	if !ok {
		return false
	}
	if that1 == nil {
		if this == nil {
			return true
		}
		return false
	} else if this == nil {
		return false
	}
	if len(this.Field1) != len(that1.Field1) {
		return false
	}
	for i := range this.Field1 {
		if this.Field1[i] != that1.Field1[i] {
			return false
		}
	}
	if len(this.Field2) != len(that1.Field2) {
		return false
	}
	for i := range this.Field2 {
		if this.Field2[i] != that1.Field2[i] {
			return false
		}
	}
	if len(this.Field3) != len(that1.Field3) {
		return false
	}
	for i := range this.Field3 {
		if this.Field3[i] != that1.Field3[i] {
			return false
		}
	}
	if len(this.Field4) != len(that1.Field4) {
		return false
	}
	for i := range this.Field4 {
		if this.Field4[i] != that1.Field4[i] {
			return false
		}
	}
	if len(this.Field5) != len(that1.Field5) {
		return false
	}
	for i := range this.Field5 {
		if this.Field5[i] != that1.Field5[i] {
			return false
		}
	}
	if len(this.Field6) != len(that1.Field6) {
		return false
	}
	for i := range this.Field6 {
		if this.Field6[i] != that1.Field6[i] {
			return false
		}
	}
	if len(this.Field7) != len(that1.Field7) {
		return false
	}
	for i := range this.Field7 {
		if this.Field7[i] != that1.Field7[i] {
			return false
		}
	}
	if len(this.Field8) != len(that1.Field8) {
		return false
	}
	for i := range this.Field8 {
		if this.Field8[i] != that1.Field8[i] {
			return false
		}
	}
	if len(this.Field9) != len(that1.Field9) {
		return false
	}
	for i := range this.Field9 {
		if this.Field9[i] != that1.Field9[i] {
			return false
		}
	}
	if len(this.Field10) != len(that1.Field10) {
		return false
	}
	for i := range this.Field10 {
		if this.Field10[i] != that1.Field10[i] {
			return false
		}
	}
	if len(this.Field11) != len(that1.Field11) {
		return false
	}
	for i := range this.Field11 {
		if this.Field11[i] != that1.Field11[i] {
			return false
		}
	}
	if len(this.Field12) != len(that1.Field12) {
		return false
	}
	for i := range this.Field12 {
		if this.Field12[i] != that1.Field12[i] {
			return false
		}
	}
	if len(this.Field13) != len(that1.Field13) {
		return false
	}
	for i := range this.Field13 {
		if this.Field13[i] != that1.Field13[i] {
			return false
		}
	}
	if len(this.Field14) != len(that1.Field14) {
		return false
	}
	for i := range this.Field14 {
		if this.Field14[i] != that1.Field14[i] {
			return false
		}
	}
	if len(this.Field15) != len(that1.Field15) {
		return false
	}
	for i := range this.Field15 {
		if !bytes.Equal(this.Field15[i], that1.Field15[i]) {
			return false
		}
	}
	return true
}
func (this *NidRepPackedNative) VerboseEqual(that interface{}) error {
	if that == nil {
		if this == nil {
			return nil
		}
		return fmt2.Errorf("that == nil && this != nil")
	}

	that1, ok := that.(*NidRepPackedNative)
	if !ok {
		return fmt2.Errorf("that is not of type *NidRepPackedNative")
	}
	if that1 == nil {
		if this == nil {
			return nil
		}
		return fmt2.Errorf("that is type *NidRepPackedNative but is nil && this != nil")
	} else if this == nil {
		return fmt2.Errorf("that is type *NidRepPackedNativebut is not nil && this == nil")
	}
	if len(this.Field3) != len(that1.Field3) {
		return fmt2.Errorf("Field3 this(%v) Not Equal that(%v)", len(this.Field3), len(that1.Field3))
	}
	for i := range this.Field3 {
		if this.Field3[i] != that1.Field3[i] {
			return fmt2.Errorf("Field3 this[%v](%v) Not Equal that[%v](%v)", i, this.Field3[i], i, that1.Field3[i])
		}
	}
	if len(this.Field4) != len(that1.Field4) {
		return fmt2.Errorf("Field4 this(%v) Not Equal that(%v)", len(this.Field4), len(that1.Field4))
	}
	for i := range this.Field4 {
		if this.Field4[i] != that1.Field4[i] {
			return fmt2.Errorf("Field4 this[%v](%v) Not Equal that[%v](%v)", i, this.Field4[i], i, that1.Field4[i])
		}
	}
	if len(this.Field13) != len(that1.Field13) {
		return fmt2.Errorf("Field13 this(%v) Not Equal that(%v)", len(this.Field13), len(that1.Field13))
	}
	for i := range this.Field13 {
		if this.Field13[i] != that1.Field13[i] {
			return fmt2.Errorf("Field13 this[%v](%v) Not Equal that[%v](%v)", i, this.Field13[i], i, that1.Field13[i])
		}
	}
	return nil
}
func (this *NidRepPackedNative) Equal(that interface{}) bool {
	if that == nil {
		if this == nil {
			return true
		}
		return false
	}

	that1, ok := that.(*NidRepPackedNative)
	if !ok {
		return false
	}
	if that1 == nil {
		if this == nil {
			return true
		}
		return false
	} else if this == nil {
		return false
	}
	if len(this.Field3) != len(that1.Field3) {
		return false
	}
	for i := range this.Field3 {
		if this.Field3[i] != that1.Field3[i] {
			return false
		}
	}
	if len(this.Field4) != len(that1.Field4) {
		return false
	}
	for i := range this.Field4 {
		if this.Field4[i] != that1.Field4[i] {
			return false
		}
	}
	if len(this.Field13) != len(that1.Field13) {
		return false
	}
	for i := range this.Field13 {
		if this.Field13[i] != that1.Field13[i] {
			return false
		}
	}
	return true
}
func (this *NinRepPackedNative) VerboseEqual(that interface{}) error {
	if that == nil {
		if this == nil {
			return nil
		}
		return fmt2.Errorf("that == nil && this != nil")
	}

	that1, ok := that.(*NinRepPackedNative)
	if !ok {
		return fmt2.Errorf("that is not of type *NinRepPackedNative")
	}
	if that1 == nil {
		if this == nil {
			return nil
		}
		return fmt2.Errorf("that is type *NinRepPackedNative but is nil && this != nil")
	} else if this == nil {
		return fmt2.Errorf("that is type *NinRepPackedNativebut is not nil && this == nil")
	}
	if len(this.Field3) != len(that1.Field3) {
		return fmt2.Errorf("Field3 this(%v) Not Equal that(%v)", len(this.Field3), len(that1.Field3))
	}
	for i := range this.Field3 {
		if this.Field3[i] != that1.Field3[i] {
			return fmt2.Errorf("Field3 this[%v](%v) Not Equal that[%v](%v)", i, this.Field3[i], i, that1.Field3[i])
		}
	}
	if len(this.Field4) != len(that1.Field4) {
		return fmt2.Errorf("Field4 this(%v) Not Equal that(%v)", len(this.Field4), len(that1.Field4))
	}
	for i := range this.Field4 {
		if this.Field4[i] != that1.Field4[i] {
			return fmt2.Errorf("Field4 this[%v](%v) Not Equal that[%v](%v)", i, this.Field4[i], i, that1.Field4[i])
		}
	}
	if len(this.Field13) != len(that1.Field13) {
		return fmt2.Errorf("Field13 this(%v) Not Equal that(%v)", len(this.Field13), len(that1.Field13))
	}
	for i := range this.Field13 {
		if this.Field13[i] != that1.Field13[i] {
			return fmt2.Errorf("Field13 this[%v](%v) Not Equal that[%v](%v)", i, this.Field13[i], i, that1.Field13[i])
		}
	}
	return nil
}
func (this *NinRepPackedNative) Equal(that interface{}) bool {
	if that == nil {
		if this == nil {
			return true
		}
		return false
	}

	that1, ok := that.(*NinRepPackedNative)
	if !ok {
		return false
	}
	if that1 == nil {
		if this == nil {
			return true
		}
		return false
	} else if this == nil {
		return false
	}
	if len(this.Field3) != len(that1.Field3) {
		return false
	}
	for i := range this.Field3 {
		if this.Field3[i] != that1.Field3[i] {
			return false
		}
	}
	if len(this.Field4) != len(that1.Field4) {
		return false
	}
	for i := range this.Field4 {
		if this.Field4[i] != that1.Field4[i] {
			return false
		}
	}
	if len(this.Field13) != len(that1.Field13) {
		return false
	}
	for i := range this.Field13 {
		if this.Field13[i] != that1.Field13[i] {
			return false
		}
	}
	return true
}
func (this *NidOptStruct) VerboseEqual(that interface{}) error {
	if that == nil {
		if this == nil {
			return nil
		}
		return fmt2.Errorf("that == nil && this != nil")
	}

	that1, ok := that.(*NidOptStruct)
	if !ok {
		return fmt2.Errorf("that is not of type *NidOptStruct")
	}
	if that1 == nil {
		if this == nil {
			return nil
		}
		return fmt2.Errorf("that is type *NidOptStruct but is nil && this != nil")
	} else if this == nil {
		return fmt2.Errorf("that is type *NidOptStructbut is not nil && this == nil")
	}
	if this.Field1 != that1.Field1 {
		return fmt2.Errorf("Field1 this(%v) Not Equal that(%v)", this.Field1, that1.Field1)
	}
	if this.Field2 != that1.Field2 {
		return fmt2.Errorf("Field2 this(%v) Not Equal that(%v)", this.Field2, that1.Field2)
	}
	if !this.Field3.Equal(&that1.Field3) {
		return fmt2.Errorf("Field3 this(%v) Not Equal that(%v)", this.Field3, that1.Field3)
	}
	if !this.Field4.Equal(&that1.Field4) {
		return fmt2.Errorf("Field4 this(%v) Not Equal that(%v)", this.Field4, that1.Field4)
	}
	if this.Field6 != that1.Field6 {
		return fmt2.Errorf("Field6 this(%v) Not Equal that(%v)", this.Field6, that1.Field6)
	}
	if this.Field7 != that1.Field7 {
		return fmt2.Errorf("Field7 this(%v) Not Equal that(%v)", this.Field7, that1.Field7)
	}
	if !this.Field8.Equal(&that1.Field8) {
		return fmt2.Errorf("Field8 this(%v) Not Equal that(%v)", this.Field8, that1.Field8)
	}
	if this.Field13 != that1.Field13 {
		return fmt2.Errorf("Field13 this(%v) Not Equal that(%v)", this.Field13, that1.Field13)
	}
	if this.Field14 != that1.Field14 {
		return fmt2.Errorf("Field14 this(%v) Not Equal that(%v)", this.Field14, that1.Field14)
	}
	if !bytes.Equal(this.Field15, that1.Field15) {
		return fmt2.Errorf("Field15 this(%v) Not Equal that(%v)", this.Field15, that1.Field15)
	}
	return nil
}
func (this *NidOptStruct) Equal(that interface{}) bool {
	if that == nil {
		if this == nil {
			return true
		}
		return false
	}

	that1, ok := that.(*NidOptStruct)
	if !ok {
		return false
	}
	if that1 == nil {
		if this == nil {
			return true
		}
		return false
	} else if this == nil {
		return false
	}
	if this.Field1 != that1.Field1 {
		return false
	}
	if this.Field2 != that1.Field2 {
		return false
	}
	if !this.Field3.Equal(&that1.Field3) {
		return false
	}
	if !this.Field4.Equal(&that1.Field4) {
		return false
	}
	if this.Field6 != that1.Field6 {
		return false
	}
	if this.Field7 != that1.Field7 {
		return false
	}
	if !this.Field8.Equal(&that1.Field8) {
		return false
	}
	if this.Field13 != that1.Field13 {
		return false
	}
	if this.Field14 != that1.Field14 {
		return false
	}
	if !bytes.Equal(this.Field15, that1.Field15) {
		return false
	}
	return true
}
func (this *NinOptStruct) VerboseEqual(that interface{}) error {
	if that == nil {
		if this == nil {
			return nil
		}
		return fmt2.Errorf("that == nil && this != nil")
	}

	that1, ok := that.(*NinOptStruct)
	if !ok {
		return fmt2.Errorf("that is not of type *NinOptStruct")
	}
	if that1 == nil {
		if this == nil {
			return nil
		}
		return fmt2.Errorf("that is type *NinOptStruct but is nil && this != nil")
	} else if this == nil {
		return fmt2.Errorf("that is type *NinOptStructbut is not nil && this == nil")
	}
	if this.Field1 != nil && that1.Field1 != nil {
		if *this.Field1 != *that1.Field1 {
			return fmt2.Errorf("Field1 this(%v) Not Equal that(%v)", *this.Field1, *that1.Field1)
		}
	} else if this.Field1 != nil {
		return fmt2.Errorf("this.Field1 == nil && that.Field1 != nil")
	} else if that1.Field1 != nil {
		return fmt2.Errorf("Field1 this(%v) Not Equal that(%v)", this.Field1, that1.Field1)
	}
	if this.Field2 != nil && that1.Field2 != nil {
		if *this.Field2 != *that1.Field2 {
			return fmt2.Errorf("Field2 this(%v) Not Equal that(%v)", *this.Field2, *that1.Field2)
		}
	} else if this.Field2 != nil {
		return fmt2.Errorf("this.Field2 == nil && that.Field2 != nil")
	} else if that1.Field2 != nil {
		return fmt2.Errorf("Field2 this(%v) Not Equal that(%v)", this.Field2, that1.Field2)
	}
	if !this.Field3.Equal(that1.Field3) {
		return fmt2.Errorf("Field3 this(%v) Not Equal that(%v)", this.Field3, that1.Field3)
	}
	if !this.Field4.Equal(that1.Field4) {
		return fmt2.Errorf("Field4 this(%v) Not Equal that(%v)", this.Field4, that1.Field4)
	}
	if this.Field6 != nil && that1.Field6 != nil {
		if *this.Field6 != *that1.Field6 {
			return fmt2.Errorf("Field6 this(%v) Not Equal that(%v)", *this.Field6, *that1.Field6)
		}
	} else if this.Field6 != nil {
		return fmt2.Errorf("this.Field6 == nil && that.Field6 != nil")
	} else if that1.Field6 != nil {
		return fmt2.Errorf("Field6 this(%v) Not Equal that(%v)", this.Field6, that1.Field6)
	}
	if this.Field7 != nil && that1.Field7 != nil {
		if *this.Field7 != *that1.Field7 {
			return fmt2.Errorf("Field7 this(%v) Not Equal that(%v)", *this.Field7, *that1.Field7)
		}
	} else if this.Field7 != nil {
		return fmt2.Errorf("this.Field7 == nil && that.Field7 != nil")
	} else if that1.Field7 != nil {
		return fmt2.Errorf("Field7 this(%v) Not Equal that(%v)", this.Field7, that1.Field7)
	}
	if !this.Field8.Equal(that1.Field8) {
		return fmt2.Errorf("Field8 this(%v) Not Equal that(%v)", this.Field8, that1.Field8)
	}
	if this.Field13 != nil && that1.Field13 != nil {
		if *this.Field13 != *that1.Field13 {
			return fmt2.Errorf("Field13 this(%v) Not Equal that(%v)", *this.Field13, *that1.Field13)
		}
	} else if this.Field13 != nil {
		return fmt2.Errorf("this.Field13 == nil && that.Field13 != nil")
	} else if that1.Field13 != nil {
		return fmt2.Errorf("Field13 this(%v) Not Equal that(%v)", this.Field13, that1.Field13)
	}
	if this.Field14 != nil && that1.Field14 != nil {
		if *this.Field14 != *that1.Field14 {
			return fmt2.Errorf("Field14 this(%v) Not Equal that(%v)", *this.Field14, *that1.Field14)
		}
	} else if this.Field14 != nil {
		return fmt2.Errorf("this.Field14 == nil && that.Field14 != nil")
	} else if that1.Field14 != nil {
		return fmt2.Errorf("Field14 this(%v) Not Equal that(%v)", this.Field14, that1.Field14)
	}
	if !bytes.Equal(this.Field15, that1.Field15) {
		return fmt2.Errorf("Field15 this(%v) Not Equal that(%v)", this.Field15, that1.Field15)
	}
	return nil
}
func (this *NinOptStruct) Equal(that interface{}) bool {
	if that == nil {
		if this == nil {
			return true
		}
		return false
	}

	that1, ok := that.(*NinOptStruct)
	if !ok {
		return false
	}
	if that1 == nil {
		if this == nil {
			return true
		}
		return false
	} else if this == nil {
		return false
	}
	if this.Field1 != nil && that1.Field1 != nil {
		if *this.Field1 != *that1.Field1 {
			return false
		}
	} else if this.Field1 != nil {
		return false
	} else if that1.Field1 != nil {
		return false
	}
	if this.Field2 != nil && that1.Field2 != nil {
		if *this.Field2 != *that1.Field2 {
			return false
		}
	} else if this.Field2 != nil {
		return false
	} else if that1.Field2 != nil {
		return false
	}
	if !this.Field3.Equal(that1.Field3) {
		return false
	}
	if !this.Field4.Equal(that1.Field4) {
		return false
	}
	if this.Field6 != nil && that1.Field6 != nil {
		if *this.Field6 != *that1.Field6 {
			return false
		}
	} else if this.Field6 != nil {
		return false
	} else if that1.Field6 != nil {
		return false
	}
	if this.Field7 != nil && that1.Field7 != nil {
		if *this.Field7 != *that1.Field7 {
			return false
		}
	} else if this.Field7 != nil {
		return false
	} else if that1.Field7 != nil {
		return false
	}
	if !this.Field8.Equal(that1.Field8) {
		return false
	}
	if this.Field13 != nil && that1.Field13 != nil {
		if *this.Field13 != *that1.Field13 {
			return false
		}
	} else if this.Field13 != nil {
		return false
	} else if that1.Field13 != nil {
		return false
	}
	if this.Field14 != nil && that1.Field14 != nil {
		if *this.Field14 != *that1.Field14 {
			return false
		}
	} else if this.Field14 != nil {
		return false
	} else if that1.Field14 != nil {
		return false
	}
	if !bytes.Equal(this.Field15, that1.Field15) {
		return false
	}
	return true
}
func (this *NidRepStruct) VerboseEqual(that interface{}) error {
	if that == nil {
		if this == nil {
			return nil
		}
		return fmt2.Errorf("that == nil && this != nil")
	}

	that1, ok := that.(*NidRepStruct)
	if !ok {
		return fmt2.Errorf("that is not of type *NidRepStruct")
	}
	if that1 == nil {
		if this == nil {
			return nil
		}
		return fmt2.Errorf("that is type *NidRepStruct but is nil && this != nil")
	} else if this == nil {
		return fmt2.Errorf("that is type *NidRepStructbut is not nil && this == nil")
	}
	if len(this.Field1) != len(that1.Field1) {
		return fmt2.Errorf("Field1 this(%v) Not Equal that(%v)", len(this.Field1), len(that1.Field1))
	}
	for i := range this.Field1 {
		if this.Field1[i] != that1.Field1[i] {
			return fmt2.Errorf("Field1 this[%v](%v) Not Equal that[%v](%v)", i, this.Field1[i], i, that1.Field1[i])
		}
	}
	if len(this.Field2) != len(that1.Field2) {
		return fmt2.Errorf("Field2 this(%v) Not Equal that(%v)", len(this.Field2), len(that1.Field2))
	}
	for i := range this.Field2 {
		if this.Field2[i] != that1.Field2[i] {
			return fmt2.Errorf("Field2 this[%v](%v) Not Equal that[%v](%v)", i, this.Field2[i], i, that1.Field2[i])
		}
	}
	if len(this.Field3) != len(that1.Field3) {
		return fmt2.Errorf("Field3 this(%v) Not Equal that(%v)", len(this.Field3), len(that1.Field3))
	}
	for i := range this.Field3 {
		if !this.Field3[i].Equal(&that1.Field3[i]) {
			return fmt2.Errorf("Field3 this[%v](%v) Not Equal that[%v](%v)", i, this.Field3[i], i, that1.Field3[i])
		}
	}
	if len(this.Field4) != len(that1.Field4) {
		return fmt2.Errorf("Field4 this(%v) Not Equal that(%v)", len(this.Field4), len(that1.Field4))
	}
	for i := range this.Field4 {
		if !this.Field4[i].Equal(&that1.Field4[i]) {
			return fmt2.Errorf("Field4 this[%v](%v) Not Equal that[%v](%v)", i, this.Field4[i], i, that1.Field4[i])
		}
	}
	if len(this.Field6) != len(that1.Field6) {
		return fmt2.Errorf("Field6 this(%v) Not Equal that(%v)", len(this.Field6), len(that1.Field6))
	}
	for i := range this.Field6 {
		if this.Field6[i] != that1.Field6[i] {
			return fmt2.Errorf("Field6 this[%v](%v) Not Equal that[%v](%v)", i, this.Field6[i], i, that1.Field6[i])
		}
	}
	if len(this.Field7) != len(that1.Field7) {
		return fmt2.Errorf("Field7 this(%v) Not Equal that(%v)", len(this.Field7), len(that1.Field7))
	}
	for i := range this.Field7 {
		if this.Field7[i] != that1.Field7[i] {
			return fmt2.Errorf("Field7 this[%v](%v) Not Equal that[%v](%v)", i, this.Field7[i], i, that1.Field7[i])
		}
	}
	if len(this.Field8) != len(that1.Field8) {
		return fmt2.Errorf("Field8 this(%v) Not Equal that(%v)", len(this.Field8), len(that1.Field8))
	}
	for i := range this.Field8 {
		if !this.Field8[i].Equal(&that1.Field8[i]) {
			return fmt2.Errorf("Field8 this[%v](%v) Not Equal that[%v](%v)", i, this.Field8[i], i, that1.Field8[i])
		}
	}
	if len(this.Field13) != len(that1.Field13) {
		return fmt2.Errorf("Field13 this(%v) Not Equal that(%v)", len(this.Field13), len(that1.Field13))
	}
	for i := range this.Field13 {
		if this.Field13[i] != that1.Field13[i] {
			return fmt2.Errorf("Field13 this[%v](%v) Not Equal that[%v](%v)", i, this.Field13[i], i, that1.Field13[i])
		}
	}
	if len(this.Field14) != len(that1.Field14) {
		return fmt2.Errorf("Field14 this(%v) Not Equal that(%v)", len(this.Field14), len(that1.Field14))
	}
	for i := range this.Field14 {
		if this.Field14[i] != that1.Field14[i] {
			return fmt2.Errorf("Field14 this[%v](%v) Not Equal that[%v](%v)", i, this.Field14[i], i, that1.Field14[i])
		}
	}
	if len(this.Field15) != len(that1.Field15) {
		return fmt2.Errorf("Field15 this(%v) Not Equal that(%v)", len(this.Field15), len(that1.Field15))
	}
	for i := range this.Field15 {
		if !bytes.Equal(this.Field15[i], that1.Field15[i]) {
			return fmt2.Errorf("Field15 this[%v](%v) Not Equal that[%v](%v)", i, this.Field15[i], i, that1.Field15[i])
		}
	}
	return nil
}
func (this *NidRepStruct) Equal(that interface{}) bool {
	if that == nil {
		if this == nil {
			return true
		}
		return false
	}

	that1, ok := that.(*NidRepStruct)
	if !ok {
		return false
	}
	if that1 == nil {
		if this == nil {
			return true
		}
		return false
	} else if this == nil {
		return false
	}
	if len(this.Field1) != len(that1.Field1) {
		return false
	}
	for i := range this.Field1 {
		if this.Field1[i] != that1.Field1[i] {
			return false
		}
	}
	if len(this.Field2) != len(that1.Field2) {
		return false
	}
	for i := range this.Field2 {
		if this.Field2[i] != that1.Field2[i] {
			return false
		}
	}
	if len(this.Field3) != len(that1.Field3) {
		return false
	}
	for i := range this.Field3 {
		if !this.Field3[i].Equal(&that1.Field3[i]) {
			return false
		}
	}
	if len(this.Field4) != len(that1.Field4) {
		return false
	}
	for i := range this.Field4 {
		if !this.Field4[i].Equal(&that1.Field4[i]) {
			return false
		}
	}
	if len(this.Field6) != len(that1.Field6) {
		return false
	}
	for i := range this.Field6 {
		if this.Field6[i] != that1.Field6[i] {
			return false
		}
	}
	if len(this.Field7) != len(that1.Field7) {
		return false
	}
	for i := range this.Field7 {
		if this.Field7[i] != that1.Field7[i] {
			return false
		}
	}
	if len(this.Field8) != len(that1.Field8) {
		return false
	}
	for i := range this.Field8 {
		if !this.Field8[i].Equal(&that1.Field8[i]) {
			return false
		}
	}
	if len(this.Field13) != len(that1.Field13) {
		return false
	}
	for i := range this.Field13 {
		if this.Field13[i] != that1.Field13[i] {
			return false
		}
	}
	if len(this.Field14) != len(that1.Field14) {
		return false
	}
	for i := range this.Field14 {
		if this.Field14[i] != that1.Field14[i] {
			return false
		}
	}
	if len(this.Field15) != len(that1.Field15) {
		return false
	}
	for i := range this.Field15 {
		if !bytes.Equal(this.Field15[i], that1.Field15[i]) {
			return false
		}
	}
	return true
}
func (this *NinRepStruct) VerboseEqual(that interface{}) error {
	if that == nil {
		if this == nil {
			return nil
		}
		return fmt2.Errorf("that == nil && this != nil")
	}

	that1, ok := that.(*NinRepStruct)
	if !ok {
		return fmt2.Errorf("that is not of type *NinRepStruct")
	}
	if that1 == nil {
		if this == nil {
			return nil
		}
		return fmt2.Errorf("that is type *NinRepStruct but is nil && this != nil")
	} else if this == nil {
		return fmt2.Errorf("that is type *NinRepStructbut is not nil && this == nil")
	}
	if len(this.Field1) != len(that1.Field1) {
		return fmt2.Errorf("Field1 this(%v) Not Equal that(%v)", len(this.Field1), len(that1.Field1))
	}
	for i := range this.Field1 {
		if this.Field1[i] != that1.Field1[i] {
			return fmt2.Errorf("Field1 this[%v](%v) Not Equal that[%v](%v)", i, this.Field1[i], i, that1.Field1[i])
		}
	}
	if len(this.Field2) != len(that1.Field2) {
		return fmt2.Errorf("Field2 this(%v) Not Equal that(%v)", len(this.Field2), len(that1.Field2))
	}
	for i := range this.Field2 {
		if this.Field2[i] != that1.Field2[i] {
			return fmt2.Errorf("Field2 this[%v](%v) Not Equal that[%v](%v)", i, this.Field2[i], i, that1.Field2[i])
		}
	}
	if len(this.Field3) != len(that1.Field3) {
		return fmt2.Errorf("Field3 this(%v) Not Equal that(%v)", len(this.Field3), len(that1.Field3))
	}
	for i := range this.Field3 {
		if !this.Field3[i].Equal(that1.Field3[i]) {
			return fmt2.Errorf("Field3 this[%v](%v) Not Equal that[%v](%v)", i, this.Field3[i], i, that1.Field3[i])
		}
	}
	if len(this.Field4) != len(that1.Field4) {
		return fmt2.Errorf("Field4 this(%v) Not Equal that(%v)", len(this.Field4), len(that1.Field4))
	}
	for i := range this.Field4 {
		if !this.Field4[i].Equal(that1.Field4[i]) {
			return fmt2.Errorf("Field4 this[%v](%v) Not Equal that[%v](%v)", i, this.Field4[i], i, that1.Field4[i])
		}
	}
	if len(this.Field6) != len(that1.Field6) {
		return fmt2.Errorf("Field6 this(%v) Not Equal that(%v)", len(this.Field6), len(that1.Field6))
	}
	for i := range this.Field6 {
		if this.Field6[i] != that1.Field6[i] {
			return fmt2.Errorf("Field6 this[%v](%v) Not Equal that[%v](%v)", i, this.Field6[i], i, that1.Field6[i])
		}
	}
	if len(this.Field7) != len(that1.Field7) {
		return fmt2.Errorf("Field7 this(%v) Not Equal that(%v)", len(this.Field7), len(that1.Field7))
	}
	for i := range this.Field7 {
		if this.Field7[i] != that1.Field7[i] {
			return fmt2.Errorf("Field7 this[%v](%v) Not Equal that[%v](%v)", i, this.Field7[i], i, that1.Field7[i])
		}
	}
	if len(this.Field8) != len(that1.Field8) {
		return fmt2.Errorf("Field8 this(%v) Not Equal that(%v)", len(this.Field8), len(that1.Field8))
	}
	for i := range this.Field8 {
		if !this.Field8[i].Equal(that1.Field8[i]) {
			return fmt2.Errorf("Field8 this[%v](%v) Not Equal that[%v](%v)", i, this.Field8[i], i, that1.Field8[i])
		}
	}
	if len(this.Field13) != len(that1.Field13) {
		return fmt2.Errorf("Field13 this(%v) Not Equal that(%v)", len(this.Field13), len(that1.Field13))
	}
	for i := range this.Field13 {
		if this.Field13[i] != that1.Field13[i] {
			return fmt2.Errorf("Field13 this[%v](%v) Not Equal that[%v](%v)", i, this.Field13[i], i, that1.Field13[i])
		}
	}
	if len(this.Field14) != len(that1.Field14) {
		return fmt2.Errorf("Field14 this(%v) Not Equal that(%v)", len(this.Field14), len(that1.Field14))
	}
	for i := range this.Field14 {
		if this.Field14[i] != that1.Field14[i] {
			return fmt2.Errorf("Field14 this[%v](%v) Not Equal that[%v](%v)", i, this.Field14[i], i, that1.Field14[i])
		}
	}
	if len(this.Field15) != len(that1.Field15) {
		return fmt2.Errorf("Field15 this(%v) Not Equal that(%v)", len(this.Field15), len(that1.Field15))
	}
	for i := range this.Field15 {
		if !bytes.Equal(this.Field15[i], that1.Field15[i]) {
			return fmt2.Errorf("Field15 this[%v](%v) Not Equal that[%v](%v)", i, this.Field15[i], i, that1.Field15[i])
		}
	}
	return nil
}
func (this *NinRepStruct) Equal(that interface{}) bool {
	if that == nil {
		if this == nil {
			return true
		}
		return false
	}

	that1, ok := that.(*NinRepStruct)
	if !ok {
		return false
	}
	if that1 == nil {
		if this == nil {
			return true
		}
		return false
	} else if this == nil {
		return false
	}
	if len(this.Field1) != len(that1.Field1) {
		return false
	}
	for i := range this.Field1 {
		if this.Field1[i] != that1.Field1[i] {
			return false
		}
	}
	if len(this.Field2) != len(that1.Field2) {
		return false
	}
	for i := range this.Field2 {
		if this.Field2[i] != that1.Field2[i] {
			return false
		}
	}
	if len(this.Field3) != len(that1.Field3) {
		return false
	}
	for i := range this.Field3 {
		if !this.Field3[i].Equal(that1.Field3[i]) {
			return false
		}
	}
	if len(this.Field4) != len(that1.Field4) {
		return false
	}
	for i := range this.Field4 {
		if !this.Field4[i].Equal(that1.Field4[i]) {
			return false
		}
	}
	if len(this.Field6) != len(that1.Field6) {
		return false
	}
	for i := range this.Field6 {
		if this.Field6[i] != that1.Field6[i] {
			return false
		}
	}
	if len(this.Field7) != len(that1.Field7) {
		return false
	}
	for i := range this.Field7 {
		if this.Field7[i] != that1.Field7[i] {
			return false
		}
	}
	if len(this.Field8) != len(that1.Field8) {
		return false
	}
	for i := range this.Field8 {
		if !this.Field8[i].Equal(that1.Field8[i]) {
			return false
		}
	}
	if len(this.Field13) != len(that1.Field13) {
		return false
	}
	for i := range this.Field13 {
		if this.Field13[i] != that1.Field13[i] {
			return false
		}
	}
	if len(this.Field14) != len(that1.Field14) {
		return false
	}
	for i := range this.Field14 {
		if this.Field14[i] != that1.Field14[i] {
			return false
		}
	}
	if len(this.Field15) != len(that1.Field15) {
		return false
	}
	for i := range this.Field15 {
		if !bytes.Equal(this.Field15[i], that1.Field15[i]) {
			return false
		}
	}
	return true
}
func (this *NidEmbeddedStruct) VerboseEqual(that interface{}) error {
	if that == nil {
		if this == nil {
			return nil
		}
		return fmt2.Errorf("that == nil && this != nil")
	}

	that1, ok := that.(*NidEmbeddedStruct)
	if !ok {
		return fmt2.Errorf("that is not of type *NidEmbeddedStruct")
	}
	if that1 == nil {
		if this == nil {
			return nil
		}
		return fmt2.Errorf("that is type *NidEmbeddedStruct but is nil && this != nil")
	} else if this == nil {
		return fmt2.Errorf("that is type *NidEmbeddedStructbut is not nil && this == nil")
	}
	if !this.NidOptNative.Equal(&that1.NidOptNative) {
		return fmt2.Errorf("NidOptNative this(%v) Not Equal that(%v)", this.NidOptNative, that1.NidOptNative)
	}
	if !this.Field200.Equal(&that1.Field200) {
		return fmt2.Errorf("Field200 this(%v) Not Equal that(%v)", this.Field200, that1.Field200)
	}
	if this.Field210 != that1.Field210 {
		return fmt2.Errorf("Field210 this(%v) Not Equal that(%v)", this.Field210, that1.Field210)
	}
	return nil
}
func (this *NidEmbeddedStruct) Equal(that interface{}) bool {
	if that == nil {
		if this == nil {
			return true
		}
		return false
	}

	that1, ok := that.(*NidEmbeddedStruct)
	if !ok {
		return false
	}
	if that1 == nil {
		if this == nil {
			return true
		}
		return false
	} else if this == nil {
		return false
	}
	if !this.NidOptNative.Equal(&that1.NidOptNative) {
		return false
	}
	if !this.Field200.Equal(&that1.Field200) {
		return false
	}
	if this.Field210 != that1.Field210 {
		return false
	}
	return true
}
func (this *NinEmbeddedStruct) VerboseEqual(that interface{}) error {
	if that == nil {
		if this == nil {
			return nil
		}
		return fmt2.Errorf("that == nil && this != nil")
	}

	that1, ok := that.(*NinEmbeddedStruct)
	if !ok {
		return fmt2.Errorf("that is not of type *NinEmbeddedStruct")
	}
	if that1 == nil {
		if this == nil {
			return nil
		}
		return fmt2.Errorf("that is type *NinEmbeddedStruct but is nil && this != nil")
	} else if this == nil {
		return fmt2.Errorf("that is type *NinEmbeddedStructbut is not nil && this == nil")
	}
	if !this.NidOptNative.Equal(that1.NidOptNative) {
		return fmt2.Errorf("NidOptNative this(%v) Not Equal that(%v)", this.NidOptNative, that1.NidOptNative)
	}
	if !this.Field200.Equal(that1.Field200) {
		return fmt2.Errorf("Field200 this(%v) Not Equal that(%v)", this.Field200, that1.Field200)
	}
	if this.Field210 != nil && that1.Field210 != nil {
		if *this.Field210 != *that1.Field210 {
			return fmt2.Errorf("Field210 this(%v) Not Equal that(%v)", *this.Field210, *that1.Field210)
		}
	} else if this.Field210 != nil {
		return fmt2.Errorf("this.Field210 == nil && that.Field210 != nil")
	} else if that1.Field210 != nil {
		return fmt2.Errorf("Field210 this(%v) Not Equal that(%v)", this.Field210, that1.Field210)
	}
	return nil
}
func (this *NinEmbeddedStruct) Equal(that interface{}) bool {
	if that == nil {
		if this == nil {
			return true
		}
		return false
	}

	that1, ok := that.(*NinEmbeddedStruct)
	if !ok {
		return false
	}
	if that1 == nil {
		if this == nil {
			return true
		}
		return false
	} else if this == nil {
		return false
	}
	if !this.NidOptNative.Equal(that1.NidOptNative) {
		return false
	}
	if !this.Field200.Equal(that1.Field200) {
		return false
	}
	if this.Field210 != nil && that1.Field210 != nil {
		if *this.Field210 != *that1.Field210 {
			return false
		}
	} else if this.Field210 != nil {
		return false
	} else if that1.Field210 != nil {
		return false
	}
	return true
}
func (this *NidNestedStruct) VerboseEqual(that interface{}) error {
	if that == nil {
		if this == nil {
			return nil
		}
		return fmt2.Errorf("that == nil && this != nil")
	}

	that1, ok := that.(*NidNestedStruct)
	if !ok {
		return fmt2.Errorf("that is not of type *NidNestedStruct")
	}
	if that1 == nil {
		if this == nil {
			return nil
		}
		return fmt2.Errorf("that is type *NidNestedStruct but is nil && this != nil")
	} else if this == nil {
		return fmt2.Errorf("that is type *NidNestedStructbut is not nil && this == nil")
	}
	if !this.Field1.Equal(&that1.Field1) {
		return fmt2.Errorf("Field1 this(%v) Not Equal that(%v)", this.Field1, that1.Field1)
	}
	if len(this.Field2) != len(that1.Field2) {
		return fmt2.Errorf("Field2 this(%v) Not Equal that(%v)", len(this.Field2), len(that1.Field2))
	}
	for i := range this.Field2 {
		if !this.Field2[i].Equal(&that1.Field2[i]) {
			return fmt2.Errorf("Field2 this[%v](%v) Not Equal that[%v](%v)", i, this.Field2[i], i, that1.Field2[i])
		}
	}
	return nil
}
func (this *NidNestedStruct) Equal(that interface{}) bool {
	if that == nil {
		if this == nil {
			return true
		}
		return false
	}

	that1, ok := that.(*NidNestedStruct)
	if !ok {
		return false
	}
	if that1 == nil {
		if this == nil {
			return true
		}
		return false
	} else if this == nil {
		return false
	}
	if !this.Field1.Equal(&that1.Field1) {
		return false
	}
	if len(this.Field2) != len(that1.Field2) {
		return false
	}
	for i := range this.Field2 {
		if !this.Field2[i].Equal(&that1.Field2[i]) {
			return false
		}
	}
	return true
}
func (this *NinNestedStruct) VerboseEqual(that interface{}) error {
	if that == nil {
		if this == nil {
			return nil
		}
		return fmt2.Errorf("that == nil && this != nil")
	}

	that1, ok := that.(*NinNestedStruct)
	if !ok {
		return fmt2.Errorf("that is not of type *NinNestedStruct")
	}
	if that1 == nil {
		if this == nil {
			return nil
		}
		return fmt2.Errorf("that is type *NinNestedStruct but is nil && this != nil")
	} else if this == nil {
		return fmt2.Errorf("that is type *NinNestedStructbut is not nil && this == nil")
	}
	if !this.Field1.Equal(that1.Field1) {
		return fmt2.Errorf("Field1 this(%v) Not Equal that(%v)", this.Field1, that1.Field1)
	}
	if len(this.Field2) != len(that1.Field2) {
		return fmt2.Errorf("Field2 this(%v) Not Equal that(%v)", len(this.Field2), len(that1.Field2))
	}
	for i := range this.Field2 {
		if !this.Field2[i].Equal(that1.Field2[i]) {
			return fmt2.Errorf("Field2 this[%v](%v) Not Equal that[%v](%v)", i, this.Field2[i], i, that1.Field2[i])
		}
	}
	return nil
}
func (this *NinNestedStruct) Equal(that interface{}) bool {
	if that == nil {
		if this == nil {
			return true
		}
		return false
	}

	that1, ok := that.(*NinNestedStruct)
	if !ok {
		return false
	}
	if that1 == nil {
		if this == nil {
			return true
		}
		return false
	} else if this == nil {
		return false
	}
	if !this.Field1.Equal(that1.Field1) {
		return false
	}
	if len(this.Field2) != len(that1.Field2) {
		return false
	}
	for i := range this.Field2 {
		if !this.Field2[i].Equal(that1.Field2[i]) {
			return false
		}
	}
	return true
}
func (this *NidOptCustom) VerboseEqual(that interface{}) error {
	if that == nil {
		if this == nil {
			return nil
		}
		return fmt2.Errorf("that == nil && this != nil")
	}

	that1, ok := that.(*NidOptCustom)
	if !ok {
		return fmt2.Errorf("that is not of type *NidOptCustom")
	}
	if that1 == nil {
		if this == nil {
			return nil
		}
		return fmt2.Errorf("that is type *NidOptCustom but is nil && this != nil")
	} else if this == nil {
		return fmt2.Errorf("that is type *NidOptCustombut is not nil && this == nil")
	}
	if !this.Id.Equal(that1.Id) {
		return fmt2.Errorf("Id this(%v) Not Equal that(%v)", this.Id, that1.Id)
	}
	if !this.Value.Equal(that1.Value) {
		return fmt2.Errorf("Value this(%v) Not Equal that(%v)", this.Value, that1.Value)
	}
	return nil
}
func (this *NidOptCustom) Equal(that interface{}) bool {
	if that == nil {
		if this == nil {
			return true
		}
		return false
	}

	that1, ok := that.(*NidOptCustom)
	if !ok {
		return false
	}
	if that1 == nil {
		if this == nil {
			return true
		}
		return false
	} else if this == nil {
		return false
	}
	if !this.Id.Equal(that1.Id) {
		return false
	}
	if !this.Value.Equal(that1.Value) {
		return false
	}
	return true
}
func (this *NinOptCustom) VerboseEqual(that interface{}) error {
	if that == nil {
		if this == nil {
			return nil
		}
		return fmt2.Errorf("that == nil && this != nil")
	}

	that1, ok := that.(*NinOptCustom)
	if !ok {
		return fmt2.Errorf("that is not of type *NinOptCustom")
	}
	if that1 == nil {
		if this == nil {
			return nil
		}
		return fmt2.Errorf("that is type *NinOptCustom but is nil && this != nil")
	} else if this == nil {
		return fmt2.Errorf("that is type *NinOptCustombut is not nil && this == nil")
	}
	if that1.Id == nil {
		if this.Id != nil {
			return fmt2.Errorf("this.Id != nil && that1.Id == nil")
		}
	} else if !this.Id.Equal(*that1.Id) {
		return fmt2.Errorf("Id this(%v) Not Equal that(%v)", this.Id, that1.Id)
	}
	if that1.Value == nil {
		if this.Value != nil {
			return fmt2.Errorf("this.Value != nil && that1.Value == nil")
		}
	} else if !this.Value.Equal(*that1.Value) {
		return fmt2.Errorf("Value this(%v) Not Equal that(%v)", this.Value, that1.Value)
	}
	return nil
}
func (this *NinOptCustom) Equal(that interface{}) bool {
	if that == nil {
		if this == nil {
			return true
		}
		return false
	}

	that1, ok := that.(*NinOptCustom)
	if !ok {
		return false
	}
	if that1 == nil {
		if this == nil {
			return true
		}
		return false
	} else if this == nil {
		return false
	}
	if that1.Id == nil {
		if this.Id != nil {
			return false
		}
	} else if !this.Id.Equal(*that1.Id) {
		return false
	}
	if that1.Value == nil {
		if this.Value != nil {
			return false
		}
	} else if !this.Value.Equal(*that1.Value) {
		return false
	}
	return true
}
func (this *NidRepCustom) VerboseEqual(that interface{}) error {
	if that == nil {
		if this == nil {
			return nil
		}
		return fmt2.Errorf("that == nil && this != nil")
	}

	that1, ok := that.(*NidRepCustom)
	if !ok {
		return fmt2.Errorf("that is not of type *NidRepCustom")
	}
	if that1 == nil {
		if this == nil {
			return nil
		}
		return fmt2.Errorf("that is type *NidRepCustom but is nil && this != nil")
	} else if this == nil {
		return fmt2.Errorf("that is type *NidRepCustombut is not nil && this == nil")
	}
	if len(this.Id) != len(that1.Id) {
		return fmt2.Errorf("Id this(%v) Not Equal that(%v)", len(this.Id), len(that1.Id))
	}
	for i := range this.Id {
		if !this.Id[i].Equal(that1.Id[i]) {
			return fmt2.Errorf("Id this[%v](%v) Not Equal that[%v](%v)", i, this.Id[i], i, that1.Id[i])
		}
	}
	if len(this.Value) != len(that1.Value) {
		return fmt2.Errorf("Value this(%v) Not Equal that(%v)", len(this.Value), len(that1.Value))
	}
	for i := range this.Value {
		if !this.Value[i].Equal(that1.Value[i]) {
			return fmt2.Errorf("Value this[%v](%v) Not Equal that[%v](%v)", i, this.Value[i], i, that1.Value[i])
		}
	}
	return nil
}
func (this *NidRepCustom) Equal(that interface{}) bool {
	if that == nil {
		if this == nil {
			return true
		}
		return false
	}

	that1, ok := that.(*NidRepCustom)
	if !ok {
		return false
	}
	if that1 == nil {
		if this == nil {
			return true
		}
		return false
	} else if this == nil {
		return false
	}
	if len(this.Id) != len(that1.Id) {
		return false
	}
	for i := range this.Id {
		if !this.Id[i].Equal(that1.Id[i]) {
			return false
		}
	}
	if len(this.Value) != len(that1.Value) {
		return false
	}
	for i := range this.Value {
		if !this.Value[i].Equal(that1.Value[i]) {
			return false
		}
	}
	return true
}
func (this *NinRepCustom) VerboseEqual(that interface{}) error {
	if that == nil {
		if this == nil {
			return nil
		}
		return fmt2.Errorf("that == nil && this != nil")
	}

	that1, ok := that.(*NinRepCustom)
	if !ok {
		return fmt2.Errorf("that is not of type *NinRepCustom")
	}
	if that1 == nil {
		if this == nil {
			return nil
		}
		return fmt2.Errorf("that is type *NinRepCustom but is nil && this != nil")
	} else if this == nil {
		return fmt2.Errorf("that is type *NinRepCustombut is not nil && this == nil")
	}
	if len(this.Id) != len(that1.Id) {
		return fmt2.Errorf("Id this(%v) Not Equal that(%v)", len(this.Id), len(that1.Id))
	}
	for i := range this.Id {
		if !this.Id[i].Equal(that1.Id[i]) {
			return fmt2.Errorf("Id this[%v](%v) Not Equal that[%v](%v)", i, this.Id[i], i, that1.Id[i])
		}
	}
	if len(this.Value) != len(that1.Value) {
		return fmt2.Errorf("Value this(%v) Not Equal that(%v)", len(this.Value), len(that1.Value))
	}
	for i := range this.Value {
		if !this.Value[i].Equal(that1.Value[i]) {
			return fmt2.Errorf("Value this[%v](%v) Not Equal that[%v](%v)", i, this.Value[i], i, that1.Value[i])
		}
	}
	return nil
}
func (this *NinRepCustom) Equal(that interface{}) bool {
	if that == nil {
		if this == nil {
			return true
		}
		return false
	}

	that1, ok := that.(*NinRepCustom)
	if !ok {
		return false
	}
	if that1 == nil {
		if this == nil {
			return true
		}
		return false
	} else if this == nil {
		return false
	}
	if len(this.Id) != len(that1.Id) {
		return false
	}
	for i := range this.Id {
		if !this.Id[i].Equal(that1.Id[i]) {
			return false
		}
	}
	if len(this.Value) != len(that1.Value) {
		return false
	}
	for i := range this.Value {
		if !this.Value[i].Equal(that1.Value[i]) {
			return false
		}
	}
	return true
}
func (this *NinOptNativeUnion) VerboseEqual(that interface{}) error {
	if that == nil {
		if this == nil {
			return nil
		}
		return fmt2.Errorf("that == nil && this != nil")
	}

	that1, ok := that.(*NinOptNativeUnion)
	if !ok {
		return fmt2.Errorf("that is not of type *NinOptNativeUnion")
	}
	if that1 == nil {
		if this == nil {
			return nil
		}
		return fmt2.Errorf("that is type *NinOptNativeUnion but is nil && this != nil")
	} else if this == nil {
		return fmt2.Errorf("that is type *NinOptNativeUnionbut is not nil && this == nil")
	}
	if this.Field1 != nil && that1.Field1 != nil {
		if *this.Field1 != *that1.Field1 {
			return fmt2.Errorf("Field1 this(%v) Not Equal that(%v)", *this.Field1, *that1.Field1)
		}
	} else if this.Field1 != nil {
		return fmt2.Errorf("this.Field1 == nil && that.Field1 != nil")
	} else if that1.Field1 != nil {
		return fmt2.Errorf("Field1 this(%v) Not Equal that(%v)", this.Field1, that1.Field1)
	}
	if this.Field2 != nil && that1.Field2 != nil {
		if *this.Field2 != *that1.Field2 {
			return fmt2.Errorf("Field2 this(%v) Not Equal that(%v)", *this.Field2, *that1.Field2)
		}
	} else if this.Field2 != nil {
		return fmt2.Errorf("this.Field2 == nil && that.Field2 != nil")
	} else if that1.Field2 != nil {
		return fmt2.Errorf("Field2 this(%v) Not Equal that(%v)", this.Field2, that1.Field2)
	}
	if this.Field3 != nil && that1.Field3 != nil {
		if *this.Field3 != *that1.Field3 {
			return fmt2.Errorf("Field3 this(%v) Not Equal that(%v)", *this.Field3, *that1.Field3)
		}
	} else if this.Field3 != nil {
		return fmt2.Errorf("this.Field3 == nil && that.Field3 != nil")
	} else if that1.Field3 != nil {
		return fmt2.Errorf("Field3 this(%v) Not Equal that(%v)", this.Field3, that1.Field3)
	}
	if this.Field4 != nil && that1.Field4 != nil {
		if *this.Field4 != *that1.Field4 {
			return fmt2.Errorf("Field4 this(%v) Not Equal that(%v)", *this.Field4, *that1.Field4)
		}
	} else if this.Field4 != nil {
		return fmt2.Errorf("this.Field4 == nil && that.Field4 != nil")
	} else if that1.Field4 != nil {
		return fmt2.Errorf("Field4 this(%v) Not Equal that(%v)", this.Field4, that1.Field4)
	}
	if this.Field5 != nil && that1.Field5 != nil {
		if *this.Field5 != *that1.Field5 {
			return fmt2.Errorf("Field5 this(%v) Not Equal that(%v)", *this.Field5, *that1.Field5)
		}
	} else if this.Field5 != nil {
		return fmt2.Errorf("this.Field5 == nil && that.Field5 != nil")
	} else if that1.Field5 != nil {
		return fmt2.Errorf("Field5 this(%v) Not Equal that(%v)", this.Field5, that1.Field5)
	}
	if this.Field6 != nil && that1.Field6 != nil {
		if *this.Field6 != *that1.Field6 {
			return fmt2.Errorf("Field6 this(%v) Not Equal that(%v)", *this.Field6, *that1.Field6)
		}
	} else if this.Field6 != nil {
		return fmt2.Errorf("this.Field6 == nil && that.Field6 != nil")
	} else if that1.Field6 != nil {
		return fmt2.Errorf("Field6 this(%v) Not Equal that(%v)", this.Field6, that1.Field6)
	}
	if this.Field13 != nil && that1.Field13 != nil {
		if *this.Field13 != *that1.Field13 {
			return fmt2.Errorf("Field13 this(%v) Not Equal that(%v)", *this.Field13, *that1.Field13)
		}
	} else if this.Field13 != nil {
		return fmt2.Errorf("this.Field13 == nil && that.Field13 != nil")
	} else if that1.Field13 != nil {
		return fmt2.Errorf("Field13 this(%v) Not Equal that(%v)", this.Field13, that1.Field13)
	}
	if this.Field14 != nil && that1.Field14 != nil {
		if *this.Field14 != *that1.Field14 {
			return fmt2.Errorf("Field14 this(%v) Not Equal that(%v)", *this.Field14, *that1.Field14)
		}
	} else if this.Field14 != nil {
		return fmt2.Errorf("this.Field14 == nil && that.Field14 != nil")
	} else if that1.Field14 != nil {
		return fmt2.Errorf("Field14 this(%v) Not Equal that(%v)", this.Field14, that1.Field14)
	}
	if !bytes.Equal(this.Field15, that1.Field15) {
		return fmt2.Errorf("Field15 this(%v) Not Equal that(%v)", this.Field15, that1.Field15)
	}
	return nil
}
func (this *NinOptNativeUnion) Equal(that interface{}) bool {
	if that == nil {
		if this == nil {
			return true
		}
		return false
	}

	that1, ok := that.(*NinOptNativeUnion)
	if !ok {
		return false
	}
	if that1 == nil {
		if this == nil {
			return true
		}
		return false
	} else if this == nil {
		return false
	}
	if this.Field1 != nil && that1.Field1 != nil {
		if *this.Field1 != *that1.Field1 {
			return false
		}
	} else if this.Field1 != nil {
		return false
	} else if that1.Field1 != nil {
		return false
	}
	if this.Field2 != nil && that1.Field2 != nil {
		if *this.Field2 != *that1.Field2 {
			return false
		}
	} else if this.Field2 != nil {
		return false
	} else if that1.Field2 != nil {
		return false
	}
	if this.Field3 != nil && that1.Field3 != nil {
		if *this.Field3 != *that1.Field3 {
			return false
		}
	} else if this.Field3 != nil {
		return false
	} else if that1.Field3 != nil {
		return false
	}
	if this.Field4 != nil && that1.Field4 != nil {
		if *this.Field4 != *that1.Field4 {
			return false
		}
	} else if this.Field4 != nil {
		return false
	} else if that1.Field4 != nil {
		return false
	}
	if this.Field5 != nil && that1.Field5 != nil {
		if *this.Field5 != *that1.Field5 {
			return false
		}
	} else if this.Field5 != nil {
		return false
	} else if that1.Field5 != nil {
		return false
	}
	if this.Field6 != nil && that1.Field6 != nil {
		if *this.Field6 != *that1.Field6 {
			return false
		}
	} else if this.Field6 != nil {
		return false
	} else if that1.Field6 != nil {
		return false
	}
	if this.Field13 != nil && that1.Field13 != nil {
		if *this.Field13 != *that1.Field13 {
			return false
		}
	} else if this.Field13 != nil {
		return false
	} else if that1.Field13 != nil {
		return false
	}
	if this.Field14 != nil && that1.Field14 != nil {
		if *this.Field14 != *that1.Field14 {
			return false
		}
	} else if this.Field14 != nil {
		return false
	} else if that1.Field14 != nil {
		return false
	}
	if !bytes.Equal(this.Field15, that1.Field15) {
		return false
	}
	return true
}
func (this *NinOptStructUnion) VerboseEqual(that interface{}) error {
	if that == nil {
		if this == nil {
			return nil
		}
		return fmt2.Errorf("that == nil && this != nil")
	}

	that1, ok := that.(*NinOptStructUnion)
	if !ok {
		return fmt2.Errorf("that is not of type *NinOptStructUnion")
	}
	if that1 == nil {
		if this == nil {
			return nil
		}
		return fmt2.Errorf("that is type *NinOptStructUnion but is nil && this != nil")
	} else if this == nil {
		return fmt2.Errorf("that is type *NinOptStructUnionbut is not nil && this == nil")
	}
	if this.Field1 != nil && that1.Field1 != nil {
		if *this.Field1 != *that1.Field1 {
			return fmt2.Errorf("Field1 this(%v) Not Equal that(%v)", *this.Field1, *that1.Field1)
		}
	} else if this.Field1 != nil {
		return fmt2.Errorf("this.Field1 == nil && that.Field1 != nil")
	} else if that1.Field1 != nil {
		return fmt2.Errorf("Field1 this(%v) Not Equal that(%v)", this.Field1, that1.Field1)
	}
	if this.Field2 != nil && that1.Field2 != nil {
		if *this.Field2 != *that1.Field2 {
			return fmt2.Errorf("Field2 this(%v) Not Equal that(%v)", *this.Field2, *that1.Field2)
		}
	} else if this.Field2 != nil {
		return fmt2.Errorf("this.Field2 == nil && that.Field2 != nil")
	} else if that1.Field2 != nil {
		return fmt2.Errorf("Field2 this(%v) Not Equal that(%v)", this.Field2, that1.Field2)
	}
	if !this.Field3.Equal(that1.Field3) {
		return fmt2.Errorf("Field3 this(%v) Not Equal that(%v)", this.Field3, that1.Field3)
	}
	if !this.Field4.Equal(that1.Field4) {
		return fmt2.Errorf("Field4 this(%v) Not Equal that(%v)", this.Field4, that1.Field4)
	}
	if this.Field6 != nil && that1.Field6 != nil {
		if *this.Field6 != *that1.Field6 {
			return fmt2.Errorf("Field6 this(%v) Not Equal that(%v)", *this.Field6, *that1.Field6)
		}
	} else if this.Field6 != nil {
		return fmt2.Errorf("this.Field6 == nil && that.Field6 != nil")
	} else if that1.Field6 != nil {
		return fmt2.Errorf("Field6 this(%v) Not Equal that(%v)", this.Field6, that1.Field6)
	}
	if this.Field7 != nil && that1.Field7 != nil {
		if *this.Field7 != *that1.Field7 {
			return fmt2.Errorf("Field7 this(%v) Not Equal that(%v)", *this.Field7, *that1.Field7)
		}
	} else if this.Field7 != nil {
		return fmt2.Errorf("this.Field7 == nil && that.Field7 != nil")
	} else if that1.Field7 != nil {
		return fmt2.Errorf("Field7 this(%v) Not Equal that(%v)", this.Field7, that1.Field7)
	}
	if this.Field13 != nil && that1.Field13 != nil {
		if *this.Field13 != *that1.Field13 {
			return fmt2.Errorf("Field13 this(%v) Not Equal that(%v)", *this.Field13, *that1.Field13)
		}
	} else if this.Field13 != nil {
		return fmt2.Errorf("this.Field13 == nil && that.Field13 != nil")
	} else if that1.Field13 != nil {
		return fmt2.Errorf("Field13 this(%v) Not Equal that(%v)", this.Field13, that1.Field13)
	}
	if this.Field14 != nil && that1.Field14 != nil {
		if *this.Field14 != *that1.Field14 {
			return fmt2.Errorf("Field14 this(%v) Not Equal that(%v)", *this.Field14, *that1.Field14)
		}
	} else if this.Field14 != nil {
		return fmt2.Errorf("this.Field14 == nil && that.Field14 != nil")
	} else if that1.Field14 != nil {
		return fmt2.Errorf("Field14 this(%v) Not Equal that(%v)", this.Field14, that1.Field14)
	}
	if !bytes.Equal(this.Field15, that1.Field15) {
		return fmt2.Errorf("Field15 this(%v) Not Equal that(%v)", this.Field15, that1.Field15)
	}
	return nil
}
func (this *NinOptStructUnion) Equal(that interface{}) bool {
	if that == nil {
		if this == nil {
			return true
		}
		return false
	}

	that1, ok := that.(*NinOptStructUnion)
	if !ok {
		return false
	}
	if that1 == nil {
		if this == nil {
			return true
		}
		return false
	} else if this == nil {
		return false
	}
	if this.Field1 != nil && that1.Field1 != nil {
		if *this.Field1 != *that1.Field1 {
			return false
		}
	} else if this.Field1 != nil {
		return false
	} else if that1.Field1 != nil {
		return false
	}
	if this.Field2 != nil && that1.Field2 != nil {
		if *this.Field2 != *that1.Field2 {
			return false
		}
	} else if this.Field2 != nil {
		return false
	} else if that1.Field2 != nil {
		return false
	}
	if !this.Field3.Equal(that1.Field3) {
		return false
	}
	if !this.Field4.Equal(that1.Field4) {
		return false
	}
	if this.Field6 != nil && that1.Field6 != nil {
		if *this.Field6 != *that1.Field6 {
			return false
		}
	} else if this.Field6 != nil {
		return false
	} else if that1.Field6 != nil {
		return false
	}
	if this.Field7 != nil && that1.Field7 != nil {
		if *this.Field7 != *that1.Field7 {
			return false
		}
	} else if this.Field7 != nil {
		return false
	} else if that1.Field7 != nil {
		return false
	}
	if this.Field13 != nil && that1.Field13 != nil {
		if *this.Field13 != *that1.Field13 {
			return false
		}
	} else if this.Field13 != nil {
		return false
	} else if that1.Field13 != nil {
		return false
	}
	if this.Field14 != nil && that1.Field14 != nil {
		if *this.Field14 != *that1.Field14 {
			return false
		}
	} else if this.Field14 != nil {
		return false
	} else if that1.Field14 != nil {
		return false
	}
	if !bytes.Equal(this.Field15, that1.Field15) {
		return false
	}
	return true
}
func (this *NinEmbeddedStructUnion) VerboseEqual(that interface{}) error {
	if that == nil {
		if this == nil {
			return nil
		}
		return fmt2.Errorf("that == nil && this != nil")
	}

	that1, ok := that.(*NinEmbeddedStructUnion)
	if !ok {
		return fmt2.Errorf("that is not of type *NinEmbeddedStructUnion")
	}
	if that1 == nil {
		if this == nil {
			return nil
		}
		return fmt2.Errorf("that is type *NinEmbeddedStructUnion but is nil && this != nil")
	} else if this == nil {
		return fmt2.Errorf("that is type *NinEmbeddedStructUnionbut is not nil && this == nil")
	}
	if !this.NidOptNative.Equal(that1.NidOptNative) {
		return fmt2.Errorf("NidOptNative this(%v) Not Equal that(%v)", this.NidOptNative, that1.NidOptNative)
	}
	if !this.Field200.Equal(that1.Field200) {
		return fmt2.Errorf("Field200 this(%v) Not Equal that(%v)", this.Field200, that1.Field200)
	}
	if this.Field210 != nil && that1.Field210 != nil {
		if *this.Field210 != *that1.Field210 {
			return fmt2.Errorf("Field210 this(%v) Not Equal that(%v)", *this.Field210, *that1.Field210)
		}
	} else if this.Field210 != nil {
		return fmt2.Errorf("this.Field210 == nil && that.Field210 != nil")
	} else if that1.Field210 != nil {
		return fmt2.Errorf("Field210 this(%v) Not Equal that(%v)", this.Field210, that1.Field210)
	}
	return nil
}
func (this *NinEmbeddedStructUnion) Equal(that interface{}) bool {
	if that == nil {
		if this == nil {
			return true
		}
		return false
	}

	that1, ok := that.(*NinEmbeddedStructUnion)
	if !ok {
		return false
	}
	if that1 == nil {
		if this == nil {
			return true
		}
		return false
	} else if this == nil {
		return false
	}
	if !this.NidOptNative.Equal(that1.NidOptNative) {
		return false
	}
	if !this.Field200.Equal(that1.Field200) {
		return false
	}
	if this.Field210 != nil && that1.Field210 != nil {
		if *this.Field210 != *that1.Field210 {
			return false
		}
	} else if this.Field210 != nil {
		return false
	} else if that1.Field210 != nil {
		return false
	}
	return true
}
func (this *NinNestedStructUnion) VerboseEqual(that interface{}) error {
	if that == nil {
		if this == nil {
			return nil
		}
		return fmt2.Errorf("that == nil && this != nil")
	}

	that1, ok := that.(*NinNestedStructUnion)
	if !ok {
		return fmt2.Errorf("that is not of type *NinNestedStructUnion")
	}
	if that1 == nil {
		if this == nil {
			return nil
		}
		return fmt2.Errorf("that is type *NinNestedStructUnion but is nil && this != nil")
	} else if this == nil {
		return fmt2.Errorf("that is type *NinNestedStructUnionbut is not nil && this == nil")
	}
	if !this.Field1.Equal(that1.Field1) {
		return fmt2.Errorf("Field1 this(%v) Not Equal that(%v)", this.Field1, that1.Field1)
	}
	if !this.Field2.Equal(that1.Field2) {
		return fmt2.Errorf("Field2 this(%v) Not Equal that(%v)", this.Field2, that1.Field2)
	}
	if !this.Field3.Equal(that1.Field3) {
		return fmt2.Errorf("Field3 this(%v) Not Equal that(%v)", this.Field3, that1.Field3)
	}
	return nil
}
func (this *NinNestedStructUnion) Equal(that interface{}) bool {
	if that == nil {
		if this == nil {
			return true
		}
		return false
	}

	that1, ok := that.(*NinNestedStructUnion)
	if !ok {
		return false
	}
	if that1 == nil {
		if this == nil {
			return true
		}
		return false
	} else if this == nil {
		return false
	}
	if !this.Field1.Equal(that1.Field1) {
		return false
	}
	if !this.Field2.Equal(that1.Field2) {
		return false
	}
	if !this.Field3.Equal(that1.Field3) {
		return false
	}
	return true
}
func (this *Tree) VerboseEqual(that interface{}) error {
	if that == nil {
		if this == nil {
			return nil
		}
		return fmt2.Errorf("that == nil && this != nil")
	}

	that1, ok := that.(*Tree)
	if !ok {
		return fmt2.Errorf("that is not of type *Tree")
	}
	if that1 == nil {
		if this == nil {
			return nil
		}
		return fmt2.Errorf("that is type *Tree but is nil && this != nil")
	} else if this == nil {
		return fmt2.Errorf("that is type *Treebut is not nil && this == nil")
	}
	if !this.Or.Equal(that1.Or) {
		return fmt2.Errorf("Or this(%v) Not Equal that(%v)", this.Or, that1.Or)
	}
	if !this.And.Equal(that1.And) {
		return fmt2.Errorf("And this(%v) Not Equal that(%v)", this.And, that1.And)
	}
	if !this.Leaf.Equal(that1.Leaf) {
		return fmt2.Errorf("Leaf this(%v) Not Equal that(%v)", this.Leaf, that1.Leaf)
	}
	return nil
}
func (this *Tree) Equal(that interface{}) bool {
	if that == nil {
		if this == nil {
			return true
		}
		return false
	}

	that1, ok := that.(*Tree)
	if !ok {
		return false
	}
	if that1 == nil {
		if this == nil {
			return true
		}
		return false
	} else if this == nil {
		return false
	}
	if !this.Or.Equal(that1.Or) {
		return false
	}
	if !this.And.Equal(that1.And) {
		return false
	}
	if !this.Leaf.Equal(that1.Leaf) {
		return false
	}
	return true
}
func (this *OrBranch) VerboseEqual(that interface{}) error {
	if that == nil {
		if this == nil {
			return nil
		}
		return fmt2.Errorf("that == nil && this != nil")
	}

	that1, ok := that.(*OrBranch)
	if !ok {
		return fmt2.Errorf("that is not of type *OrBranch")
	}
	if that1 == nil {
		if this == nil {
			return nil
		}
		return fmt2.Errorf("that is type *OrBranch but is nil && this != nil")
	} else if this == nil {
		return fmt2.Errorf("that is type *OrBranchbut is not nil && this == nil")
	}
	if !this.Left.Equal(&that1.Left) {
		return fmt2.Errorf("Left this(%v) Not Equal that(%v)", this.Left, that1.Left)
	}
	if !this.Right.Equal(&that1.Right) {
		return fmt2.Errorf("Right this(%v) Not Equal that(%v)", this.Right, that1.Right)
	}
	return nil
}
func (this *OrBranch) Equal(that interface{}) bool {
	if that == nil {
		if this == nil {
			return true
		}
		return false
	}

	that1, ok := that.(*OrBranch)
	if !ok {
		return false
	}
	if that1 == nil {
		if this == nil {
			return true
		}
		return false
	} else if this == nil {
		return false
	}
	if !this.Left.Equal(&that1.Left) {
		return false
	}
	if !this.Right.Equal(&that1.Right) {
		return false
	}
	return true
}
func (this *AndBranch) VerboseEqual(that interface{}) error {
	if that == nil {
		if this == nil {
			return nil
		}
		return fmt2.Errorf("that == nil && this != nil")
	}

	that1, ok := that.(*AndBranch)
	if !ok {
		return fmt2.Errorf("that is not of type *AndBranch")
	}
	if that1 == nil {
		if this == nil {
			return nil
		}
		return fmt2.Errorf("that is type *AndBranch but is nil && this != nil")
	} else if this == nil {
		return fmt2.Errorf("that is type *AndBranchbut is not nil && this == nil")
	}
	if !this.Left.Equal(&that1.Left) {
		return fmt2.Errorf("Left this(%v) Not Equal that(%v)", this.Left, that1.Left)
	}
	if !this.Right.Equal(&that1.Right) {
		return fmt2.Errorf("Right this(%v) Not Equal that(%v)", this.Right, that1.Right)
	}
	return nil
}
func (this *AndBranch) Equal(that interface{}) bool {
	if that == nil {
		if this == nil {
			return true
		}
		return false
	}

	that1, ok := that.(*AndBranch)
	if !ok {
		return false
	}
	if that1 == nil {
		if this == nil {
			return true
		}
		return false
	} else if this == nil {
		return false
	}
	if !this.Left.Equal(&that1.Left) {
		return false
	}
	if !this.Right.Equal(&that1.Right) {
		return false
	}
	return true
}
func (this *Leaf) VerboseEqual(that interface{}) error {
	if that == nil {
		if this == nil {
			return nil
		}
		return fmt2.Errorf("that == nil && this != nil")
	}

	that1, ok := that.(*Leaf)
	if !ok {
		return fmt2.Errorf("that is not of type *Leaf")
	}
	if that1 == nil {
		if this == nil {
			return nil
		}
		return fmt2.Errorf("that is type *Leaf but is nil && this != nil")
	} else if this == nil {
		return fmt2.Errorf("that is type *Leafbut is not nil && this == nil")
	}
	if this.Value != that1.Value {
		return fmt2.Errorf("Value this(%v) Not Equal that(%v)", this.Value, that1.Value)
	}
	if this.StrValue != that1.StrValue {
		return fmt2.Errorf("StrValue this(%v) Not Equal that(%v)", this.StrValue, that1.StrValue)
	}
	return nil
}
func (this *Leaf) Equal(that interface{}) bool {
	if that == nil {
		if this == nil {
			return true
		}
		return false
	}

	that1, ok := that.(*Leaf)
	if !ok {
		return false
	}
	if that1 == nil {
		if this == nil {
			return true
		}
		return false
	} else if this == nil {
		return false
	}
	if this.Value != that1.Value {
		return false
	}
	if this.StrValue != that1.StrValue {
		return false
	}
	return true
}
func (this *DeepTree) VerboseEqual(that interface{}) error {
	if that == nil {
		if this == nil {
			return nil
		}
		return fmt2.Errorf("that == nil && this != nil")
	}

	that1, ok := that.(*DeepTree)
	if !ok {
		return fmt2.Errorf("that is not of type *DeepTree")
	}
	if that1 == nil {
		if this == nil {
			return nil
		}
		return fmt2.Errorf("that is type *DeepTree but is nil && this != nil")
	} else if this == nil {
		return fmt2.Errorf("that is type *DeepTreebut is not nil && this == nil")
	}
	if !this.Down.Equal(that1.Down) {
		return fmt2.Errorf("Down this(%v) Not Equal that(%v)", this.Down, that1.Down)
	}
	if !this.And.Equal(that1.And) {
		return fmt2.Errorf("And this(%v) Not Equal that(%v)", this.And, that1.And)
	}
	if !this.Leaf.Equal(that1.Leaf) {
		return fmt2.Errorf("Leaf this(%v) Not Equal that(%v)", this.Leaf, that1.Leaf)
	}
	return nil
}
func (this *DeepTree) Equal(that interface{}) bool {
	if that == nil {
		if this == nil {
			return true
		}
		return false
	}

	that1, ok := that.(*DeepTree)
	if !ok {
		return false
	}
	if that1 == nil {
		if this == nil {
			return true
		}
		return false
	} else if this == nil {
		return false
	}
	if !this.Down.Equal(that1.Down) {
		return false
	}
	if !this.And.Equal(that1.And) {
		return false
	}
	if !this.Leaf.Equal(that1.Leaf) {
		return false
	}
	return true
}
func (this *ADeepBranch) VerboseEqual(that interface{}) error {
	if that == nil {
		if this == nil {
			return nil
		}
		return fmt2.Errorf("that == nil && this != nil")
	}

	that1, ok := that.(*ADeepBranch)
	if !ok {
		return fmt2.Errorf("that is not of type *ADeepBranch")
	}
	if that1 == nil {
		if this == nil {
			return nil
		}
		return fmt2.Errorf("that is type *ADeepBranch but is nil && this != nil")
	} else if this == nil {
		return fmt2.Errorf("that is type *ADeepBranchbut is not nil && this == nil")
	}
	if !this.Down.Equal(&that1.Down) {
		return fmt2.Errorf("Down this(%v) Not Equal that(%v)", this.Down, that1.Down)
	}
	return nil
}
func (this *ADeepBranch) Equal(that interface{}) bool {
	if that == nil {
		if this == nil {
			return true
		}
		return false
	}

	that1, ok := that.(*ADeepBranch)
	if !ok {
		return false
	}
	if that1 == nil {
		if this == nil {
			return true
		}
		return false
	} else if this == nil {
		return false
	}
	if !this.Down.Equal(&that1.Down) {
		return false
	}
	return true
}
func (this *AndDeepBranch) VerboseEqual(that interface{}) error {
	if that == nil {
		if this == nil {
			return nil
		}
		return fmt2.Errorf("that == nil && this != nil")
	}

	that1, ok := that.(*AndDeepBranch)
	if !ok {
		return fmt2.Errorf("that is not of type *AndDeepBranch")
	}
	if that1 == nil {
		if this == nil {
			return nil
		}
		return fmt2.Errorf("that is type *AndDeepBranch but is nil && this != nil")
	} else if this == nil {
		return fmt2.Errorf("that is type *AndDeepBranchbut is not nil && this == nil")
	}
	if !this.Left.Equal(&that1.Left) {
		return fmt2.Errorf("Left this(%v) Not Equal that(%v)", this.Left, that1.Left)
	}
	if !this.Right.Equal(&that1.Right) {
		return fmt2.Errorf("Right this(%v) Not Equal that(%v)", this.Right, that1.Right)
	}
	return nil
}
func (this *AndDeepBranch) Equal(that interface{}) bool {
	if that == nil {
		if this == nil {
			return true
		}
		return false
	}

	that1, ok := that.(*AndDeepBranch)
	if !ok {
		return false
	}
	if that1 == nil {
		if this == nil {
			return true
		}
		return false
	} else if this == nil {
		return false
	}
	if !this.Left.Equal(&that1.Left) {
		return false
	}
	if !this.Right.Equal(&that1.Right) {
		return false
	}
	return true
}
func (this *DeepLeaf) VerboseEqual(that interface{}) error {
	if that == nil {
		if this == nil {
			return nil
		}
		return fmt2.Errorf("that == nil && this != nil")
	}

	that1, ok := that.(*DeepLeaf)
	if !ok {
		return fmt2.Errorf("that is not of type *DeepLeaf")
	}
	if that1 == nil {
		if this == nil {
			return nil
		}
		return fmt2.Errorf("that is type *DeepLeaf but is nil && this != nil")
	} else if this == nil {
		return fmt2.Errorf("that is type *DeepLeafbut is not nil && this == nil")
	}
	if !this.Tree.Equal(&that1.Tree) {
		return fmt2.Errorf("Tree this(%v) Not Equal that(%v)", this.Tree, that1.Tree)
	}
	return nil
}
func (this *DeepLeaf) Equal(that interface{}) bool {
	if that == nil {
		if this == nil {
			return true
		}
		return false
	}

	that1, ok := that.(*DeepLeaf)
	if !ok {
		return false
	}
	if that1 == nil {
		if this == nil {
			return true
		}
		return false
	} else if this == nil {
		return false
	}
	if !this.Tree.Equal(&that1.Tree) {
		return false
	}
	return true
}
func (this *Nil) VerboseEqual(that interface{}) error {
	if that == nil {
		if this == nil {
			return nil
		}
		return fmt2.Errorf("that == nil && this != nil")
	}

	that1, ok := that.(*Nil)
	if !ok {
		return fmt2.Errorf("that is not of type *Nil")
	}
	if that1 == nil {
		if this == nil {
			return nil
		}
		return fmt2.Errorf("that is type *Nil but is nil && this != nil")
	} else if this == nil {
		return fmt2.Errorf("that is type *Nilbut is not nil && this == nil")
	}
	return nil
}
func (this *Nil) Equal(that interface{}) bool {
	if that == nil {
		if this == nil {
			return true
		}
		return false
	}

	that1, ok := that.(*Nil)
	if !ok {
		return false
	}
	if that1 == nil {
		if this == nil {
			return true
		}
		return false
	} else if this == nil {
		return false
	}
	return true
}
func (this *NidOptNative) Description() (desc *google_protobuf.DescriptorProto) {
	return &google_protobuf.DescriptorProto{Name: func(v string) *string { return &v }("NidOptNative"), Field: []*google_protobuf.FieldDescriptorProto{{Name: func(v string) *string { return &v }("Field1"), Number: func(v int32) *int32 { return &v }(1), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(1), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(1), TypeName: nil, Extendee: nil, DefaultValue: nil, Options: &google_protobuf.FieldOptions{Ctype: nil, Packed: nil, Lazy: nil, Deprecated: nil, ExperimentalMapKey: nil, Weak: nil, UninterpretedOption: []*google_protobuf.UninterpretedOption(nil)}}, {Name: func(v string) *string { return &v }("Field2"), Number: func(v int32) *int32 { return &v }(2), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(1), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(2), TypeName: nil, Extendee: nil, DefaultValue: nil, Options: &google_protobuf.FieldOptions{Ctype: nil, Packed: nil, Lazy: nil, Deprecated: nil, ExperimentalMapKey: nil, Weak: nil, UninterpretedOption: []*google_protobuf.UninterpretedOption(nil)}}, {Name: func(v string) *string { return &v }("Field3"), Number: func(v int32) *int32 { return &v }(3), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(1), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(5), TypeName: nil, Extendee: nil, DefaultValue: nil, Options: &google_protobuf.FieldOptions{Ctype: nil, Packed: nil, Lazy: nil, Deprecated: nil, ExperimentalMapKey: nil, Weak: nil, UninterpretedOption: []*google_protobuf.UninterpretedOption(nil)}}, {Name: func(v string) *string { return &v }("Field4"), Number: func(v int32) *int32 { return &v }(4), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(1), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(3), TypeName: nil, Extendee: nil, DefaultValue: nil, Options: &google_protobuf.FieldOptions{Ctype: nil, Packed: nil, Lazy: nil, Deprecated: nil, ExperimentalMapKey: nil, Weak: nil, UninterpretedOption: []*google_protobuf.UninterpretedOption(nil)}}, {Name: func(v string) *string { return &v }("Field5"), Number: func(v int32) *int32 { return &v }(5), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(1), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(13), TypeName: nil, Extendee: nil, DefaultValue: nil, Options: &google_protobuf.FieldOptions{Ctype: nil, Packed: nil, Lazy: nil, Deprecated: nil, ExperimentalMapKey: nil, Weak: nil, UninterpretedOption: []*google_protobuf.UninterpretedOption(nil)}}, {Name: func(v string) *string { return &v }("Field6"), Number: func(v int32) *int32 { return &v }(6), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(1), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(4), TypeName: nil, Extendee: nil, DefaultValue: nil, Options: &google_protobuf.FieldOptions{Ctype: nil, Packed: nil, Lazy: nil, Deprecated: nil, ExperimentalMapKey: nil, Weak: nil, UninterpretedOption: []*google_protobuf.UninterpretedOption(nil)}}, {Name: func(v string) *string { return &v }("Field7"), Number: func(v int32) *int32 { return &v }(7), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(1), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(17), TypeName: nil, Extendee: nil, DefaultValue: nil, Options: &google_protobuf.FieldOptions{Ctype: nil, Packed: nil, Lazy: nil, Deprecated: nil, ExperimentalMapKey: nil, Weak: nil, UninterpretedOption: []*google_protobuf.UninterpretedOption(nil)}}, {Name: func(v string) *string { return &v }("Field8"), Number: func(v int32) *int32 { return &v }(8), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(1), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(18), TypeName: nil, Extendee: nil, DefaultValue: nil, Options: &google_protobuf.FieldOptions{Ctype: nil, Packed: nil, Lazy: nil, Deprecated: nil, ExperimentalMapKey: nil, Weak: nil, UninterpretedOption: []*google_protobuf.UninterpretedOption(nil)}}, {Name: func(v string) *string { return &v }("Field9"), Number: func(v int32) *int32 { return &v }(9), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(1), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(7), TypeName: nil, Extendee: nil, DefaultValue: nil, Options: &google_protobuf.FieldOptions{Ctype: nil, Packed: nil, Lazy: nil, Deprecated: nil, ExperimentalMapKey: nil, Weak: nil, UninterpretedOption: []*google_protobuf.UninterpretedOption(nil)}}, {Name: func(v string) *string { return &v }("Field10"), Number: func(v int32) *int32 { return &v }(10), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(1), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(15), TypeName: nil, Extendee: nil, DefaultValue: nil, Options: &google_protobuf.FieldOptions{Ctype: nil, Packed: nil, Lazy: nil, Deprecated: nil, ExperimentalMapKey: nil, Weak: nil, UninterpretedOption: []*google_protobuf.UninterpretedOption(nil)}}, {Name: func(v string) *string { return &v }("Field11"), Number: func(v int32) *int32 { return &v }(11), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(1), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(6), TypeName: nil, Extendee: nil, DefaultValue: nil, Options: &google_protobuf.FieldOptions{Ctype: nil, Packed: nil, Lazy: nil, Deprecated: nil, ExperimentalMapKey: nil, Weak: nil, UninterpretedOption: []*google_protobuf.UninterpretedOption(nil)}}, {Name: func(v string) *string { return &v }("Field12"), Number: func(v int32) *int32 { return &v }(12), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(1), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(16), TypeName: nil, Extendee: nil, DefaultValue: nil, Options: &google_protobuf.FieldOptions{Ctype: nil, Packed: nil, Lazy: nil, Deprecated: nil, ExperimentalMapKey: nil, Weak: nil, UninterpretedOption: []*google_protobuf.UninterpretedOption(nil)}}, {Name: func(v string) *string { return &v }("Field13"), Number: func(v int32) *int32 { return &v }(13), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(1), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(8), TypeName: nil, Extendee: nil, DefaultValue: nil, Options: &google_protobuf.FieldOptions{Ctype: nil, Packed: nil, Lazy: nil, Deprecated: nil, ExperimentalMapKey: nil, Weak: nil, UninterpretedOption: []*google_protobuf.UninterpretedOption(nil)}}, {Name: func(v string) *string { return &v }("Field14"), Number: func(v int32) *int32 { return &v }(14), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(1), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(9), TypeName: nil, Extendee: nil, DefaultValue: nil, Options: &google_protobuf.FieldOptions{Ctype: nil, Packed: nil, Lazy: nil, Deprecated: nil, ExperimentalMapKey: nil, Weak: nil, UninterpretedOption: []*google_protobuf.UninterpretedOption(nil)}}, {Name: func(v string) *string { return &v }("Field15"), Number: func(v int32) *int32 { return &v }(15), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(1), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(12), TypeName: nil, Extendee: nil, DefaultValue: nil, Options: &google_protobuf.FieldOptions{Ctype: nil, Packed: nil, Lazy: nil, Deprecated: nil, ExperimentalMapKey: nil, Weak: nil, UninterpretedOption: []*google_protobuf.UninterpretedOption(nil)}}}, Extension: []*google_protobuf.FieldDescriptorProto(nil), NestedType: []*google_protobuf.DescriptorProto(nil), EnumType: []*google_protobuf.EnumDescriptorProto(nil), ExtensionRange: []*google_protobuf.DescriptorProto_ExtensionRange(nil), Options: nil}
}
func (this *NinOptNative) Description() (desc *google_protobuf.DescriptorProto) {
	return &google_protobuf.DescriptorProto{Name: func(v string) *string { return &v }("NinOptNative"), Field: []*google_protobuf.FieldDescriptorProto{{Name: func(v string) *string { return &v }("Field1"), Number: func(v int32) *int32 { return &v }(1), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(1), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(1), TypeName: nil, Extendee: nil, DefaultValue: nil, Options: nil}, {Name: func(v string) *string { return &v }("Field2"), Number: func(v int32) *int32 { return &v }(2), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(1), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(2), TypeName: nil, Extendee: nil, DefaultValue: nil, Options: nil}, {Name: func(v string) *string { return &v }("Field3"), Number: func(v int32) *int32 { return &v }(3), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(1), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(5), TypeName: nil, Extendee: nil, DefaultValue: nil, Options: nil}, {Name: func(v string) *string { return &v }("Field4"), Number: func(v int32) *int32 { return &v }(4), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(1), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(3), TypeName: nil, Extendee: nil, DefaultValue: nil, Options: nil}, {Name: func(v string) *string { return &v }("Field5"), Number: func(v int32) *int32 { return &v }(5), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(1), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(13), TypeName: nil, Extendee: nil, DefaultValue: nil, Options: nil}, {Name: func(v string) *string { return &v }("Field6"), Number: func(v int32) *int32 { return &v }(6), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(1), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(4), TypeName: nil, Extendee: nil, DefaultValue: nil, Options: nil}, {Name: func(v string) *string { return &v }("Field7"), Number: func(v int32) *int32 { return &v }(7), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(1), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(17), TypeName: nil, Extendee: nil, DefaultValue: nil, Options: nil}, {Name: func(v string) *string { return &v }("Field8"), Number: func(v int32) *int32 { return &v }(8), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(1), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(18), TypeName: nil, Extendee: nil, DefaultValue: nil, Options: nil}, {Name: func(v string) *string { return &v }("Field9"), Number: func(v int32) *int32 { return &v }(9), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(1), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(7), TypeName: nil, Extendee: nil, DefaultValue: nil, Options: nil}, {Name: func(v string) *string { return &v }("Field10"), Number: func(v int32) *int32 { return &v }(10), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(1), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(15), TypeName: nil, Extendee: nil, DefaultValue: nil, Options: nil}, {Name: func(v string) *string { return &v }("Field11"), Number: func(v int32) *int32 { return &v }(11), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(1), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(6), TypeName: nil, Extendee: nil, DefaultValue: nil, Options: nil}, {Name: func(v string) *string { return &v }("Field12"), Number: func(v int32) *int32 { return &v }(12), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(1), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(16), TypeName: nil, Extendee: nil, DefaultValue: nil, Options: nil}, {Name: func(v string) *string { return &v }("Field13"), Number: func(v int32) *int32 { return &v }(13), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(1), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(8), TypeName: nil, Extendee: nil, DefaultValue: nil, Options: nil}, {Name: func(v string) *string { return &v }("Field14"), Number: func(v int32) *int32 { return &v }(14), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(1), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(9), TypeName: nil, Extendee: nil, DefaultValue: nil, Options: nil}, {Name: func(v string) *string { return &v }("Field15"), Number: func(v int32) *int32 { return &v }(15), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(1), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(12), TypeName: nil, Extendee: nil, DefaultValue: nil, Options: nil}}, Extension: []*google_protobuf.FieldDescriptorProto(nil), NestedType: []*google_protobuf.DescriptorProto(nil), EnumType: []*google_protobuf.EnumDescriptorProto(nil), ExtensionRange: []*google_protobuf.DescriptorProto_ExtensionRange(nil), Options: nil}
}
func (this *NidRepNative) Description() (desc *google_protobuf.DescriptorProto) {
	return &google_protobuf.DescriptorProto{Name: func(v string) *string { return &v }("NidRepNative"), Field: []*google_protobuf.FieldDescriptorProto{{Name: func(v string) *string { return &v }("Field1"), Number: func(v int32) *int32 { return &v }(1), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(3), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(1), TypeName: nil, Extendee: nil, DefaultValue: nil, Options: &google_protobuf.FieldOptions{Ctype: nil, Packed: nil, Lazy: nil, Deprecated: nil, ExperimentalMapKey: nil, Weak: nil, UninterpretedOption: []*google_protobuf.UninterpretedOption(nil)}}, {Name: func(v string) *string { return &v }("Field2"), Number: func(v int32) *int32 { return &v }(2), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(3), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(2), TypeName: nil, Extendee: nil, DefaultValue: nil, Options: &google_protobuf.FieldOptions{Ctype: nil, Packed: nil, Lazy: nil, Deprecated: nil, ExperimentalMapKey: nil, Weak: nil, UninterpretedOption: []*google_protobuf.UninterpretedOption(nil)}}, {Name: func(v string) *string { return &v }("Field3"), Number: func(v int32) *int32 { return &v }(3), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(3), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(5), TypeName: nil, Extendee: nil, DefaultValue: nil, Options: &google_protobuf.FieldOptions{Ctype: nil, Packed: nil, Lazy: nil, Deprecated: nil, ExperimentalMapKey: nil, Weak: nil, UninterpretedOption: []*google_protobuf.UninterpretedOption(nil)}}, {Name: func(v string) *string { return &v }("Field4"), Number: func(v int32) *int32 { return &v }(4), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(3), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(3), TypeName: nil, Extendee: nil, DefaultValue: nil, Options: &google_protobuf.FieldOptions{Ctype: nil, Packed: nil, Lazy: nil, Deprecated: nil, ExperimentalMapKey: nil, Weak: nil, UninterpretedOption: []*google_protobuf.UninterpretedOption(nil)}}, {Name: func(v string) *string { return &v }("Field5"), Number: func(v int32) *int32 { return &v }(5), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(3), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(13), TypeName: nil, Extendee: nil, DefaultValue: nil, Options: &google_protobuf.FieldOptions{Ctype: nil, Packed: nil, Lazy: nil, Deprecated: nil, ExperimentalMapKey: nil, Weak: nil, UninterpretedOption: []*google_protobuf.UninterpretedOption(nil)}}, {Name: func(v string) *string { return &v }("Field6"), Number: func(v int32) *int32 { return &v }(6), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(3), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(4), TypeName: nil, Extendee: nil, DefaultValue: nil, Options: &google_protobuf.FieldOptions{Ctype: nil, Packed: nil, Lazy: nil, Deprecated: nil, ExperimentalMapKey: nil, Weak: nil, UninterpretedOption: []*google_protobuf.UninterpretedOption(nil)}}, {Name: func(v string) *string { return &v }("Field7"), Number: func(v int32) *int32 { return &v }(7), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(3), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(17), TypeName: nil, Extendee: nil, DefaultValue: nil, Options: &google_protobuf.FieldOptions{Ctype: nil, Packed: nil, Lazy: nil, Deprecated: nil, ExperimentalMapKey: nil, Weak: nil, UninterpretedOption: []*google_protobuf.UninterpretedOption(nil)}}, {Name: func(v string) *string { return &v }("Field8"), Number: func(v int32) *int32 { return &v }(8), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(3), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(18), TypeName: nil, Extendee: nil, DefaultValue: nil, Options: &google_protobuf.FieldOptions{Ctype: nil, Packed: nil, Lazy: nil, Deprecated: nil, ExperimentalMapKey: nil, Weak: nil, UninterpretedOption: []*google_protobuf.UninterpretedOption(nil)}}, {Name: func(v string) *string { return &v }("Field9"), Number: func(v int32) *int32 { return &v }(9), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(3), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(7), TypeName: nil, Extendee: nil, DefaultValue: nil, Options: &google_protobuf.FieldOptions{Ctype: nil, Packed: nil, Lazy: nil, Deprecated: nil, ExperimentalMapKey: nil, Weak: nil, UninterpretedOption: []*google_protobuf.UninterpretedOption(nil)}}, {Name: func(v string) *string { return &v }("Field10"), Number: func(v int32) *int32 { return &v }(10), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(3), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(15), TypeName: nil, Extendee: nil, DefaultValue: nil, Options: &google_protobuf.FieldOptions{Ctype: nil, Packed: nil, Lazy: nil, Deprecated: nil, ExperimentalMapKey: nil, Weak: nil, UninterpretedOption: []*google_protobuf.UninterpretedOption(nil)}}, {Name: func(v string) *string { return &v }("Field11"), Number: func(v int32) *int32 { return &v }(11), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(3), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(6), TypeName: nil, Extendee: nil, DefaultValue: nil, Options: &google_protobuf.FieldOptions{Ctype: nil, Packed: nil, Lazy: nil, Deprecated: nil, ExperimentalMapKey: nil, Weak: nil, UninterpretedOption: []*google_protobuf.UninterpretedOption(nil)}}, {Name: func(v string) *string { return &v }("Field12"), Number: func(v int32) *int32 { return &v }(12), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(3), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(16), TypeName: nil, Extendee: nil, DefaultValue: nil, Options: &google_protobuf.FieldOptions{Ctype: nil, Packed: nil, Lazy: nil, Deprecated: nil, ExperimentalMapKey: nil, Weak: nil, UninterpretedOption: []*google_protobuf.UninterpretedOption(nil)}}, {Name: func(v string) *string { return &v }("Field13"), Number: func(v int32) *int32 { return &v }(13), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(3), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(8), TypeName: nil, Extendee: nil, DefaultValue: nil, Options: &google_protobuf.FieldOptions{Ctype: nil, Packed: nil, Lazy: nil, Deprecated: nil, ExperimentalMapKey: nil, Weak: nil, UninterpretedOption: []*google_protobuf.UninterpretedOption(nil)}}, {Name: func(v string) *string { return &v }("Field14"), Number: func(v int32) *int32 { return &v }(14), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(3), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(9), TypeName: nil, Extendee: nil, DefaultValue: nil, Options: &google_protobuf.FieldOptions{Ctype: nil, Packed: nil, Lazy: nil, Deprecated: nil, ExperimentalMapKey: nil, Weak: nil, UninterpretedOption: []*google_protobuf.UninterpretedOption(nil)}}, {Name: func(v string) *string { return &v }("Field15"), Number: func(v int32) *int32 { return &v }(15), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(3), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(12), TypeName: nil, Extendee: nil, DefaultValue: nil, Options: &google_protobuf.FieldOptions{Ctype: nil, Packed: nil, Lazy: nil, Deprecated: nil, ExperimentalMapKey: nil, Weak: nil, UninterpretedOption: []*google_protobuf.UninterpretedOption(nil)}}}, Extension: []*google_protobuf.FieldDescriptorProto(nil), NestedType: []*google_protobuf.DescriptorProto(nil), EnumType: []*google_protobuf.EnumDescriptorProto(nil), ExtensionRange: []*google_protobuf.DescriptorProto_ExtensionRange(nil), Options: nil}
}
func (this *NinRepNative) Description() (desc *google_protobuf.DescriptorProto) {
	return &google_protobuf.DescriptorProto{Name: func(v string) *string { return &v }("NinRepNative"), Field: []*google_protobuf.FieldDescriptorProto{{Name: func(v string) *string { return &v }("Field1"), Number: func(v int32) *int32 { return &v }(1), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(3), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(1), TypeName: nil, Extendee: nil, DefaultValue: nil, Options: nil}, {Name: func(v string) *string { return &v }("Field2"), Number: func(v int32) *int32 { return &v }(2), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(3), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(2), TypeName: nil, Extendee: nil, DefaultValue: nil, Options: nil}, {Name: func(v string) *string { return &v }("Field3"), Number: func(v int32) *int32 { return &v }(3), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(3), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(5), TypeName: nil, Extendee: nil, DefaultValue: nil, Options: nil}, {Name: func(v string) *string { return &v }("Field4"), Number: func(v int32) *int32 { return &v }(4), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(3), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(3), TypeName: nil, Extendee: nil, DefaultValue: nil, Options: nil}, {Name: func(v string) *string { return &v }("Field5"), Number: func(v int32) *int32 { return &v }(5), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(3), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(13), TypeName: nil, Extendee: nil, DefaultValue: nil, Options: nil}, {Name: func(v string) *string { return &v }("Field6"), Number: func(v int32) *int32 { return &v }(6), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(3), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(4), TypeName: nil, Extendee: nil, DefaultValue: nil, Options: nil}, {Name: func(v string) *string { return &v }("Field7"), Number: func(v int32) *int32 { return &v }(7), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(3), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(17), TypeName: nil, Extendee: nil, DefaultValue: nil, Options: nil}, {Name: func(v string) *string { return &v }("Field8"), Number: func(v int32) *int32 { return &v }(8), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(3), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(18), TypeName: nil, Extendee: nil, DefaultValue: nil, Options: nil}, {Name: func(v string) *string { return &v }("Field9"), Number: func(v int32) *int32 { return &v }(9), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(3), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(7), TypeName: nil, Extendee: nil, DefaultValue: nil, Options: nil}, {Name: func(v string) *string { return &v }("Field10"), Number: func(v int32) *int32 { return &v }(10), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(3), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(15), TypeName: nil, Extendee: nil, DefaultValue: nil, Options: nil}, {Name: func(v string) *string { return &v }("Field11"), Number: func(v int32) *int32 { return &v }(11), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(3), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(6), TypeName: nil, Extendee: nil, DefaultValue: nil, Options: nil}, {Name: func(v string) *string { return &v }("Field12"), Number: func(v int32) *int32 { return &v }(12), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(3), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(16), TypeName: nil, Extendee: nil, DefaultValue: nil, Options: nil}, {Name: func(v string) *string { return &v }("Field13"), Number: func(v int32) *int32 { return &v }(13), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(3), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(8), TypeName: nil, Extendee: nil, DefaultValue: nil, Options: nil}, {Name: func(v string) *string { return &v }("Field14"), Number: func(v int32) *int32 { return &v }(14), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(3), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(9), TypeName: nil, Extendee: nil, DefaultValue: nil, Options: nil}, {Name: func(v string) *string { return &v }("Field15"), Number: func(v int32) *int32 { return &v }(15), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(3), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(12), TypeName: nil, Extendee: nil, DefaultValue: nil, Options: nil}}, Extension: []*google_protobuf.FieldDescriptorProto(nil), NestedType: []*google_protobuf.DescriptorProto(nil), EnumType: []*google_protobuf.EnumDescriptorProto(nil), ExtensionRange: []*google_protobuf.DescriptorProto_ExtensionRange(nil), Options: nil}
}
func (this *NidRepPackedNative) Description() (desc *google_protobuf.DescriptorProto) {
	return &google_protobuf.DescriptorProto{Name: func(v string) *string { return &v }("NidRepPackedNative"), Field: []*google_protobuf.FieldDescriptorProto{{Name: func(v string) *string { return &v }("Field3"), Number: func(v int32) *int32 { return &v }(3), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(3), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(5), TypeName: nil, Extendee: nil, DefaultValue: nil, Options: &google_protobuf.FieldOptions{Ctype: nil, Packed: func(v bool) *bool { return &v }(true), Lazy: nil, Deprecated: nil, ExperimentalMapKey: nil, Weak: nil, UninterpretedOption: []*google_protobuf.UninterpretedOption(nil)}}, {Name: func(v string) *string { return &v }("Field4"), Number: func(v int32) *int32 { return &v }(4), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(3), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(3), TypeName: nil, Extendee: nil, DefaultValue: nil, Options: &google_protobuf.FieldOptions{Ctype: nil, Packed: func(v bool) *bool { return &v }(true), Lazy: nil, Deprecated: nil, ExperimentalMapKey: nil, Weak: nil, UninterpretedOption: []*google_protobuf.UninterpretedOption(nil)}}, {Name: func(v string) *string { return &v }("Field13"), Number: func(v int32) *int32 { return &v }(13), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(3), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(8), TypeName: nil, Extendee: nil, DefaultValue: nil, Options: &google_protobuf.FieldOptions{Ctype: nil, Packed: func(v bool) *bool { return &v }(true), Lazy: nil, Deprecated: nil, ExperimentalMapKey: nil, Weak: nil, UninterpretedOption: []*google_protobuf.UninterpretedOption(nil)}}}, Extension: []*google_protobuf.FieldDescriptorProto(nil), NestedType: []*google_protobuf.DescriptorProto(nil), EnumType: []*google_protobuf.EnumDescriptorProto(nil), ExtensionRange: []*google_protobuf.DescriptorProto_ExtensionRange(nil), Options: nil}
}
func (this *NinRepPackedNative) Description() (desc *google_protobuf.DescriptorProto) {
	return &google_protobuf.DescriptorProto{Name: func(v string) *string { return &v }("NinRepPackedNative"), Field: []*google_protobuf.FieldDescriptorProto{{Name: func(v string) *string { return &v }("Field3"), Number: func(v int32) *int32 { return &v }(3), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(3), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(5), TypeName: nil, Extendee: nil, DefaultValue: nil, Options: nil}, {Name: func(v string) *string { return &v }("Field4"), Number: func(v int32) *int32 { return &v }(4), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(3), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(3), TypeName: nil, Extendee: nil, DefaultValue: nil, Options: nil}, {Name: func(v string) *string { return &v }("Field13"), Number: func(v int32) *int32 { return &v }(13), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(3), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(8), TypeName: nil, Extendee: nil, DefaultValue: nil, Options: nil}}, Extension: []*google_protobuf.FieldDescriptorProto(nil), NestedType: []*google_protobuf.DescriptorProto(nil), EnumType: []*google_protobuf.EnumDescriptorProto(nil), ExtensionRange: []*google_protobuf.DescriptorProto_ExtensionRange(nil), Options: nil}
}
func (this *NidOptStruct) Description() (desc *google_protobuf.DescriptorProto) {
	return &google_protobuf.DescriptorProto{Name: func(v string) *string { return &v }("NidOptStruct"), Field: []*google_protobuf.FieldDescriptorProto{{Name: func(v string) *string { return &v }("Field1"), Number: func(v int32) *int32 { return &v }(1), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(1), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(1), TypeName: nil, Extendee: nil, DefaultValue: nil, Options: &google_protobuf.FieldOptions{Ctype: nil, Packed: nil, Lazy: nil, Deprecated: nil, ExperimentalMapKey: nil, Weak: nil, UninterpretedOption: []*google_protobuf.UninterpretedOption(nil)}}, {Name: func(v string) *string { return &v }("Field2"), Number: func(v int32) *int32 { return &v }(2), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(1), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(2), TypeName: nil, Extendee: nil, DefaultValue: nil, Options: &google_protobuf.FieldOptions{Ctype: nil, Packed: nil, Lazy: nil, Deprecated: nil, ExperimentalMapKey: nil, Weak: nil, UninterpretedOption: []*google_protobuf.UninterpretedOption(nil)}}, {Name: func(v string) *string { return &v }("Field3"), Number: func(v int32) *int32 { return &v }(3), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(1), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(11), TypeName: func(v string) *string { return &v }(".test.NidOptNative"), Extendee: nil, DefaultValue: nil, Options: &google_protobuf.FieldOptions{Ctype: nil, Packed: nil, Lazy: nil, Deprecated: nil, ExperimentalMapKey: nil, Weak: nil, UninterpretedOption: []*google_protobuf.UninterpretedOption(nil)}}, {Name: func(v string) *string { return &v }("Field4"), Number: func(v int32) *int32 { return &v }(4), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(1), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(11), TypeName: func(v string) *string { return &v }(".test.NinOptNative"), Extendee: nil, DefaultValue: nil, Options: &google_protobuf.FieldOptions{Ctype: nil, Packed: nil, Lazy: nil, Deprecated: nil, ExperimentalMapKey: nil, Weak: nil, UninterpretedOption: []*google_protobuf.UninterpretedOption(nil)}}, {Name: func(v string) *string { return &v }("Field6"), Number: func(v int32) *int32 { return &v }(6), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(1), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(4), TypeName: nil, Extendee: nil, DefaultValue: nil, Options: &google_protobuf.FieldOptions{Ctype: nil, Packed: nil, Lazy: nil, Deprecated: nil, ExperimentalMapKey: nil, Weak: nil, UninterpretedOption: []*google_protobuf.UninterpretedOption(nil)}}, {Name: func(v string) *string { return &v }("Field7"), Number: func(v int32) *int32 { return &v }(7), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(1), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(17), TypeName: nil, Extendee: nil, DefaultValue: nil, Options: &google_protobuf.FieldOptions{Ctype: nil, Packed: nil, Lazy: nil, Deprecated: nil, ExperimentalMapKey: nil, Weak: nil, UninterpretedOption: []*google_protobuf.UninterpretedOption(nil)}}, {Name: func(v string) *string { return &v }("Field8"), Number: func(v int32) *int32 { return &v }(8), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(1), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(11), TypeName: func(v string) *string { return &v }(".test.NidOptNative"), Extendee: nil, DefaultValue: nil, Options: &google_protobuf.FieldOptions{Ctype: nil, Packed: nil, Lazy: nil, Deprecated: nil, ExperimentalMapKey: nil, Weak: nil, UninterpretedOption: []*google_protobuf.UninterpretedOption(nil)}}, {Name: func(v string) *string { return &v }("Field13"), Number: func(v int32) *int32 { return &v }(13), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(1), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(8), TypeName: nil, Extendee: nil, DefaultValue: nil, Options: &google_protobuf.FieldOptions{Ctype: nil, Packed: nil, Lazy: nil, Deprecated: nil, ExperimentalMapKey: nil, Weak: nil, UninterpretedOption: []*google_protobuf.UninterpretedOption(nil)}}, {Name: func(v string) *string { return &v }("Field14"), Number: func(v int32) *int32 { return &v }(14), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(1), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(9), TypeName: nil, Extendee: nil, DefaultValue: nil, Options: &google_protobuf.FieldOptions{Ctype: nil, Packed: nil, Lazy: nil, Deprecated: nil, ExperimentalMapKey: nil, Weak: nil, UninterpretedOption: []*google_protobuf.UninterpretedOption(nil)}}, {Name: func(v string) *string { return &v }("Field15"), Number: func(v int32) *int32 { return &v }(15), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(1), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(12), TypeName: nil, Extendee: nil, DefaultValue: nil, Options: &google_protobuf.FieldOptions{Ctype: nil, Packed: nil, Lazy: nil, Deprecated: nil, ExperimentalMapKey: nil, Weak: nil, UninterpretedOption: []*google_protobuf.UninterpretedOption(nil)}}}, Extension: []*google_protobuf.FieldDescriptorProto(nil), NestedType: []*google_protobuf.DescriptorProto(nil), EnumType: []*google_protobuf.EnumDescriptorProto(nil), ExtensionRange: []*google_protobuf.DescriptorProto_ExtensionRange(nil), Options: nil}
}
func (this *NinOptStruct) Description() (desc *google_protobuf.DescriptorProto) {
	return &google_protobuf.DescriptorProto{Name: func(v string) *string { return &v }("NinOptStruct"), Field: []*google_protobuf.FieldDescriptorProto{{Name: func(v string) *string { return &v }("Field1"), Number: func(v int32) *int32 { return &v }(1), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(1), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(1), TypeName: nil, Extendee: nil, DefaultValue: nil, Options: nil}, {Name: func(v string) *string { return &v }("Field2"), Number: func(v int32) *int32 { return &v }(2), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(1), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(2), TypeName: nil, Extendee: nil, DefaultValue: nil, Options: nil}, {Name: func(v string) *string { return &v }("Field3"), Number: func(v int32) *int32 { return &v }(3), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(1), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(11), TypeName: func(v string) *string { return &v }(".test.NidOptNative"), Extendee: nil, DefaultValue: nil, Options: nil}, {Name: func(v string) *string { return &v }("Field4"), Number: func(v int32) *int32 { return &v }(4), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(1), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(11), TypeName: func(v string) *string { return &v }(".test.NinOptNative"), Extendee: nil, DefaultValue: nil, Options: nil}, {Name: func(v string) *string { return &v }("Field6"), Number: func(v int32) *int32 { return &v }(6), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(1), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(4), TypeName: nil, Extendee: nil, DefaultValue: nil, Options: nil}, {Name: func(v string) *string { return &v }("Field7"), Number: func(v int32) *int32 { return &v }(7), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(1), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(17), TypeName: nil, Extendee: nil, DefaultValue: nil, Options: nil}, {Name: func(v string) *string { return &v }("Field8"), Number: func(v int32) *int32 { return &v }(8), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(1), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(11), TypeName: func(v string) *string { return &v }(".test.NidOptNative"), Extendee: nil, DefaultValue: nil, Options: nil}, {Name: func(v string) *string { return &v }("Field13"), Number: func(v int32) *int32 { return &v }(13), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(1), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(8), TypeName: nil, Extendee: nil, DefaultValue: nil, Options: nil}, {Name: func(v string) *string { return &v }("Field14"), Number: func(v int32) *int32 { return &v }(14), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(1), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(9), TypeName: nil, Extendee: nil, DefaultValue: nil, Options: nil}, {Name: func(v string) *string { return &v }("Field15"), Number: func(v int32) *int32 { return &v }(15), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(1), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(12), TypeName: nil, Extendee: nil, DefaultValue: nil, Options: nil}}, Extension: []*google_protobuf.FieldDescriptorProto(nil), NestedType: []*google_protobuf.DescriptorProto(nil), EnumType: []*google_protobuf.EnumDescriptorProto(nil), ExtensionRange: []*google_protobuf.DescriptorProto_ExtensionRange(nil), Options: nil}
}
func (this *NidRepStruct) Description() (desc *google_protobuf.DescriptorProto) {
	return &google_protobuf.DescriptorProto{Name: func(v string) *string { return &v }("NidRepStruct"), Field: []*google_protobuf.FieldDescriptorProto{{Name: func(v string) *string { return &v }("Field1"), Number: func(v int32) *int32 { return &v }(1), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(3), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(1), TypeName: nil, Extendee: nil, DefaultValue: nil, Options: &google_protobuf.FieldOptions{Ctype: nil, Packed: nil, Lazy: nil, Deprecated: nil, ExperimentalMapKey: nil, Weak: nil, UninterpretedOption: []*google_protobuf.UninterpretedOption(nil)}}, {Name: func(v string) *string { return &v }("Field2"), Number: func(v int32) *int32 { return &v }(2), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(3), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(2), TypeName: nil, Extendee: nil, DefaultValue: nil, Options: &google_protobuf.FieldOptions{Ctype: nil, Packed: nil, Lazy: nil, Deprecated: nil, ExperimentalMapKey: nil, Weak: nil, UninterpretedOption: []*google_protobuf.UninterpretedOption(nil)}}, {Name: func(v string) *string { return &v }("Field3"), Number: func(v int32) *int32 { return &v }(3), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(3), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(11), TypeName: func(v string) *string { return &v }(".test.NidOptNative"), Extendee: nil, DefaultValue: nil, Options: &google_protobuf.FieldOptions{Ctype: nil, Packed: nil, Lazy: nil, Deprecated: nil, ExperimentalMapKey: nil, Weak: nil, UninterpretedOption: []*google_protobuf.UninterpretedOption(nil)}}, {Name: func(v string) *string { return &v }("Field4"), Number: func(v int32) *int32 { return &v }(4), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(3), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(11), TypeName: func(v string) *string { return &v }(".test.NinOptNative"), Extendee: nil, DefaultValue: nil, Options: &google_protobuf.FieldOptions{Ctype: nil, Packed: nil, Lazy: nil, Deprecated: nil, ExperimentalMapKey: nil, Weak: nil, UninterpretedOption: []*google_protobuf.UninterpretedOption(nil)}}, {Name: func(v string) *string { return &v }("Field6"), Number: func(v int32) *int32 { return &v }(6), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(3), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(4), TypeName: nil, Extendee: nil, DefaultValue: nil, Options: &google_protobuf.FieldOptions{Ctype: nil, Packed: nil, Lazy: nil, Deprecated: nil, ExperimentalMapKey: nil, Weak: nil, UninterpretedOption: []*google_protobuf.UninterpretedOption(nil)}}, {Name: func(v string) *string { return &v }("Field7"), Number: func(v int32) *int32 { return &v }(7), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(3), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(17), TypeName: nil, Extendee: nil, DefaultValue: nil, Options: &google_protobuf.FieldOptions{Ctype: nil, Packed: nil, Lazy: nil, Deprecated: nil, ExperimentalMapKey: nil, Weak: nil, UninterpretedOption: []*google_protobuf.UninterpretedOption(nil)}}, {Name: func(v string) *string { return &v }("Field8"), Number: func(v int32) *int32 { return &v }(8), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(3), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(11), TypeName: func(v string) *string { return &v }(".test.NidOptNative"), Extendee: nil, DefaultValue: nil, Options: &google_protobuf.FieldOptions{Ctype: nil, Packed: nil, Lazy: nil, Deprecated: nil, ExperimentalMapKey: nil, Weak: nil, UninterpretedOption: []*google_protobuf.UninterpretedOption(nil)}}, {Name: func(v string) *string { return &v }("Field13"), Number: func(v int32) *int32 { return &v }(13), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(3), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(8), TypeName: nil, Extendee: nil, DefaultValue: nil, Options: &google_protobuf.FieldOptions{Ctype: nil, Packed: nil, Lazy: nil, Deprecated: nil, ExperimentalMapKey: nil, Weak: nil, UninterpretedOption: []*google_protobuf.UninterpretedOption(nil)}}, {Name: func(v string) *string { return &v }("Field14"), Number: func(v int32) *int32 { return &v }(14), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(3), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(9), TypeName: nil, Extendee: nil, DefaultValue: nil, Options: &google_protobuf.FieldOptions{Ctype: nil, Packed: nil, Lazy: nil, Deprecated: nil, ExperimentalMapKey: nil, Weak: nil, UninterpretedOption: []*google_protobuf.UninterpretedOption(nil)}}, {Name: func(v string) *string { return &v }("Field15"), Number: func(v int32) *int32 { return &v }(15), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(3), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(12), TypeName: nil, Extendee: nil, DefaultValue: nil, Options: &google_protobuf.FieldOptions{Ctype: nil, Packed: nil, Lazy: nil, Deprecated: nil, ExperimentalMapKey: nil, Weak: nil, UninterpretedOption: []*google_protobuf.UninterpretedOption(nil)}}}, Extension: []*google_protobuf.FieldDescriptorProto(nil), NestedType: []*google_protobuf.DescriptorProto(nil), EnumType: []*google_protobuf.EnumDescriptorProto(nil), ExtensionRange: []*google_protobuf.DescriptorProto_ExtensionRange(nil), Options: nil}
}
func (this *NinRepStruct) Description() (desc *google_protobuf.DescriptorProto) {
	return &google_protobuf.DescriptorProto{Name: func(v string) *string { return &v }("NinRepStruct"), Field: []*google_protobuf.FieldDescriptorProto{{Name: func(v string) *string { return &v }("Field1"), Number: func(v int32) *int32 { return &v }(1), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(3), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(1), TypeName: nil, Extendee: nil, DefaultValue: nil, Options: nil}, {Name: func(v string) *string { return &v }("Field2"), Number: func(v int32) *int32 { return &v }(2), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(3), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(2), TypeName: nil, Extendee: nil, DefaultValue: nil, Options: nil}, {Name: func(v string) *string { return &v }("Field3"), Number: func(v int32) *int32 { return &v }(3), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(3), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(11), TypeName: func(v string) *string { return &v }(".test.NidOptNative"), Extendee: nil, DefaultValue: nil, Options: nil}, {Name: func(v string) *string { return &v }("Field4"), Number: func(v int32) *int32 { return &v }(4), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(3), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(11), TypeName: func(v string) *string { return &v }(".test.NinOptNative"), Extendee: nil, DefaultValue: nil, Options: nil}, {Name: func(v string) *string { return &v }("Field6"), Number: func(v int32) *int32 { return &v }(6), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(3), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(4), TypeName: nil, Extendee: nil, DefaultValue: nil, Options: nil}, {Name: func(v string) *string { return &v }("Field7"), Number: func(v int32) *int32 { return &v }(7), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(3), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(17), TypeName: nil, Extendee: nil, DefaultValue: nil, Options: nil}, {Name: func(v string) *string { return &v }("Field8"), Number: func(v int32) *int32 { return &v }(8), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(3), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(11), TypeName: func(v string) *string { return &v }(".test.NidOptNative"), Extendee: nil, DefaultValue: nil, Options: nil}, {Name: func(v string) *string { return &v }("Field13"), Number: func(v int32) *int32 { return &v }(13), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(3), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(8), TypeName: nil, Extendee: nil, DefaultValue: nil, Options: nil}, {Name: func(v string) *string { return &v }("Field14"), Number: func(v int32) *int32 { return &v }(14), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(3), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(9), TypeName: nil, Extendee: nil, DefaultValue: nil, Options: nil}, {Name: func(v string) *string { return &v }("Field15"), Number: func(v int32) *int32 { return &v }(15), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(3), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(12), TypeName: nil, Extendee: nil, DefaultValue: nil, Options: nil}}, Extension: []*google_protobuf.FieldDescriptorProto(nil), NestedType: []*google_protobuf.DescriptorProto(nil), EnumType: []*google_protobuf.EnumDescriptorProto(nil), ExtensionRange: []*google_protobuf.DescriptorProto_ExtensionRange(nil), Options: nil}
}
func (this *NidEmbeddedStruct) Description() (desc *google_protobuf.DescriptorProto) {
	return &google_protobuf.DescriptorProto{Name: func(v string) *string { return &v }("NidEmbeddedStruct"), Field: []*google_protobuf.FieldDescriptorProto{{Name: func(v string) *string { return &v }("Field1"), Number: func(v int32) *int32 { return &v }(1), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(1), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(11), TypeName: func(v string) *string { return &v }(".test.NidOptNative"), Extendee: nil, DefaultValue: nil, Options: &google_protobuf.FieldOptions{Ctype: nil, Packed: nil, Lazy: nil, Deprecated: nil, ExperimentalMapKey: nil, Weak: nil, UninterpretedOption: []*google_protobuf.UninterpretedOption(nil)}}, {Name: func(v string) *string { return &v }("Field200"), Number: func(v int32) *int32 { return &v }(200), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(1), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(11), TypeName: func(v string) *string { return &v }(".test.NidOptNative"), Extendee: nil, DefaultValue: nil, Options: &google_protobuf.FieldOptions{Ctype: nil, Packed: nil, Lazy: nil, Deprecated: nil, ExperimentalMapKey: nil, Weak: nil, UninterpretedOption: []*google_protobuf.UninterpretedOption(nil)}}, {Name: func(v string) *string { return &v }("Field210"), Number: func(v int32) *int32 { return &v }(210), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(1), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(8), TypeName: nil, Extendee: nil, DefaultValue: nil, Options: &google_protobuf.FieldOptions{Ctype: nil, Packed: nil, Lazy: nil, Deprecated: nil, ExperimentalMapKey: nil, Weak: nil, UninterpretedOption: []*google_protobuf.UninterpretedOption(nil)}}}, Extension: []*google_protobuf.FieldDescriptorProto(nil), NestedType: []*google_protobuf.DescriptorProto(nil), EnumType: []*google_protobuf.EnumDescriptorProto(nil), ExtensionRange: []*google_protobuf.DescriptorProto_ExtensionRange(nil), Options: nil}
}
func (this *NinEmbeddedStruct) Description() (desc *google_protobuf.DescriptorProto) {
	return &google_protobuf.DescriptorProto{Name: func(v string) *string { return &v }("NinEmbeddedStruct"), Field: []*google_protobuf.FieldDescriptorProto{{Name: func(v string) *string { return &v }("Field1"), Number: func(v int32) *int32 { return &v }(1), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(1), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(11), TypeName: func(v string) *string { return &v }(".test.NidOptNative"), Extendee: nil, DefaultValue: nil, Options: &google_protobuf.FieldOptions{Ctype: nil, Packed: nil, Lazy: nil, Deprecated: nil, ExperimentalMapKey: nil, Weak: nil, UninterpretedOption: []*google_protobuf.UninterpretedOption(nil)}}, {Name: func(v string) *string { return &v }("Field200"), Number: func(v int32) *int32 { return &v }(200), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(1), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(11), TypeName: func(v string) *string { return &v }(".test.NidOptNative"), Extendee: nil, DefaultValue: nil, Options: nil}, {Name: func(v string) *string { return &v }("Field210"), Number: func(v int32) *int32 { return &v }(210), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(1), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(8), TypeName: nil, Extendee: nil, DefaultValue: nil, Options: nil}}, Extension: []*google_protobuf.FieldDescriptorProto(nil), NestedType: []*google_protobuf.DescriptorProto(nil), EnumType: []*google_protobuf.EnumDescriptorProto(nil), ExtensionRange: []*google_protobuf.DescriptorProto_ExtensionRange(nil), Options: nil}
}
func (this *NidNestedStruct) Description() (desc *google_protobuf.DescriptorProto) {
	return &google_protobuf.DescriptorProto{Name: func(v string) *string { return &v }("NidNestedStruct"), Field: []*google_protobuf.FieldDescriptorProto{{Name: func(v string) *string { return &v }("Field1"), Number: func(v int32) *int32 { return &v }(1), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(1), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(11), TypeName: func(v string) *string { return &v }(".test.NidOptStruct"), Extendee: nil, DefaultValue: nil, Options: &google_protobuf.FieldOptions{Ctype: nil, Packed: nil, Lazy: nil, Deprecated: nil, ExperimentalMapKey: nil, Weak: nil, UninterpretedOption: []*google_protobuf.UninterpretedOption(nil)}}, {Name: func(v string) *string { return &v }("Field2"), Number: func(v int32) *int32 { return &v }(2), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(3), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(11), TypeName: func(v string) *string { return &v }(".test.NidRepStruct"), Extendee: nil, DefaultValue: nil, Options: &google_protobuf.FieldOptions{Ctype: nil, Packed: nil, Lazy: nil, Deprecated: nil, ExperimentalMapKey: nil, Weak: nil, UninterpretedOption: []*google_protobuf.UninterpretedOption(nil)}}}, Extension: []*google_protobuf.FieldDescriptorProto(nil), NestedType: []*google_protobuf.DescriptorProto(nil), EnumType: []*google_protobuf.EnumDescriptorProto(nil), ExtensionRange: []*google_protobuf.DescriptorProto_ExtensionRange(nil), Options: nil}
}
func (this *NinNestedStruct) Description() (desc *google_protobuf.DescriptorProto) {
	return &google_protobuf.DescriptorProto{Name: func(v string) *string { return &v }("NinNestedStruct"), Field: []*google_protobuf.FieldDescriptorProto{{Name: func(v string) *string { return &v }("Field1"), Number: func(v int32) *int32 { return &v }(1), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(1), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(11), TypeName: func(v string) *string { return &v }(".test.NidOptStruct"), Extendee: nil, DefaultValue: nil, Options: nil}, {Name: func(v string) *string { return &v }("Field2"), Number: func(v int32) *int32 { return &v }(2), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(3), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(11), TypeName: func(v string) *string { return &v }(".test.NidRepStruct"), Extendee: nil, DefaultValue: nil, Options: nil}}, Extension: []*google_protobuf.FieldDescriptorProto(nil), NestedType: []*google_protobuf.DescriptorProto(nil), EnumType: []*google_protobuf.EnumDescriptorProto(nil), ExtensionRange: []*google_protobuf.DescriptorProto_ExtensionRange(nil), Options: nil}
}
func (this *NidOptCustom) Description() (desc *google_protobuf.DescriptorProto) {
	return &google_protobuf.DescriptorProto{Name: func(v string) *string { return &v }("NidOptCustom"), Field: []*google_protobuf.FieldDescriptorProto{{Name: func(v string) *string { return &v }("Id"), Number: func(v int32) *int32 { return &v }(1), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(1), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(12), TypeName: nil, Extendee: nil, DefaultValue: nil, Options: &google_protobuf.FieldOptions{Ctype: nil, Packed: nil, Lazy: nil, Deprecated: nil, ExperimentalMapKey: nil, Weak: nil, UninterpretedOption: []*google_protobuf.UninterpretedOption(nil)}}, {Name: func(v string) *string { return &v }("Value"), Number: func(v int32) *int32 { return &v }(2), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(1), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(12), TypeName: nil, Extendee: nil, DefaultValue: nil, Options: &google_protobuf.FieldOptions{Ctype: nil, Packed: nil, Lazy: nil, Deprecated: nil, ExperimentalMapKey: nil, Weak: nil, UninterpretedOption: []*google_protobuf.UninterpretedOption(nil)}}}, Extension: []*google_protobuf.FieldDescriptorProto(nil), NestedType: []*google_protobuf.DescriptorProto(nil), EnumType: []*google_protobuf.EnumDescriptorProto(nil), ExtensionRange: []*google_protobuf.DescriptorProto_ExtensionRange(nil), Options: nil}
}
func (this *NinOptCustom) Description() (desc *google_protobuf.DescriptorProto) {
	return &google_protobuf.DescriptorProto{Name: func(v string) *string { return &v }("NinOptCustom"), Field: []*google_protobuf.FieldDescriptorProto{{Name: func(v string) *string { return &v }("Id"), Number: func(v int32) *int32 { return &v }(1), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(1), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(12), TypeName: nil, Extendee: nil, DefaultValue: nil, Options: &google_protobuf.FieldOptions{Ctype: nil, Packed: nil, Lazy: nil, Deprecated: nil, ExperimentalMapKey: nil, Weak: nil, UninterpretedOption: []*google_protobuf.UninterpretedOption(nil)}}, {Name: func(v string) *string { return &v }("Value"), Number: func(v int32) *int32 { return &v }(2), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(1), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(12), TypeName: nil, Extendee: nil, DefaultValue: nil, Options: &google_protobuf.FieldOptions{Ctype: nil, Packed: nil, Lazy: nil, Deprecated: nil, ExperimentalMapKey: nil, Weak: nil, UninterpretedOption: []*google_protobuf.UninterpretedOption(nil)}}}, Extension: []*google_protobuf.FieldDescriptorProto(nil), NestedType: []*google_protobuf.DescriptorProto(nil), EnumType: []*google_protobuf.EnumDescriptorProto(nil), ExtensionRange: []*google_protobuf.DescriptorProto_ExtensionRange(nil), Options: nil}
}
func (this *NidRepCustom) Description() (desc *google_protobuf.DescriptorProto) {
	return &google_protobuf.DescriptorProto{Name: func(v string) *string { return &v }("NidRepCustom"), Field: []*google_protobuf.FieldDescriptorProto{{Name: func(v string) *string { return &v }("Id"), Number: func(v int32) *int32 { return &v }(1), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(3), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(12), TypeName: nil, Extendee: nil, DefaultValue: nil, Options: &google_protobuf.FieldOptions{Ctype: nil, Packed: nil, Lazy: nil, Deprecated: nil, ExperimentalMapKey: nil, Weak: nil, UninterpretedOption: []*google_protobuf.UninterpretedOption(nil)}}, {Name: func(v string) *string { return &v }("Value"), Number: func(v int32) *int32 { return &v }(2), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(3), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(12), TypeName: nil, Extendee: nil, DefaultValue: nil, Options: &google_protobuf.FieldOptions{Ctype: nil, Packed: nil, Lazy: nil, Deprecated: nil, ExperimentalMapKey: nil, Weak: nil, UninterpretedOption: []*google_protobuf.UninterpretedOption(nil)}}}, Extension: []*google_protobuf.FieldDescriptorProto(nil), NestedType: []*google_protobuf.DescriptorProto(nil), EnumType: []*google_protobuf.EnumDescriptorProto(nil), ExtensionRange: []*google_protobuf.DescriptorProto_ExtensionRange(nil), Options: nil}
}
func (this *NinRepCustom) Description() (desc *google_protobuf.DescriptorProto) {
	return &google_protobuf.DescriptorProto{Name: func(v string) *string { return &v }("NinRepCustom"), Field: []*google_protobuf.FieldDescriptorProto{{Name: func(v string) *string { return &v }("Id"), Number: func(v int32) *int32 { return &v }(1), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(3), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(12), TypeName: nil, Extendee: nil, DefaultValue: nil, Options: &google_protobuf.FieldOptions{Ctype: nil, Packed: nil, Lazy: nil, Deprecated: nil, ExperimentalMapKey: nil, Weak: nil, UninterpretedOption: []*google_protobuf.UninterpretedOption(nil)}}, {Name: func(v string) *string { return &v }("Value"), Number: func(v int32) *int32 { return &v }(2), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(3), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(12), TypeName: nil, Extendee: nil, DefaultValue: nil, Options: &google_protobuf.FieldOptions{Ctype: nil, Packed: nil, Lazy: nil, Deprecated: nil, ExperimentalMapKey: nil, Weak: nil, UninterpretedOption: []*google_protobuf.UninterpretedOption(nil)}}}, Extension: []*google_protobuf.FieldDescriptorProto(nil), NestedType: []*google_protobuf.DescriptorProto(nil), EnumType: []*google_protobuf.EnumDescriptorProto(nil), ExtensionRange: []*google_protobuf.DescriptorProto_ExtensionRange(nil), Options: nil}
}
func (this *NinOptNativeUnion) Description() (desc *google_protobuf.DescriptorProto) {
	return &google_protobuf.DescriptorProto{Name: func(v string) *string { return &v }("NinOptNativeUnion"), Field: []*google_protobuf.FieldDescriptorProto{{Name: func(v string) *string { return &v }("Field1"), Number: func(v int32) *int32 { return &v }(1), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(1), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(1), TypeName: nil, Extendee: nil, DefaultValue: nil, Options: nil}, {Name: func(v string) *string { return &v }("Field2"), Number: func(v int32) *int32 { return &v }(2), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(1), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(2), TypeName: nil, Extendee: nil, DefaultValue: nil, Options: nil}, {Name: func(v string) *string { return &v }("Field3"), Number: func(v int32) *int32 { return &v }(3), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(1), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(5), TypeName: nil, Extendee: nil, DefaultValue: nil, Options: nil}, {Name: func(v string) *string { return &v }("Field4"), Number: func(v int32) *int32 { return &v }(4), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(1), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(3), TypeName: nil, Extendee: nil, DefaultValue: nil, Options: nil}, {Name: func(v string) *string { return &v }("Field5"), Number: func(v int32) *int32 { return &v }(5), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(1), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(13), TypeName: nil, Extendee: nil, DefaultValue: nil, Options: nil}, {Name: func(v string) *string { return &v }("Field6"), Number: func(v int32) *int32 { return &v }(6), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(1), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(4), TypeName: nil, Extendee: nil, DefaultValue: nil, Options: nil}, {Name: func(v string) *string { return &v }("Field13"), Number: func(v int32) *int32 { return &v }(13), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(1), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(8), TypeName: nil, Extendee: nil, DefaultValue: nil, Options: nil}, {Name: func(v string) *string { return &v }("Field14"), Number: func(v int32) *int32 { return &v }(14), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(1), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(9), TypeName: nil, Extendee: nil, DefaultValue: nil, Options: nil}, {Name: func(v string) *string { return &v }("Field15"), Number: func(v int32) *int32 { return &v }(15), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(1), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(12), TypeName: nil, Extendee: nil, DefaultValue: nil, Options: nil}}, Extension: []*google_protobuf.FieldDescriptorProto(nil), NestedType: []*google_protobuf.DescriptorProto(nil), EnumType: []*google_protobuf.EnumDescriptorProto(nil), ExtensionRange: []*google_protobuf.DescriptorProto_ExtensionRange(nil), Options: &google_protobuf.MessageOptions{MessageSetWireFormat: nil, NoStandardDescriptorAccessor: nil, UninterpretedOption: []*google_protobuf.UninterpretedOption(nil)}}
}
func (this *NinOptStructUnion) Description() (desc *google_protobuf.DescriptorProto) {
	return &google_protobuf.DescriptorProto{Name: func(v string) *string { return &v }("NinOptStructUnion"), Field: []*google_protobuf.FieldDescriptorProto{{Name: func(v string) *string { return &v }("Field1"), Number: func(v int32) *int32 { return &v }(1), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(1), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(1), TypeName: nil, Extendee: nil, DefaultValue: nil, Options: nil}, {Name: func(v string) *string { return &v }("Field2"), Number: func(v int32) *int32 { return &v }(2), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(1), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(2), TypeName: nil, Extendee: nil, DefaultValue: nil, Options: nil}, {Name: func(v string) *string { return &v }("Field3"), Number: func(v int32) *int32 { return &v }(3), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(1), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(11), TypeName: func(v string) *string { return &v }(".test.NidOptNative"), Extendee: nil, DefaultValue: nil, Options: nil}, {Name: func(v string) *string { return &v }("Field4"), Number: func(v int32) *int32 { return &v }(4), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(1), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(11), TypeName: func(v string) *string { return &v }(".test.NinOptNative"), Extendee: nil, DefaultValue: nil, Options: nil}, {Name: func(v string) *string { return &v }("Field6"), Number: func(v int32) *int32 { return &v }(6), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(1), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(4), TypeName: nil, Extendee: nil, DefaultValue: nil, Options: nil}, {Name: func(v string) *string { return &v }("Field7"), Number: func(v int32) *int32 { return &v }(7), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(1), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(17), TypeName: nil, Extendee: nil, DefaultValue: nil, Options: nil}, {Name: func(v string) *string { return &v }("Field13"), Number: func(v int32) *int32 { return &v }(13), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(1), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(8), TypeName: nil, Extendee: nil, DefaultValue: nil, Options: nil}, {Name: func(v string) *string { return &v }("Field14"), Number: func(v int32) *int32 { return &v }(14), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(1), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(9), TypeName: nil, Extendee: nil, DefaultValue: nil, Options: nil}, {Name: func(v string) *string { return &v }("Field15"), Number: func(v int32) *int32 { return &v }(15), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(1), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(12), TypeName: nil, Extendee: nil, DefaultValue: nil, Options: nil}}, Extension: []*google_protobuf.FieldDescriptorProto(nil), NestedType: []*google_protobuf.DescriptorProto(nil), EnumType: []*google_protobuf.EnumDescriptorProto(nil), ExtensionRange: []*google_protobuf.DescriptorProto_ExtensionRange(nil), Options: &google_protobuf.MessageOptions{MessageSetWireFormat: nil, NoStandardDescriptorAccessor: nil, UninterpretedOption: []*google_protobuf.UninterpretedOption(nil)}}
}
func (this *NinEmbeddedStructUnion) Description() (desc *google_protobuf.DescriptorProto) {
	return &google_protobuf.DescriptorProto{Name: func(v string) *string { return &v }("NinEmbeddedStructUnion"), Field: []*google_protobuf.FieldDescriptorProto{{Name: func(v string) *string { return &v }("Field1"), Number: func(v int32) *int32 { return &v }(1), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(1), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(11), TypeName: func(v string) *string { return &v }(".test.NidOptNative"), Extendee: nil, DefaultValue: nil, Options: &google_protobuf.FieldOptions{Ctype: nil, Packed: nil, Lazy: nil, Deprecated: nil, ExperimentalMapKey: nil, Weak: nil, UninterpretedOption: []*google_protobuf.UninterpretedOption(nil)}}, {Name: func(v string) *string { return &v }("Field200"), Number: func(v int32) *int32 { return &v }(200), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(1), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(11), TypeName: func(v string) *string { return &v }(".test.NinOptNative"), Extendee: nil, DefaultValue: nil, Options: nil}, {Name: func(v string) *string { return &v }("Field210"), Number: func(v int32) *int32 { return &v }(210), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(1), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(8), TypeName: nil, Extendee: nil, DefaultValue: nil, Options: nil}}, Extension: []*google_protobuf.FieldDescriptorProto(nil), NestedType: []*google_protobuf.DescriptorProto(nil), EnumType: []*google_protobuf.EnumDescriptorProto(nil), ExtensionRange: []*google_protobuf.DescriptorProto_ExtensionRange(nil), Options: &google_protobuf.MessageOptions{MessageSetWireFormat: nil, NoStandardDescriptorAccessor: nil, UninterpretedOption: []*google_protobuf.UninterpretedOption(nil)}}
}
func (this *NinNestedStructUnion) Description() (desc *google_protobuf.DescriptorProto) {
	return &google_protobuf.DescriptorProto{Name: func(v string) *string { return &v }("NinNestedStructUnion"), Field: []*google_protobuf.FieldDescriptorProto{{Name: func(v string) *string { return &v }("Field1"), Number: func(v int32) *int32 { return &v }(1), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(1), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(11), TypeName: func(v string) *string { return &v }(".test.NinOptNativeUnion"), Extendee: nil, DefaultValue: nil, Options: nil}, {Name: func(v string) *string { return &v }("Field2"), Number: func(v int32) *int32 { return &v }(2), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(1), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(11), TypeName: func(v string) *string { return &v }(".test.NinOptStructUnion"), Extendee: nil, DefaultValue: nil, Options: nil}, {Name: func(v string) *string { return &v }("Field3"), Number: func(v int32) *int32 { return &v }(3), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(1), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(11), TypeName: func(v string) *string { return &v }(".test.NinEmbeddedStructUnion"), Extendee: nil, DefaultValue: nil, Options: nil}}, Extension: []*google_protobuf.FieldDescriptorProto(nil), NestedType: []*google_protobuf.DescriptorProto(nil), EnumType: []*google_protobuf.EnumDescriptorProto(nil), ExtensionRange: []*google_protobuf.DescriptorProto_ExtensionRange(nil), Options: &google_protobuf.MessageOptions{MessageSetWireFormat: nil, NoStandardDescriptorAccessor: nil, UninterpretedOption: []*google_protobuf.UninterpretedOption(nil)}}
}
func (this *Tree) Description() (desc *google_protobuf.DescriptorProto) {
	return &google_protobuf.DescriptorProto{Name: func(v string) *string { return &v }("Tree"), Field: []*google_protobuf.FieldDescriptorProto{{Name: func(v string) *string { return &v }("Or"), Number: func(v int32) *int32 { return &v }(1), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(1), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(11), TypeName: func(v string) *string { return &v }(".test.OrBranch"), Extendee: nil, DefaultValue: nil, Options: nil}, {Name: func(v string) *string { return &v }("And"), Number: func(v int32) *int32 { return &v }(2), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(1), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(11), TypeName: func(v string) *string { return &v }(".test.AndBranch"), Extendee: nil, DefaultValue: nil, Options: nil}, {Name: func(v string) *string { return &v }("Leaf"), Number: func(v int32) *int32 { return &v }(3), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(1), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(11), TypeName: func(v string) *string { return &v }(".test.Leaf"), Extendee: nil, DefaultValue: nil, Options: nil}}, Extension: []*google_protobuf.FieldDescriptorProto(nil), NestedType: []*google_protobuf.DescriptorProto(nil), EnumType: []*google_protobuf.EnumDescriptorProto(nil), ExtensionRange: []*google_protobuf.DescriptorProto_ExtensionRange(nil), Options: &google_protobuf.MessageOptions{MessageSetWireFormat: nil, NoStandardDescriptorAccessor: nil, UninterpretedOption: []*google_protobuf.UninterpretedOption(nil)}}
}
func (this *OrBranch) Description() (desc *google_protobuf.DescriptorProto) {
	return &google_protobuf.DescriptorProto{Name: func(v string) *string { return &v }("OrBranch"), Field: []*google_protobuf.FieldDescriptorProto{{Name: func(v string) *string { return &v }("Left"), Number: func(v int32) *int32 { return &v }(1), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(1), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(11), TypeName: func(v string) *string { return &v }(".test.Tree"), Extendee: nil, DefaultValue: nil, Options: &google_protobuf.FieldOptions{Ctype: nil, Packed: nil, Lazy: nil, Deprecated: nil, ExperimentalMapKey: nil, Weak: nil, UninterpretedOption: []*google_protobuf.UninterpretedOption(nil)}}, {Name: func(v string) *string { return &v }("Right"), Number: func(v int32) *int32 { return &v }(2), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(1), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(11), TypeName: func(v string) *string { return &v }(".test.Tree"), Extendee: nil, DefaultValue: nil, Options: &google_protobuf.FieldOptions{Ctype: nil, Packed: nil, Lazy: nil, Deprecated: nil, ExperimentalMapKey: nil, Weak: nil, UninterpretedOption: []*google_protobuf.UninterpretedOption(nil)}}}, Extension: []*google_protobuf.FieldDescriptorProto(nil), NestedType: []*google_protobuf.DescriptorProto(nil), EnumType: []*google_protobuf.EnumDescriptorProto(nil), ExtensionRange: []*google_protobuf.DescriptorProto_ExtensionRange(nil), Options: nil}
}
func (this *AndBranch) Description() (desc *google_protobuf.DescriptorProto) {
	return &google_protobuf.DescriptorProto{Name: func(v string) *string { return &v }("AndBranch"), Field: []*google_protobuf.FieldDescriptorProto{{Name: func(v string) *string { return &v }("Left"), Number: func(v int32) *int32 { return &v }(1), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(1), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(11), TypeName: func(v string) *string { return &v }(".test.Tree"), Extendee: nil, DefaultValue: nil, Options: &google_protobuf.FieldOptions{Ctype: nil, Packed: nil, Lazy: nil, Deprecated: nil, ExperimentalMapKey: nil, Weak: nil, UninterpretedOption: []*google_protobuf.UninterpretedOption(nil)}}, {Name: func(v string) *string { return &v }("Right"), Number: func(v int32) *int32 { return &v }(2), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(1), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(11), TypeName: func(v string) *string { return &v }(".test.Tree"), Extendee: nil, DefaultValue: nil, Options: &google_protobuf.FieldOptions{Ctype: nil, Packed: nil, Lazy: nil, Deprecated: nil, ExperimentalMapKey: nil, Weak: nil, UninterpretedOption: []*google_protobuf.UninterpretedOption(nil)}}}, Extension: []*google_protobuf.FieldDescriptorProto(nil), NestedType: []*google_protobuf.DescriptorProto(nil), EnumType: []*google_protobuf.EnumDescriptorProto(nil), ExtensionRange: []*google_protobuf.DescriptorProto_ExtensionRange(nil), Options: nil}
}
func (this *Leaf) Description() (desc *google_protobuf.DescriptorProto) {
	return &google_protobuf.DescriptorProto{Name: func(v string) *string { return &v }("Leaf"), Field: []*google_protobuf.FieldDescriptorProto{{Name: func(v string) *string { return &v }("Value"), Number: func(v int32) *int32 { return &v }(1), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(1), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(3), TypeName: nil, Extendee: nil, DefaultValue: nil, Options: &google_protobuf.FieldOptions{Ctype: nil, Packed: nil, Lazy: nil, Deprecated: nil, ExperimentalMapKey: nil, Weak: nil, UninterpretedOption: []*google_protobuf.UninterpretedOption(nil)}}, {Name: func(v string) *string { return &v }("StrValue"), Number: func(v int32) *int32 { return &v }(2), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(1), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(9), TypeName: nil, Extendee: nil, DefaultValue: nil, Options: &google_protobuf.FieldOptions{Ctype: nil, Packed: nil, Lazy: nil, Deprecated: nil, ExperimentalMapKey: nil, Weak: nil, UninterpretedOption: []*google_protobuf.UninterpretedOption(nil)}}}, Extension: []*google_protobuf.FieldDescriptorProto(nil), NestedType: []*google_protobuf.DescriptorProto(nil), EnumType: []*google_protobuf.EnumDescriptorProto(nil), ExtensionRange: []*google_protobuf.DescriptorProto_ExtensionRange(nil), Options: nil}
}
func (this *DeepTree) Description() (desc *google_protobuf.DescriptorProto) {
	return &google_protobuf.DescriptorProto{Name: func(v string) *string { return &v }("DeepTree"), Field: []*google_protobuf.FieldDescriptorProto{{Name: func(v string) *string { return &v }("Down"), Number: func(v int32) *int32 { return &v }(1), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(1), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(11), TypeName: func(v string) *string { return &v }(".test.ADeepBranch"), Extendee: nil, DefaultValue: nil, Options: nil}, {Name: func(v string) *string { return &v }("And"), Number: func(v int32) *int32 { return &v }(2), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(1), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(11), TypeName: func(v string) *string { return &v }(".test.AndDeepBranch"), Extendee: nil, DefaultValue: nil, Options: nil}, {Name: func(v string) *string { return &v }("Leaf"), Number: func(v int32) *int32 { return &v }(3), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(1), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(11), TypeName: func(v string) *string { return &v }(".test.DeepLeaf"), Extendee: nil, DefaultValue: nil, Options: nil}}, Extension: []*google_protobuf.FieldDescriptorProto(nil), NestedType: []*google_protobuf.DescriptorProto(nil), EnumType: []*google_protobuf.EnumDescriptorProto(nil), ExtensionRange: []*google_protobuf.DescriptorProto_ExtensionRange(nil), Options: &google_protobuf.MessageOptions{MessageSetWireFormat: nil, NoStandardDescriptorAccessor: nil, UninterpretedOption: []*google_protobuf.UninterpretedOption(nil)}}
}
func (this *ADeepBranch) Description() (desc *google_protobuf.DescriptorProto) {
	return &google_protobuf.DescriptorProto{Name: func(v string) *string { return &v }("ADeepBranch"), Field: []*google_protobuf.FieldDescriptorProto{{Name: func(v string) *string { return &v }("Down"), Number: func(v int32) *int32 { return &v }(2), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(1), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(11), TypeName: func(v string) *string { return &v }(".test.DeepTree"), Extendee: nil, DefaultValue: nil, Options: &google_protobuf.FieldOptions{Ctype: nil, Packed: nil, Lazy: nil, Deprecated: nil, ExperimentalMapKey: nil, Weak: nil, UninterpretedOption: []*google_protobuf.UninterpretedOption(nil)}}}, Extension: []*google_protobuf.FieldDescriptorProto(nil), NestedType: []*google_protobuf.DescriptorProto(nil), EnumType: []*google_protobuf.EnumDescriptorProto(nil), ExtensionRange: []*google_protobuf.DescriptorProto_ExtensionRange(nil), Options: nil}
}
func (this *AndDeepBranch) Description() (desc *google_protobuf.DescriptorProto) {
	return &google_protobuf.DescriptorProto{Name: func(v string) *string { return &v }("AndDeepBranch"), Field: []*google_protobuf.FieldDescriptorProto{{Name: func(v string) *string { return &v }("Left"), Number: func(v int32) *int32 { return &v }(1), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(1), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(11), TypeName: func(v string) *string { return &v }(".test.DeepTree"), Extendee: nil, DefaultValue: nil, Options: &google_protobuf.FieldOptions{Ctype: nil, Packed: nil, Lazy: nil, Deprecated: nil, ExperimentalMapKey: nil, Weak: nil, UninterpretedOption: []*google_protobuf.UninterpretedOption(nil)}}, {Name: func(v string) *string { return &v }("Right"), Number: func(v int32) *int32 { return &v }(2), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(1), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(11), TypeName: func(v string) *string { return &v }(".test.DeepTree"), Extendee: nil, DefaultValue: nil, Options: &google_protobuf.FieldOptions{Ctype: nil, Packed: nil, Lazy: nil, Deprecated: nil, ExperimentalMapKey: nil, Weak: nil, UninterpretedOption: []*google_protobuf.UninterpretedOption(nil)}}}, Extension: []*google_protobuf.FieldDescriptorProto(nil), NestedType: []*google_protobuf.DescriptorProto(nil), EnumType: []*google_protobuf.EnumDescriptorProto(nil), ExtensionRange: []*google_protobuf.DescriptorProto_ExtensionRange(nil), Options: nil}
}
func (this *DeepLeaf) Description() (desc *google_protobuf.DescriptorProto) {
	return &google_protobuf.DescriptorProto{Name: func(v string) *string { return &v }("DeepLeaf"), Field: []*google_protobuf.FieldDescriptorProto{{Name: func(v string) *string { return &v }("Tree"), Number: func(v int32) *int32 { return &v }(1), Label: func(v google_protobuf.FieldDescriptorProto_Label) *google_protobuf.FieldDescriptorProto_Label {
		return &v
	}(1), Type: func(v google_protobuf.FieldDescriptorProto_Type) *google_protobuf.FieldDescriptorProto_Type {
		return &v
	}(11), TypeName: func(v string) *string { return &v }(".test.Tree"), Extendee: nil, DefaultValue: nil, Options: &google_protobuf.FieldOptions{Ctype: nil, Packed: nil, Lazy: nil, Deprecated: nil, ExperimentalMapKey: nil, Weak: nil, UninterpretedOption: []*google_protobuf.UninterpretedOption(nil)}}}, Extension: []*google_protobuf.FieldDescriptorProto(nil), NestedType: []*google_protobuf.DescriptorProto(nil), EnumType: []*google_protobuf.EnumDescriptorProto(nil), ExtensionRange: []*google_protobuf.DescriptorProto_ExtensionRange(nil), Options: nil}
}
func (this *Nil) Description() (desc *google_protobuf.DescriptorProto) {
	return &google_protobuf.DescriptorProto{Name: func(v string) *string { return &v }("Nil"), Field: []*google_protobuf.FieldDescriptorProto(nil), Extension: []*google_protobuf.FieldDescriptorProto(nil), NestedType: []*google_protobuf.DescriptorProto(nil), EnumType: []*google_protobuf.EnumDescriptorProto(nil), ExtensionRange: []*google_protobuf.DescriptorProto_ExtensionRange(nil), Options: nil}
}
