// Code generated by protoc-gen-gogo.
// source: thetest.proto
// DO NOT EDIT!

package test

import testing "testing"
import math_rand "math/rand"
import time "time"
import code_google_com_p_gogoprotobuf_proto "code.google.com/p/gogoprotobuf/proto"
import testing1 "testing"
import math_rand1 "math/rand"
import time1 "time"
import encoding_json "encoding/json"
import testing2 "testing"
import math_rand2 "math/rand"
import time2 "time"
import code_google_com_p_gogoprotobuf_proto1 "code.google.com/p/gogoprotobuf/proto"
import fmt "fmt"
import math_rand3 "math/rand"
import time3 "time"
import testing3 "testing"
import math_rand4 "math/rand"
import time4 "time"
import testing4 "testing"
import fmt1 "fmt"
import math_rand5 "math/rand"
import time5 "time"
import testing5 "testing"
import math_rand6 "math/rand"
import time6 "time"
import testing6 "testing"
import fmt2 "fmt"
import go_parser "go/parser"
import math_rand7 "math/rand"
import time7 "time"
import testing7 "testing"
import math_rand8 "math/rand"
import time8 "time"
import testing8 "testing"
import code_google_com_p_gogoprotobuf_proto2 "code.google.com/p/gogoprotobuf/proto"
import math_rand9 "math/rand"
import time9 "time"
import testing9 "testing"

func TestNidOptNativeProto(t *testing.T) {
	popr := math_rand.New(math_rand.NewSource(time.Now().UnixNano()))
	p := NewPopulatedNidOptNative(popr)
	data, err := code_google_com_p_gogoprotobuf_proto.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &NidOptNative{}
	if err := code_google_com_p_gogoprotobuf_proto.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Proto %#v", msg, p)
	}
}

func BenchmarkNidOptNativeProtoMarshal(b *testing.B) {
	popr := math_rand.New(math_rand.NewSource(time.Now().UnixNano()))
	p := NewPopulatedNidOptNative(popr)
	data, err := code_google_com_p_gogoprotobuf_proto.Marshal(p)
	if err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		if _, err := code_google_com_p_gogoprotobuf_proto.Marshal(p); err != nil {
			panic(err)
		}
	}
}

func BenchmarkNidOptNativeProtoUnmarshal(b *testing.B) {
	popr := math_rand.New(math_rand.NewSource(time.Now().UnixNano()))
	p := NewPopulatedNidOptNative(popr)
	data, err := code_google_com_p_gogoprotobuf_proto.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &NidOptNative{}
	if err := code_google_com_p_gogoprotobuf_proto.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		if err := code_google_com_p_gogoprotobuf_proto.Unmarshal(data, msg); err != nil {
			panic(err)
		}
	}
}

func TestNinOptNativeProto(t *testing.T) {
	popr := math_rand.New(math_rand.NewSource(time.Now().UnixNano()))
	p := NewPopulatedNinOptNative(popr)
	data, err := code_google_com_p_gogoprotobuf_proto.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &NinOptNative{}
	if err := code_google_com_p_gogoprotobuf_proto.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Proto %#v", msg, p)
	}
}

func BenchmarkNinOptNativeProtoMarshal(b *testing.B) {
	popr := math_rand.New(math_rand.NewSource(time.Now().UnixNano()))
	p := NewPopulatedNinOptNative(popr)
	data, err := code_google_com_p_gogoprotobuf_proto.Marshal(p)
	if err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		if _, err := code_google_com_p_gogoprotobuf_proto.Marshal(p); err != nil {
			panic(err)
		}
	}
}

func BenchmarkNinOptNativeProtoUnmarshal(b *testing.B) {
	popr := math_rand.New(math_rand.NewSource(time.Now().UnixNano()))
	p := NewPopulatedNinOptNative(popr)
	data, err := code_google_com_p_gogoprotobuf_proto.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &NinOptNative{}
	if err := code_google_com_p_gogoprotobuf_proto.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		if err := code_google_com_p_gogoprotobuf_proto.Unmarshal(data, msg); err != nil {
			panic(err)
		}
	}
}

func TestNidRepNativeProto(t *testing.T) {
	popr := math_rand.New(math_rand.NewSource(time.Now().UnixNano()))
	p := NewPopulatedNidRepNative(popr)
	data, err := code_google_com_p_gogoprotobuf_proto.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &NidRepNative{}
	if err := code_google_com_p_gogoprotobuf_proto.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Proto %#v", msg, p)
	}
}

func BenchmarkNidRepNativeProtoMarshal(b *testing.B) {
	popr := math_rand.New(math_rand.NewSource(time.Now().UnixNano()))
	p := NewPopulatedNidRepNative(popr)
	data, err := code_google_com_p_gogoprotobuf_proto.Marshal(p)
	if err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		if _, err := code_google_com_p_gogoprotobuf_proto.Marshal(p); err != nil {
			panic(err)
		}
	}
}

func BenchmarkNidRepNativeProtoUnmarshal(b *testing.B) {
	popr := math_rand.New(math_rand.NewSource(time.Now().UnixNano()))
	p := NewPopulatedNidRepNative(popr)
	data, err := code_google_com_p_gogoprotobuf_proto.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &NidRepNative{}
	if err := code_google_com_p_gogoprotobuf_proto.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		if err := code_google_com_p_gogoprotobuf_proto.Unmarshal(data, msg); err != nil {
			panic(err)
		}
	}
}

func TestNinRepNativeProto(t *testing.T) {
	popr := math_rand.New(math_rand.NewSource(time.Now().UnixNano()))
	p := NewPopulatedNinRepNative(popr)
	data, err := code_google_com_p_gogoprotobuf_proto.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &NinRepNative{}
	if err := code_google_com_p_gogoprotobuf_proto.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Proto %#v", msg, p)
	}
}

func BenchmarkNinRepNativeProtoMarshal(b *testing.B) {
	popr := math_rand.New(math_rand.NewSource(time.Now().UnixNano()))
	p := NewPopulatedNinRepNative(popr)
	data, err := code_google_com_p_gogoprotobuf_proto.Marshal(p)
	if err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		if _, err := code_google_com_p_gogoprotobuf_proto.Marshal(p); err != nil {
			panic(err)
		}
	}
}

func BenchmarkNinRepNativeProtoUnmarshal(b *testing.B) {
	popr := math_rand.New(math_rand.NewSource(time.Now().UnixNano()))
	p := NewPopulatedNinRepNative(popr)
	data, err := code_google_com_p_gogoprotobuf_proto.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &NinRepNative{}
	if err := code_google_com_p_gogoprotobuf_proto.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		if err := code_google_com_p_gogoprotobuf_proto.Unmarshal(data, msg); err != nil {
			panic(err)
		}
	}
}

func TestNidRepPackedNativeProto(t *testing.T) {
	popr := math_rand.New(math_rand.NewSource(time.Now().UnixNano()))
	p := NewPopulatedNidRepPackedNative(popr)
	data, err := code_google_com_p_gogoprotobuf_proto.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &NidRepPackedNative{}
	if err := code_google_com_p_gogoprotobuf_proto.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Proto %#v", msg, p)
	}
}

func BenchmarkNidRepPackedNativeProtoMarshal(b *testing.B) {
	popr := math_rand.New(math_rand.NewSource(time.Now().UnixNano()))
	p := NewPopulatedNidRepPackedNative(popr)
	data, err := code_google_com_p_gogoprotobuf_proto.Marshal(p)
	if err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		if _, err := code_google_com_p_gogoprotobuf_proto.Marshal(p); err != nil {
			panic(err)
		}
	}
}

func BenchmarkNidRepPackedNativeProtoUnmarshal(b *testing.B) {
	popr := math_rand.New(math_rand.NewSource(time.Now().UnixNano()))
	p := NewPopulatedNidRepPackedNative(popr)
	data, err := code_google_com_p_gogoprotobuf_proto.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &NidRepPackedNative{}
	if err := code_google_com_p_gogoprotobuf_proto.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		if err := code_google_com_p_gogoprotobuf_proto.Unmarshal(data, msg); err != nil {
			panic(err)
		}
	}
}

func TestNinRepPackedNativeProto(t *testing.T) {
	popr := math_rand.New(math_rand.NewSource(time.Now().UnixNano()))
	p := NewPopulatedNinRepPackedNative(popr)
	data, err := code_google_com_p_gogoprotobuf_proto.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &NinRepPackedNative{}
	if err := code_google_com_p_gogoprotobuf_proto.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Proto %#v", msg, p)
	}
}

func BenchmarkNinRepPackedNativeProtoMarshal(b *testing.B) {
	popr := math_rand.New(math_rand.NewSource(time.Now().UnixNano()))
	p := NewPopulatedNinRepPackedNative(popr)
	data, err := code_google_com_p_gogoprotobuf_proto.Marshal(p)
	if err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		if _, err := code_google_com_p_gogoprotobuf_proto.Marshal(p); err != nil {
			panic(err)
		}
	}
}

func BenchmarkNinRepPackedNativeProtoUnmarshal(b *testing.B) {
	popr := math_rand.New(math_rand.NewSource(time.Now().UnixNano()))
	p := NewPopulatedNinRepPackedNative(popr)
	data, err := code_google_com_p_gogoprotobuf_proto.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &NinRepPackedNative{}
	if err := code_google_com_p_gogoprotobuf_proto.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		if err := code_google_com_p_gogoprotobuf_proto.Unmarshal(data, msg); err != nil {
			panic(err)
		}
	}
}

func TestNidOptStructProto(t *testing.T) {
	popr := math_rand.New(math_rand.NewSource(time.Now().UnixNano()))
	p := NewPopulatedNidOptStruct(popr)
	data, err := code_google_com_p_gogoprotobuf_proto.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &NidOptStruct{}
	if err := code_google_com_p_gogoprotobuf_proto.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Proto %#v", msg, p)
	}
}

func BenchmarkNidOptStructProtoMarshal(b *testing.B) {
	popr := math_rand.New(math_rand.NewSource(time.Now().UnixNano()))
	p := NewPopulatedNidOptStruct(popr)
	data, err := code_google_com_p_gogoprotobuf_proto.Marshal(p)
	if err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		if _, err := code_google_com_p_gogoprotobuf_proto.Marshal(p); err != nil {
			panic(err)
		}
	}
}

func BenchmarkNidOptStructProtoUnmarshal(b *testing.B) {
	popr := math_rand.New(math_rand.NewSource(time.Now().UnixNano()))
	p := NewPopulatedNidOptStruct(popr)
	data, err := code_google_com_p_gogoprotobuf_proto.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &NidOptStruct{}
	if err := code_google_com_p_gogoprotobuf_proto.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		if err := code_google_com_p_gogoprotobuf_proto.Unmarshal(data, msg); err != nil {
			panic(err)
		}
	}
}

func TestNinOptStructProto(t *testing.T) {
	popr := math_rand.New(math_rand.NewSource(time.Now().UnixNano()))
	p := NewPopulatedNinOptStruct(popr)
	data, err := code_google_com_p_gogoprotobuf_proto.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &NinOptStruct{}
	if err := code_google_com_p_gogoprotobuf_proto.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Proto %#v", msg, p)
	}
}

func BenchmarkNinOptStructProtoMarshal(b *testing.B) {
	popr := math_rand.New(math_rand.NewSource(time.Now().UnixNano()))
	p := NewPopulatedNinOptStruct(popr)
	data, err := code_google_com_p_gogoprotobuf_proto.Marshal(p)
	if err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		if _, err := code_google_com_p_gogoprotobuf_proto.Marshal(p); err != nil {
			panic(err)
		}
	}
}

func BenchmarkNinOptStructProtoUnmarshal(b *testing.B) {
	popr := math_rand.New(math_rand.NewSource(time.Now().UnixNano()))
	p := NewPopulatedNinOptStruct(popr)
	data, err := code_google_com_p_gogoprotobuf_proto.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &NinOptStruct{}
	if err := code_google_com_p_gogoprotobuf_proto.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		if err := code_google_com_p_gogoprotobuf_proto.Unmarshal(data, msg); err != nil {
			panic(err)
		}
	}
}

func TestNidRepStructProto(t *testing.T) {
	popr := math_rand.New(math_rand.NewSource(time.Now().UnixNano()))
	p := NewPopulatedNidRepStruct(popr)
	data, err := code_google_com_p_gogoprotobuf_proto.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &NidRepStruct{}
	if err := code_google_com_p_gogoprotobuf_proto.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Proto %#v", msg, p)
	}
}

func BenchmarkNidRepStructProtoMarshal(b *testing.B) {
	popr := math_rand.New(math_rand.NewSource(time.Now().UnixNano()))
	p := NewPopulatedNidRepStruct(popr)
	data, err := code_google_com_p_gogoprotobuf_proto.Marshal(p)
	if err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		if _, err := code_google_com_p_gogoprotobuf_proto.Marshal(p); err != nil {
			panic(err)
		}
	}
}

func BenchmarkNidRepStructProtoUnmarshal(b *testing.B) {
	popr := math_rand.New(math_rand.NewSource(time.Now().UnixNano()))
	p := NewPopulatedNidRepStruct(popr)
	data, err := code_google_com_p_gogoprotobuf_proto.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &NidRepStruct{}
	if err := code_google_com_p_gogoprotobuf_proto.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		if err := code_google_com_p_gogoprotobuf_proto.Unmarshal(data, msg); err != nil {
			panic(err)
		}
	}
}

func TestNinRepStructProto(t *testing.T) {
	popr := math_rand.New(math_rand.NewSource(time.Now().UnixNano()))
	p := NewPopulatedNinRepStruct(popr)
	data, err := code_google_com_p_gogoprotobuf_proto.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &NinRepStruct{}
	if err := code_google_com_p_gogoprotobuf_proto.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Proto %#v", msg, p)
	}
}

func BenchmarkNinRepStructProtoMarshal(b *testing.B) {
	popr := math_rand.New(math_rand.NewSource(time.Now().UnixNano()))
	p := NewPopulatedNinRepStruct(popr)
	data, err := code_google_com_p_gogoprotobuf_proto.Marshal(p)
	if err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		if _, err := code_google_com_p_gogoprotobuf_proto.Marshal(p); err != nil {
			panic(err)
		}
	}
}

func BenchmarkNinRepStructProtoUnmarshal(b *testing.B) {
	popr := math_rand.New(math_rand.NewSource(time.Now().UnixNano()))
	p := NewPopulatedNinRepStruct(popr)
	data, err := code_google_com_p_gogoprotobuf_proto.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &NinRepStruct{}
	if err := code_google_com_p_gogoprotobuf_proto.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		if err := code_google_com_p_gogoprotobuf_proto.Unmarshal(data, msg); err != nil {
			panic(err)
		}
	}
}

func TestNidEmbeddedStructProto(t *testing.T) {
	popr := math_rand.New(math_rand.NewSource(time.Now().UnixNano()))
	p := NewPopulatedNidEmbeddedStruct(popr)
	data, err := code_google_com_p_gogoprotobuf_proto.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &NidEmbeddedStruct{}
	if err := code_google_com_p_gogoprotobuf_proto.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Proto %#v", msg, p)
	}
}

func BenchmarkNidEmbeddedStructProtoMarshal(b *testing.B) {
	popr := math_rand.New(math_rand.NewSource(time.Now().UnixNano()))
	p := NewPopulatedNidEmbeddedStruct(popr)
	data, err := code_google_com_p_gogoprotobuf_proto.Marshal(p)
	if err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		if _, err := code_google_com_p_gogoprotobuf_proto.Marshal(p); err != nil {
			panic(err)
		}
	}
}

func BenchmarkNidEmbeddedStructProtoUnmarshal(b *testing.B) {
	popr := math_rand.New(math_rand.NewSource(time.Now().UnixNano()))
	p := NewPopulatedNidEmbeddedStruct(popr)
	data, err := code_google_com_p_gogoprotobuf_proto.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &NidEmbeddedStruct{}
	if err := code_google_com_p_gogoprotobuf_proto.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		if err := code_google_com_p_gogoprotobuf_proto.Unmarshal(data, msg); err != nil {
			panic(err)
		}
	}
}

func TestNinEmbeddedStructProto(t *testing.T) {
	popr := math_rand.New(math_rand.NewSource(time.Now().UnixNano()))
	p := NewPopulatedNinEmbeddedStruct(popr)
	data, err := code_google_com_p_gogoprotobuf_proto.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &NinEmbeddedStruct{}
	if err := code_google_com_p_gogoprotobuf_proto.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Proto %#v", msg, p)
	}
}

func BenchmarkNinEmbeddedStructProtoMarshal(b *testing.B) {
	popr := math_rand.New(math_rand.NewSource(time.Now().UnixNano()))
	p := NewPopulatedNinEmbeddedStruct(popr)
	data, err := code_google_com_p_gogoprotobuf_proto.Marshal(p)
	if err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		if _, err := code_google_com_p_gogoprotobuf_proto.Marshal(p); err != nil {
			panic(err)
		}
	}
}

func BenchmarkNinEmbeddedStructProtoUnmarshal(b *testing.B) {
	popr := math_rand.New(math_rand.NewSource(time.Now().UnixNano()))
	p := NewPopulatedNinEmbeddedStruct(popr)
	data, err := code_google_com_p_gogoprotobuf_proto.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &NinEmbeddedStruct{}
	if err := code_google_com_p_gogoprotobuf_proto.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		if err := code_google_com_p_gogoprotobuf_proto.Unmarshal(data, msg); err != nil {
			panic(err)
		}
	}
}

func TestNidNestedStructProto(t *testing.T) {
	popr := math_rand.New(math_rand.NewSource(time.Now().UnixNano()))
	p := NewPopulatedNidNestedStruct(popr)
	data, err := code_google_com_p_gogoprotobuf_proto.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &NidNestedStruct{}
	if err := code_google_com_p_gogoprotobuf_proto.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Proto %#v", msg, p)
	}
}

func BenchmarkNidNestedStructProtoMarshal(b *testing.B) {
	popr := math_rand.New(math_rand.NewSource(time.Now().UnixNano()))
	p := NewPopulatedNidNestedStruct(popr)
	data, err := code_google_com_p_gogoprotobuf_proto.Marshal(p)
	if err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		if _, err := code_google_com_p_gogoprotobuf_proto.Marshal(p); err != nil {
			panic(err)
		}
	}
}

func BenchmarkNidNestedStructProtoUnmarshal(b *testing.B) {
	popr := math_rand.New(math_rand.NewSource(time.Now().UnixNano()))
	p := NewPopulatedNidNestedStruct(popr)
	data, err := code_google_com_p_gogoprotobuf_proto.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &NidNestedStruct{}
	if err := code_google_com_p_gogoprotobuf_proto.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		if err := code_google_com_p_gogoprotobuf_proto.Unmarshal(data, msg); err != nil {
			panic(err)
		}
	}
}

func TestNinNestedStructProto(t *testing.T) {
	popr := math_rand.New(math_rand.NewSource(time.Now().UnixNano()))
	p := NewPopulatedNinNestedStruct(popr)
	data, err := code_google_com_p_gogoprotobuf_proto.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &NinNestedStruct{}
	if err := code_google_com_p_gogoprotobuf_proto.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Proto %#v", msg, p)
	}
}

func BenchmarkNinNestedStructProtoMarshal(b *testing.B) {
	popr := math_rand.New(math_rand.NewSource(time.Now().UnixNano()))
	p := NewPopulatedNinNestedStruct(popr)
	data, err := code_google_com_p_gogoprotobuf_proto.Marshal(p)
	if err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		if _, err := code_google_com_p_gogoprotobuf_proto.Marshal(p); err != nil {
			panic(err)
		}
	}
}

func BenchmarkNinNestedStructProtoUnmarshal(b *testing.B) {
	popr := math_rand.New(math_rand.NewSource(time.Now().UnixNano()))
	p := NewPopulatedNinNestedStruct(popr)
	data, err := code_google_com_p_gogoprotobuf_proto.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &NinNestedStruct{}
	if err := code_google_com_p_gogoprotobuf_proto.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		if err := code_google_com_p_gogoprotobuf_proto.Unmarshal(data, msg); err != nil {
			panic(err)
		}
	}
}

func TestNidOptCustomProto(t *testing.T) {
	popr := math_rand.New(math_rand.NewSource(time.Now().UnixNano()))
	p := NewPopulatedNidOptCustom(popr)
	data, err := code_google_com_p_gogoprotobuf_proto.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &NidOptCustom{}
	if err := code_google_com_p_gogoprotobuf_proto.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Proto %#v", msg, p)
	}
}

func BenchmarkNidOptCustomProtoMarshal(b *testing.B) {
	popr := math_rand.New(math_rand.NewSource(time.Now().UnixNano()))
	p := NewPopulatedNidOptCustom(popr)
	data, err := code_google_com_p_gogoprotobuf_proto.Marshal(p)
	if err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		if _, err := code_google_com_p_gogoprotobuf_proto.Marshal(p); err != nil {
			panic(err)
		}
	}
}

func BenchmarkNidOptCustomProtoUnmarshal(b *testing.B) {
	popr := math_rand.New(math_rand.NewSource(time.Now().UnixNano()))
	p := NewPopulatedNidOptCustom(popr)
	data, err := code_google_com_p_gogoprotobuf_proto.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &NidOptCustom{}
	if err := code_google_com_p_gogoprotobuf_proto.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		if err := code_google_com_p_gogoprotobuf_proto.Unmarshal(data, msg); err != nil {
			panic(err)
		}
	}
}

func TestNinOptCustomProto(t *testing.T) {
	popr := math_rand.New(math_rand.NewSource(time.Now().UnixNano()))
	p := NewPopulatedNinOptCustom(popr)
	data, err := code_google_com_p_gogoprotobuf_proto.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &NinOptCustom{}
	if err := code_google_com_p_gogoprotobuf_proto.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Proto %#v", msg, p)
	}
}

func BenchmarkNinOptCustomProtoMarshal(b *testing.B) {
	popr := math_rand.New(math_rand.NewSource(time.Now().UnixNano()))
	p := NewPopulatedNinOptCustom(popr)
	data, err := code_google_com_p_gogoprotobuf_proto.Marshal(p)
	if err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		if _, err := code_google_com_p_gogoprotobuf_proto.Marshal(p); err != nil {
			panic(err)
		}
	}
}

func BenchmarkNinOptCustomProtoUnmarshal(b *testing.B) {
	popr := math_rand.New(math_rand.NewSource(time.Now().UnixNano()))
	p := NewPopulatedNinOptCustom(popr)
	data, err := code_google_com_p_gogoprotobuf_proto.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &NinOptCustom{}
	if err := code_google_com_p_gogoprotobuf_proto.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		if err := code_google_com_p_gogoprotobuf_proto.Unmarshal(data, msg); err != nil {
			panic(err)
		}
	}
}

func TestNidRepCustomProto(t *testing.T) {
	popr := math_rand.New(math_rand.NewSource(time.Now().UnixNano()))
	p := NewPopulatedNidRepCustom(popr)
	data, err := code_google_com_p_gogoprotobuf_proto.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &NidRepCustom{}
	if err := code_google_com_p_gogoprotobuf_proto.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Proto %#v", msg, p)
	}
}

func BenchmarkNidRepCustomProtoMarshal(b *testing.B) {
	popr := math_rand.New(math_rand.NewSource(time.Now().UnixNano()))
	p := NewPopulatedNidRepCustom(popr)
	data, err := code_google_com_p_gogoprotobuf_proto.Marshal(p)
	if err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		if _, err := code_google_com_p_gogoprotobuf_proto.Marshal(p); err != nil {
			panic(err)
		}
	}
}

func BenchmarkNidRepCustomProtoUnmarshal(b *testing.B) {
	popr := math_rand.New(math_rand.NewSource(time.Now().UnixNano()))
	p := NewPopulatedNidRepCustom(popr)
	data, err := code_google_com_p_gogoprotobuf_proto.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &NidRepCustom{}
	if err := code_google_com_p_gogoprotobuf_proto.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		if err := code_google_com_p_gogoprotobuf_proto.Unmarshal(data, msg); err != nil {
			panic(err)
		}
	}
}

func TestNinRepCustomProto(t *testing.T) {
	popr := math_rand.New(math_rand.NewSource(time.Now().UnixNano()))
	p := NewPopulatedNinRepCustom(popr)
	data, err := code_google_com_p_gogoprotobuf_proto.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &NinRepCustom{}
	if err := code_google_com_p_gogoprotobuf_proto.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Proto %#v", msg, p)
	}
}

func BenchmarkNinRepCustomProtoMarshal(b *testing.B) {
	popr := math_rand.New(math_rand.NewSource(time.Now().UnixNano()))
	p := NewPopulatedNinRepCustom(popr)
	data, err := code_google_com_p_gogoprotobuf_proto.Marshal(p)
	if err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		if _, err := code_google_com_p_gogoprotobuf_proto.Marshal(p); err != nil {
			panic(err)
		}
	}
}

func BenchmarkNinRepCustomProtoUnmarshal(b *testing.B) {
	popr := math_rand.New(math_rand.NewSource(time.Now().UnixNano()))
	p := NewPopulatedNinRepCustom(popr)
	data, err := code_google_com_p_gogoprotobuf_proto.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &NinRepCustom{}
	if err := code_google_com_p_gogoprotobuf_proto.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		if err := code_google_com_p_gogoprotobuf_proto.Unmarshal(data, msg); err != nil {
			panic(err)
		}
	}
}

func TestNinOptNativeUnionProto(t *testing.T) {
	popr := math_rand.New(math_rand.NewSource(time.Now().UnixNano()))
	p := NewPopulatedNinOptNativeUnion(popr)
	data, err := code_google_com_p_gogoprotobuf_proto.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &NinOptNativeUnion{}
	if err := code_google_com_p_gogoprotobuf_proto.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Proto %#v", msg, p)
	}
}

func BenchmarkNinOptNativeUnionProtoMarshal(b *testing.B) {
	popr := math_rand.New(math_rand.NewSource(time.Now().UnixNano()))
	p := NewPopulatedNinOptNativeUnion(popr)
	data, err := code_google_com_p_gogoprotobuf_proto.Marshal(p)
	if err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		if _, err := code_google_com_p_gogoprotobuf_proto.Marshal(p); err != nil {
			panic(err)
		}
	}
}

func BenchmarkNinOptNativeUnionProtoUnmarshal(b *testing.B) {
	popr := math_rand.New(math_rand.NewSource(time.Now().UnixNano()))
	p := NewPopulatedNinOptNativeUnion(popr)
	data, err := code_google_com_p_gogoprotobuf_proto.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &NinOptNativeUnion{}
	if err := code_google_com_p_gogoprotobuf_proto.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		if err := code_google_com_p_gogoprotobuf_proto.Unmarshal(data, msg); err != nil {
			panic(err)
		}
	}
}

func TestNinOptStructUnionProto(t *testing.T) {
	popr := math_rand.New(math_rand.NewSource(time.Now().UnixNano()))
	p := NewPopulatedNinOptStructUnion(popr)
	data, err := code_google_com_p_gogoprotobuf_proto.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &NinOptStructUnion{}
	if err := code_google_com_p_gogoprotobuf_proto.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Proto %#v", msg, p)
	}
}

func BenchmarkNinOptStructUnionProtoMarshal(b *testing.B) {
	popr := math_rand.New(math_rand.NewSource(time.Now().UnixNano()))
	p := NewPopulatedNinOptStructUnion(popr)
	data, err := code_google_com_p_gogoprotobuf_proto.Marshal(p)
	if err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		if _, err := code_google_com_p_gogoprotobuf_proto.Marshal(p); err != nil {
			panic(err)
		}
	}
}

func BenchmarkNinOptStructUnionProtoUnmarshal(b *testing.B) {
	popr := math_rand.New(math_rand.NewSource(time.Now().UnixNano()))
	p := NewPopulatedNinOptStructUnion(popr)
	data, err := code_google_com_p_gogoprotobuf_proto.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &NinOptStructUnion{}
	if err := code_google_com_p_gogoprotobuf_proto.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		if err := code_google_com_p_gogoprotobuf_proto.Unmarshal(data, msg); err != nil {
			panic(err)
		}
	}
}

func TestNinEmbeddedStructUnionProto(t *testing.T) {
	popr := math_rand.New(math_rand.NewSource(time.Now().UnixNano()))
	p := NewPopulatedNinEmbeddedStructUnion(popr)
	data, err := code_google_com_p_gogoprotobuf_proto.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &NinEmbeddedStructUnion{}
	if err := code_google_com_p_gogoprotobuf_proto.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Proto %#v", msg, p)
	}
}

func BenchmarkNinEmbeddedStructUnionProtoMarshal(b *testing.B) {
	popr := math_rand.New(math_rand.NewSource(time.Now().UnixNano()))
	p := NewPopulatedNinEmbeddedStructUnion(popr)
	data, err := code_google_com_p_gogoprotobuf_proto.Marshal(p)
	if err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		if _, err := code_google_com_p_gogoprotobuf_proto.Marshal(p); err != nil {
			panic(err)
		}
	}
}

func BenchmarkNinEmbeddedStructUnionProtoUnmarshal(b *testing.B) {
	popr := math_rand.New(math_rand.NewSource(time.Now().UnixNano()))
	p := NewPopulatedNinEmbeddedStructUnion(popr)
	data, err := code_google_com_p_gogoprotobuf_proto.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &NinEmbeddedStructUnion{}
	if err := code_google_com_p_gogoprotobuf_proto.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		if err := code_google_com_p_gogoprotobuf_proto.Unmarshal(data, msg); err != nil {
			panic(err)
		}
	}
}

func TestNinNestedStructUnionProto(t *testing.T) {
	popr := math_rand.New(math_rand.NewSource(time.Now().UnixNano()))
	p := NewPopulatedNinNestedStructUnion(popr)
	data, err := code_google_com_p_gogoprotobuf_proto.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &NinNestedStructUnion{}
	if err := code_google_com_p_gogoprotobuf_proto.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Proto %#v", msg, p)
	}
}

func BenchmarkNinNestedStructUnionProtoMarshal(b *testing.B) {
	popr := math_rand.New(math_rand.NewSource(time.Now().UnixNano()))
	p := NewPopulatedNinNestedStructUnion(popr)
	data, err := code_google_com_p_gogoprotobuf_proto.Marshal(p)
	if err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		if _, err := code_google_com_p_gogoprotobuf_proto.Marshal(p); err != nil {
			panic(err)
		}
	}
}

func BenchmarkNinNestedStructUnionProtoUnmarshal(b *testing.B) {
	popr := math_rand.New(math_rand.NewSource(time.Now().UnixNano()))
	p := NewPopulatedNinNestedStructUnion(popr)
	data, err := code_google_com_p_gogoprotobuf_proto.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &NinNestedStructUnion{}
	if err := code_google_com_p_gogoprotobuf_proto.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		if err := code_google_com_p_gogoprotobuf_proto.Unmarshal(data, msg); err != nil {
			panic(err)
		}
	}
}

func TestTreeProto(t *testing.T) {
	popr := math_rand.New(math_rand.NewSource(time.Now().UnixNano()))
	p := NewPopulatedTree(popr)
	data, err := code_google_com_p_gogoprotobuf_proto.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &Tree{}
	if err := code_google_com_p_gogoprotobuf_proto.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Proto %#v", msg, p)
	}
}

func BenchmarkTreeProtoMarshal(b *testing.B) {
	popr := math_rand.New(math_rand.NewSource(time.Now().UnixNano()))
	p := NewPopulatedTree(popr)
	data, err := code_google_com_p_gogoprotobuf_proto.Marshal(p)
	if err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		if _, err := code_google_com_p_gogoprotobuf_proto.Marshal(p); err != nil {
			panic(err)
		}
	}
}

func BenchmarkTreeProtoUnmarshal(b *testing.B) {
	popr := math_rand.New(math_rand.NewSource(time.Now().UnixNano()))
	p := NewPopulatedTree(popr)
	data, err := code_google_com_p_gogoprotobuf_proto.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &Tree{}
	if err := code_google_com_p_gogoprotobuf_proto.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		if err := code_google_com_p_gogoprotobuf_proto.Unmarshal(data, msg); err != nil {
			panic(err)
		}
	}
}

func TestOrBranchProto(t *testing.T) {
	popr := math_rand.New(math_rand.NewSource(time.Now().UnixNano()))
	p := NewPopulatedOrBranch(popr)
	data, err := code_google_com_p_gogoprotobuf_proto.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &OrBranch{}
	if err := code_google_com_p_gogoprotobuf_proto.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Proto %#v", msg, p)
	}
}

func BenchmarkOrBranchProtoMarshal(b *testing.B) {
	popr := math_rand.New(math_rand.NewSource(time.Now().UnixNano()))
	p := NewPopulatedOrBranch(popr)
	data, err := code_google_com_p_gogoprotobuf_proto.Marshal(p)
	if err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		if _, err := code_google_com_p_gogoprotobuf_proto.Marshal(p); err != nil {
			panic(err)
		}
	}
}

func BenchmarkOrBranchProtoUnmarshal(b *testing.B) {
	popr := math_rand.New(math_rand.NewSource(time.Now().UnixNano()))
	p := NewPopulatedOrBranch(popr)
	data, err := code_google_com_p_gogoprotobuf_proto.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &OrBranch{}
	if err := code_google_com_p_gogoprotobuf_proto.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		if err := code_google_com_p_gogoprotobuf_proto.Unmarshal(data, msg); err != nil {
			panic(err)
		}
	}
}

func TestAndBranchProto(t *testing.T) {
	popr := math_rand.New(math_rand.NewSource(time.Now().UnixNano()))
	p := NewPopulatedAndBranch(popr)
	data, err := code_google_com_p_gogoprotobuf_proto.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &AndBranch{}
	if err := code_google_com_p_gogoprotobuf_proto.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Proto %#v", msg, p)
	}
}

func BenchmarkAndBranchProtoMarshal(b *testing.B) {
	popr := math_rand.New(math_rand.NewSource(time.Now().UnixNano()))
	p := NewPopulatedAndBranch(popr)
	data, err := code_google_com_p_gogoprotobuf_proto.Marshal(p)
	if err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		if _, err := code_google_com_p_gogoprotobuf_proto.Marshal(p); err != nil {
			panic(err)
		}
	}
}

func BenchmarkAndBranchProtoUnmarshal(b *testing.B) {
	popr := math_rand.New(math_rand.NewSource(time.Now().UnixNano()))
	p := NewPopulatedAndBranch(popr)
	data, err := code_google_com_p_gogoprotobuf_proto.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &AndBranch{}
	if err := code_google_com_p_gogoprotobuf_proto.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		if err := code_google_com_p_gogoprotobuf_proto.Unmarshal(data, msg); err != nil {
			panic(err)
		}
	}
}

func TestLeafProto(t *testing.T) {
	popr := math_rand.New(math_rand.NewSource(time.Now().UnixNano()))
	p := NewPopulatedLeaf(popr)
	data, err := code_google_com_p_gogoprotobuf_proto.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &Leaf{}
	if err := code_google_com_p_gogoprotobuf_proto.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Proto %#v", msg, p)
	}
}

func BenchmarkLeafProtoMarshal(b *testing.B) {
	popr := math_rand.New(math_rand.NewSource(time.Now().UnixNano()))
	p := NewPopulatedLeaf(popr)
	data, err := code_google_com_p_gogoprotobuf_proto.Marshal(p)
	if err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		if _, err := code_google_com_p_gogoprotobuf_proto.Marshal(p); err != nil {
			panic(err)
		}
	}
}

func BenchmarkLeafProtoUnmarshal(b *testing.B) {
	popr := math_rand.New(math_rand.NewSource(time.Now().UnixNano()))
	p := NewPopulatedLeaf(popr)
	data, err := code_google_com_p_gogoprotobuf_proto.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &Leaf{}
	if err := code_google_com_p_gogoprotobuf_proto.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		if err := code_google_com_p_gogoprotobuf_proto.Unmarshal(data, msg); err != nil {
			panic(err)
		}
	}
}

func TestDeepTreeProto(t *testing.T) {
	popr := math_rand.New(math_rand.NewSource(time.Now().UnixNano()))
	p := NewPopulatedDeepTree(popr)
	data, err := code_google_com_p_gogoprotobuf_proto.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &DeepTree{}
	if err := code_google_com_p_gogoprotobuf_proto.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Proto %#v", msg, p)
	}
}

func BenchmarkDeepTreeProtoMarshal(b *testing.B) {
	popr := math_rand.New(math_rand.NewSource(time.Now().UnixNano()))
	p := NewPopulatedDeepTree(popr)
	data, err := code_google_com_p_gogoprotobuf_proto.Marshal(p)
	if err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		if _, err := code_google_com_p_gogoprotobuf_proto.Marshal(p); err != nil {
			panic(err)
		}
	}
}

func BenchmarkDeepTreeProtoUnmarshal(b *testing.B) {
	popr := math_rand.New(math_rand.NewSource(time.Now().UnixNano()))
	p := NewPopulatedDeepTree(popr)
	data, err := code_google_com_p_gogoprotobuf_proto.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &DeepTree{}
	if err := code_google_com_p_gogoprotobuf_proto.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		if err := code_google_com_p_gogoprotobuf_proto.Unmarshal(data, msg); err != nil {
			panic(err)
		}
	}
}

func TestADeepBranchProto(t *testing.T) {
	popr := math_rand.New(math_rand.NewSource(time.Now().UnixNano()))
	p := NewPopulatedADeepBranch(popr)
	data, err := code_google_com_p_gogoprotobuf_proto.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &ADeepBranch{}
	if err := code_google_com_p_gogoprotobuf_proto.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Proto %#v", msg, p)
	}
}

func BenchmarkADeepBranchProtoMarshal(b *testing.B) {
	popr := math_rand.New(math_rand.NewSource(time.Now().UnixNano()))
	p := NewPopulatedADeepBranch(popr)
	data, err := code_google_com_p_gogoprotobuf_proto.Marshal(p)
	if err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		if _, err := code_google_com_p_gogoprotobuf_proto.Marshal(p); err != nil {
			panic(err)
		}
	}
}

func BenchmarkADeepBranchProtoUnmarshal(b *testing.B) {
	popr := math_rand.New(math_rand.NewSource(time.Now().UnixNano()))
	p := NewPopulatedADeepBranch(popr)
	data, err := code_google_com_p_gogoprotobuf_proto.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &ADeepBranch{}
	if err := code_google_com_p_gogoprotobuf_proto.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		if err := code_google_com_p_gogoprotobuf_proto.Unmarshal(data, msg); err != nil {
			panic(err)
		}
	}
}

func TestAndDeepBranchProto(t *testing.T) {
	popr := math_rand.New(math_rand.NewSource(time.Now().UnixNano()))
	p := NewPopulatedAndDeepBranch(popr)
	data, err := code_google_com_p_gogoprotobuf_proto.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &AndDeepBranch{}
	if err := code_google_com_p_gogoprotobuf_proto.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Proto %#v", msg, p)
	}
}

func BenchmarkAndDeepBranchProtoMarshal(b *testing.B) {
	popr := math_rand.New(math_rand.NewSource(time.Now().UnixNano()))
	p := NewPopulatedAndDeepBranch(popr)
	data, err := code_google_com_p_gogoprotobuf_proto.Marshal(p)
	if err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		if _, err := code_google_com_p_gogoprotobuf_proto.Marshal(p); err != nil {
			panic(err)
		}
	}
}

func BenchmarkAndDeepBranchProtoUnmarshal(b *testing.B) {
	popr := math_rand.New(math_rand.NewSource(time.Now().UnixNano()))
	p := NewPopulatedAndDeepBranch(popr)
	data, err := code_google_com_p_gogoprotobuf_proto.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &AndDeepBranch{}
	if err := code_google_com_p_gogoprotobuf_proto.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		if err := code_google_com_p_gogoprotobuf_proto.Unmarshal(data, msg); err != nil {
			panic(err)
		}
	}
}

func TestDeepLeafProto(t *testing.T) {
	popr := math_rand.New(math_rand.NewSource(time.Now().UnixNano()))
	p := NewPopulatedDeepLeaf(popr)
	data, err := code_google_com_p_gogoprotobuf_proto.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &DeepLeaf{}
	if err := code_google_com_p_gogoprotobuf_proto.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Proto %#v", msg, p)
	}
}

func BenchmarkDeepLeafProtoMarshal(b *testing.B) {
	popr := math_rand.New(math_rand.NewSource(time.Now().UnixNano()))
	p := NewPopulatedDeepLeaf(popr)
	data, err := code_google_com_p_gogoprotobuf_proto.Marshal(p)
	if err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		if _, err := code_google_com_p_gogoprotobuf_proto.Marshal(p); err != nil {
			panic(err)
		}
	}
}

func BenchmarkDeepLeafProtoUnmarshal(b *testing.B) {
	popr := math_rand.New(math_rand.NewSource(time.Now().UnixNano()))
	p := NewPopulatedDeepLeaf(popr)
	data, err := code_google_com_p_gogoprotobuf_proto.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &DeepLeaf{}
	if err := code_google_com_p_gogoprotobuf_proto.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		if err := code_google_com_p_gogoprotobuf_proto.Unmarshal(data, msg); err != nil {
			panic(err)
		}
	}
}

func TestNilProto(t *testing.T) {
	popr := math_rand.New(math_rand.NewSource(time.Now().UnixNano()))
	p := NewPopulatedNil(popr)
	data, err := code_google_com_p_gogoprotobuf_proto.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &Nil{}
	if err := code_google_com_p_gogoprotobuf_proto.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Proto %#v", msg, p)
	}
}

func BenchmarkNilProtoMarshal(b *testing.B) {
	popr := math_rand.New(math_rand.NewSource(time.Now().UnixNano()))
	p := NewPopulatedNil(popr)
	data, err := code_google_com_p_gogoprotobuf_proto.Marshal(p)
	if err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		if _, err := code_google_com_p_gogoprotobuf_proto.Marshal(p); err != nil {
			panic(err)
		}
	}
}

func BenchmarkNilProtoUnmarshal(b *testing.B) {
	popr := math_rand.New(math_rand.NewSource(time.Now().UnixNano()))
	p := NewPopulatedNil(popr)
	data, err := code_google_com_p_gogoprotobuf_proto.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &Nil{}
	if err := code_google_com_p_gogoprotobuf_proto.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		if err := code_google_com_p_gogoprotobuf_proto.Unmarshal(data, msg); err != nil {
			panic(err)
		}
	}
}

func TestNidOptNativeJSON(t *testing1.T) {
	popr := math_rand1.New(math_rand1.NewSource(time1.Now().UnixNano()))
	p := NewPopulatedNidOptNative(popr)
	jsondata, err := encoding_json.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &NidOptNative{}
	err = encoding_json.Unmarshal(jsondata, msg)
	if err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Json Equal %#v", msg, p)
	}
}
func BenchmarkNidOptNativeJSONMarshal(b *testing1.B) {
	popr := math_rand1.New(math_rand1.NewSource(time1.Now().UnixNano()))
	p := NewPopulatedNidOptNative(popr)
	data, err := encoding_json.Marshal(p)
	if err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		if _, err := encoding_json.Marshal(p); err != nil {
			panic(err)
		}
	}
}

func BenchmarkNidOptNativeJSONUnmarshal(b *testing1.B) {
	popr := math_rand1.New(math_rand1.NewSource(time1.Now().UnixNano()))
	p := NewPopulatedNidOptNative(popr)
	data, err := encoding_json.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &NidOptNative{}
	if err := encoding_json.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		if err := encoding_json.Unmarshal(data, msg); err != nil {
			panic(err)
		}
	}
}

func TestNinOptNativeJSON(t *testing1.T) {
	popr := math_rand1.New(math_rand1.NewSource(time1.Now().UnixNano()))
	p := NewPopulatedNinOptNative(popr)
	jsondata, err := encoding_json.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &NinOptNative{}
	err = encoding_json.Unmarshal(jsondata, msg)
	if err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Json Equal %#v", msg, p)
	}
}
func BenchmarkNinOptNativeJSONMarshal(b *testing1.B) {
	popr := math_rand1.New(math_rand1.NewSource(time1.Now().UnixNano()))
	p := NewPopulatedNinOptNative(popr)
	data, err := encoding_json.Marshal(p)
	if err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		if _, err := encoding_json.Marshal(p); err != nil {
			panic(err)
		}
	}
}

func BenchmarkNinOptNativeJSONUnmarshal(b *testing1.B) {
	popr := math_rand1.New(math_rand1.NewSource(time1.Now().UnixNano()))
	p := NewPopulatedNinOptNative(popr)
	data, err := encoding_json.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &NinOptNative{}
	if err := encoding_json.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		if err := encoding_json.Unmarshal(data, msg); err != nil {
			panic(err)
		}
	}
}

func TestNidRepNativeJSON(t *testing1.T) {
	popr := math_rand1.New(math_rand1.NewSource(time1.Now().UnixNano()))
	p := NewPopulatedNidRepNative(popr)
	jsondata, err := encoding_json.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &NidRepNative{}
	err = encoding_json.Unmarshal(jsondata, msg)
	if err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Json Equal %#v", msg, p)
	}
}
func BenchmarkNidRepNativeJSONMarshal(b *testing1.B) {
	popr := math_rand1.New(math_rand1.NewSource(time1.Now().UnixNano()))
	p := NewPopulatedNidRepNative(popr)
	data, err := encoding_json.Marshal(p)
	if err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		if _, err := encoding_json.Marshal(p); err != nil {
			panic(err)
		}
	}
}

func BenchmarkNidRepNativeJSONUnmarshal(b *testing1.B) {
	popr := math_rand1.New(math_rand1.NewSource(time1.Now().UnixNano()))
	p := NewPopulatedNidRepNative(popr)
	data, err := encoding_json.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &NidRepNative{}
	if err := encoding_json.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		if err := encoding_json.Unmarshal(data, msg); err != nil {
			panic(err)
		}
	}
}

func TestNinRepNativeJSON(t *testing1.T) {
	popr := math_rand1.New(math_rand1.NewSource(time1.Now().UnixNano()))
	p := NewPopulatedNinRepNative(popr)
	jsondata, err := encoding_json.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &NinRepNative{}
	err = encoding_json.Unmarshal(jsondata, msg)
	if err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Json Equal %#v", msg, p)
	}
}
func BenchmarkNinRepNativeJSONMarshal(b *testing1.B) {
	popr := math_rand1.New(math_rand1.NewSource(time1.Now().UnixNano()))
	p := NewPopulatedNinRepNative(popr)
	data, err := encoding_json.Marshal(p)
	if err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		if _, err := encoding_json.Marshal(p); err != nil {
			panic(err)
		}
	}
}

func BenchmarkNinRepNativeJSONUnmarshal(b *testing1.B) {
	popr := math_rand1.New(math_rand1.NewSource(time1.Now().UnixNano()))
	p := NewPopulatedNinRepNative(popr)
	data, err := encoding_json.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &NinRepNative{}
	if err := encoding_json.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		if err := encoding_json.Unmarshal(data, msg); err != nil {
			panic(err)
		}
	}
}

func TestNidRepPackedNativeJSON(t *testing1.T) {
	popr := math_rand1.New(math_rand1.NewSource(time1.Now().UnixNano()))
	p := NewPopulatedNidRepPackedNative(popr)
	jsondata, err := encoding_json.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &NidRepPackedNative{}
	err = encoding_json.Unmarshal(jsondata, msg)
	if err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Json Equal %#v", msg, p)
	}
}
func BenchmarkNidRepPackedNativeJSONMarshal(b *testing1.B) {
	popr := math_rand1.New(math_rand1.NewSource(time1.Now().UnixNano()))
	p := NewPopulatedNidRepPackedNative(popr)
	data, err := encoding_json.Marshal(p)
	if err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		if _, err := encoding_json.Marshal(p); err != nil {
			panic(err)
		}
	}
}

func BenchmarkNidRepPackedNativeJSONUnmarshal(b *testing1.B) {
	popr := math_rand1.New(math_rand1.NewSource(time1.Now().UnixNano()))
	p := NewPopulatedNidRepPackedNative(popr)
	data, err := encoding_json.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &NidRepPackedNative{}
	if err := encoding_json.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		if err := encoding_json.Unmarshal(data, msg); err != nil {
			panic(err)
		}
	}
}

func TestNinRepPackedNativeJSON(t *testing1.T) {
	popr := math_rand1.New(math_rand1.NewSource(time1.Now().UnixNano()))
	p := NewPopulatedNinRepPackedNative(popr)
	jsondata, err := encoding_json.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &NinRepPackedNative{}
	err = encoding_json.Unmarshal(jsondata, msg)
	if err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Json Equal %#v", msg, p)
	}
}
func BenchmarkNinRepPackedNativeJSONMarshal(b *testing1.B) {
	popr := math_rand1.New(math_rand1.NewSource(time1.Now().UnixNano()))
	p := NewPopulatedNinRepPackedNative(popr)
	data, err := encoding_json.Marshal(p)
	if err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		if _, err := encoding_json.Marshal(p); err != nil {
			panic(err)
		}
	}
}

func BenchmarkNinRepPackedNativeJSONUnmarshal(b *testing1.B) {
	popr := math_rand1.New(math_rand1.NewSource(time1.Now().UnixNano()))
	p := NewPopulatedNinRepPackedNative(popr)
	data, err := encoding_json.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &NinRepPackedNative{}
	if err := encoding_json.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		if err := encoding_json.Unmarshal(data, msg); err != nil {
			panic(err)
		}
	}
}

func TestNidOptStructJSON(t *testing1.T) {
	popr := math_rand1.New(math_rand1.NewSource(time1.Now().UnixNano()))
	p := NewPopulatedNidOptStruct(popr)
	jsondata, err := encoding_json.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &NidOptStruct{}
	err = encoding_json.Unmarshal(jsondata, msg)
	if err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Json Equal %#v", msg, p)
	}
}
func BenchmarkNidOptStructJSONMarshal(b *testing1.B) {
	popr := math_rand1.New(math_rand1.NewSource(time1.Now().UnixNano()))
	p := NewPopulatedNidOptStruct(popr)
	data, err := encoding_json.Marshal(p)
	if err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		if _, err := encoding_json.Marshal(p); err != nil {
			panic(err)
		}
	}
}

func BenchmarkNidOptStructJSONUnmarshal(b *testing1.B) {
	popr := math_rand1.New(math_rand1.NewSource(time1.Now().UnixNano()))
	p := NewPopulatedNidOptStruct(popr)
	data, err := encoding_json.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &NidOptStruct{}
	if err := encoding_json.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		if err := encoding_json.Unmarshal(data, msg); err != nil {
			panic(err)
		}
	}
}

func TestNinOptStructJSON(t *testing1.T) {
	popr := math_rand1.New(math_rand1.NewSource(time1.Now().UnixNano()))
	p := NewPopulatedNinOptStruct(popr)
	jsondata, err := encoding_json.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &NinOptStruct{}
	err = encoding_json.Unmarshal(jsondata, msg)
	if err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Json Equal %#v", msg, p)
	}
}
func BenchmarkNinOptStructJSONMarshal(b *testing1.B) {
	popr := math_rand1.New(math_rand1.NewSource(time1.Now().UnixNano()))
	p := NewPopulatedNinOptStruct(popr)
	data, err := encoding_json.Marshal(p)
	if err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		if _, err := encoding_json.Marshal(p); err != nil {
			panic(err)
		}
	}
}

func BenchmarkNinOptStructJSONUnmarshal(b *testing1.B) {
	popr := math_rand1.New(math_rand1.NewSource(time1.Now().UnixNano()))
	p := NewPopulatedNinOptStruct(popr)
	data, err := encoding_json.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &NinOptStruct{}
	if err := encoding_json.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		if err := encoding_json.Unmarshal(data, msg); err != nil {
			panic(err)
		}
	}
}

func TestNidRepStructJSON(t *testing1.T) {
	popr := math_rand1.New(math_rand1.NewSource(time1.Now().UnixNano()))
	p := NewPopulatedNidRepStruct(popr)
	jsondata, err := encoding_json.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &NidRepStruct{}
	err = encoding_json.Unmarshal(jsondata, msg)
	if err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Json Equal %#v", msg, p)
	}
}
func BenchmarkNidRepStructJSONMarshal(b *testing1.B) {
	popr := math_rand1.New(math_rand1.NewSource(time1.Now().UnixNano()))
	p := NewPopulatedNidRepStruct(popr)
	data, err := encoding_json.Marshal(p)
	if err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		if _, err := encoding_json.Marshal(p); err != nil {
			panic(err)
		}
	}
}

func BenchmarkNidRepStructJSONUnmarshal(b *testing1.B) {
	popr := math_rand1.New(math_rand1.NewSource(time1.Now().UnixNano()))
	p := NewPopulatedNidRepStruct(popr)
	data, err := encoding_json.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &NidRepStruct{}
	if err := encoding_json.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		if err := encoding_json.Unmarshal(data, msg); err != nil {
			panic(err)
		}
	}
}

func TestNinRepStructJSON(t *testing1.T) {
	popr := math_rand1.New(math_rand1.NewSource(time1.Now().UnixNano()))
	p := NewPopulatedNinRepStruct(popr)
	jsondata, err := encoding_json.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &NinRepStruct{}
	err = encoding_json.Unmarshal(jsondata, msg)
	if err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Json Equal %#v", msg, p)
	}
}
func BenchmarkNinRepStructJSONMarshal(b *testing1.B) {
	popr := math_rand1.New(math_rand1.NewSource(time1.Now().UnixNano()))
	p := NewPopulatedNinRepStruct(popr)
	data, err := encoding_json.Marshal(p)
	if err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		if _, err := encoding_json.Marshal(p); err != nil {
			panic(err)
		}
	}
}

func BenchmarkNinRepStructJSONUnmarshal(b *testing1.B) {
	popr := math_rand1.New(math_rand1.NewSource(time1.Now().UnixNano()))
	p := NewPopulatedNinRepStruct(popr)
	data, err := encoding_json.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &NinRepStruct{}
	if err := encoding_json.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		if err := encoding_json.Unmarshal(data, msg); err != nil {
			panic(err)
		}
	}
}

func TestNidEmbeddedStructJSON(t *testing1.T) {
	popr := math_rand1.New(math_rand1.NewSource(time1.Now().UnixNano()))
	p := NewPopulatedNidEmbeddedStruct(popr)
	jsondata, err := encoding_json.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &NidEmbeddedStruct{}
	err = encoding_json.Unmarshal(jsondata, msg)
	if err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Json Equal %#v", msg, p)
	}
}
func BenchmarkNidEmbeddedStructJSONMarshal(b *testing1.B) {
	popr := math_rand1.New(math_rand1.NewSource(time1.Now().UnixNano()))
	p := NewPopulatedNidEmbeddedStruct(popr)
	data, err := encoding_json.Marshal(p)
	if err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		if _, err := encoding_json.Marshal(p); err != nil {
			panic(err)
		}
	}
}

func BenchmarkNidEmbeddedStructJSONUnmarshal(b *testing1.B) {
	popr := math_rand1.New(math_rand1.NewSource(time1.Now().UnixNano()))
	p := NewPopulatedNidEmbeddedStruct(popr)
	data, err := encoding_json.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &NidEmbeddedStruct{}
	if err := encoding_json.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		if err := encoding_json.Unmarshal(data, msg); err != nil {
			panic(err)
		}
	}
}

func TestNinEmbeddedStructJSON(t *testing1.T) {
	popr := math_rand1.New(math_rand1.NewSource(time1.Now().UnixNano()))
	p := NewPopulatedNinEmbeddedStruct(popr)
	jsondata, err := encoding_json.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &NinEmbeddedStruct{}
	err = encoding_json.Unmarshal(jsondata, msg)
	if err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Json Equal %#v", msg, p)
	}
}
func BenchmarkNinEmbeddedStructJSONMarshal(b *testing1.B) {
	popr := math_rand1.New(math_rand1.NewSource(time1.Now().UnixNano()))
	p := NewPopulatedNinEmbeddedStruct(popr)
	data, err := encoding_json.Marshal(p)
	if err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		if _, err := encoding_json.Marshal(p); err != nil {
			panic(err)
		}
	}
}

func BenchmarkNinEmbeddedStructJSONUnmarshal(b *testing1.B) {
	popr := math_rand1.New(math_rand1.NewSource(time1.Now().UnixNano()))
	p := NewPopulatedNinEmbeddedStruct(popr)
	data, err := encoding_json.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &NinEmbeddedStruct{}
	if err := encoding_json.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		if err := encoding_json.Unmarshal(data, msg); err != nil {
			panic(err)
		}
	}
}

func TestNidNestedStructJSON(t *testing1.T) {
	popr := math_rand1.New(math_rand1.NewSource(time1.Now().UnixNano()))
	p := NewPopulatedNidNestedStruct(popr)
	jsondata, err := encoding_json.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &NidNestedStruct{}
	err = encoding_json.Unmarshal(jsondata, msg)
	if err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Json Equal %#v", msg, p)
	}
}
func BenchmarkNidNestedStructJSONMarshal(b *testing1.B) {
	popr := math_rand1.New(math_rand1.NewSource(time1.Now().UnixNano()))
	p := NewPopulatedNidNestedStruct(popr)
	data, err := encoding_json.Marshal(p)
	if err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		if _, err := encoding_json.Marshal(p); err != nil {
			panic(err)
		}
	}
}

func BenchmarkNidNestedStructJSONUnmarshal(b *testing1.B) {
	popr := math_rand1.New(math_rand1.NewSource(time1.Now().UnixNano()))
	p := NewPopulatedNidNestedStruct(popr)
	data, err := encoding_json.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &NidNestedStruct{}
	if err := encoding_json.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		if err := encoding_json.Unmarshal(data, msg); err != nil {
			panic(err)
		}
	}
}

func TestNinNestedStructJSON(t *testing1.T) {
	popr := math_rand1.New(math_rand1.NewSource(time1.Now().UnixNano()))
	p := NewPopulatedNinNestedStruct(popr)
	jsondata, err := encoding_json.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &NinNestedStruct{}
	err = encoding_json.Unmarshal(jsondata, msg)
	if err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Json Equal %#v", msg, p)
	}
}
func BenchmarkNinNestedStructJSONMarshal(b *testing1.B) {
	popr := math_rand1.New(math_rand1.NewSource(time1.Now().UnixNano()))
	p := NewPopulatedNinNestedStruct(popr)
	data, err := encoding_json.Marshal(p)
	if err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		if _, err := encoding_json.Marshal(p); err != nil {
			panic(err)
		}
	}
}

func BenchmarkNinNestedStructJSONUnmarshal(b *testing1.B) {
	popr := math_rand1.New(math_rand1.NewSource(time1.Now().UnixNano()))
	p := NewPopulatedNinNestedStruct(popr)
	data, err := encoding_json.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &NinNestedStruct{}
	if err := encoding_json.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		if err := encoding_json.Unmarshal(data, msg); err != nil {
			panic(err)
		}
	}
}

func TestNidOptCustomJSON(t *testing1.T) {
	popr := math_rand1.New(math_rand1.NewSource(time1.Now().UnixNano()))
	p := NewPopulatedNidOptCustom(popr)
	jsondata, err := encoding_json.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &NidOptCustom{}
	err = encoding_json.Unmarshal(jsondata, msg)
	if err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Json Equal %#v", msg, p)
	}
}
func BenchmarkNidOptCustomJSONMarshal(b *testing1.B) {
	popr := math_rand1.New(math_rand1.NewSource(time1.Now().UnixNano()))
	p := NewPopulatedNidOptCustom(popr)
	data, err := encoding_json.Marshal(p)
	if err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		if _, err := encoding_json.Marshal(p); err != nil {
			panic(err)
		}
	}
}

func BenchmarkNidOptCustomJSONUnmarshal(b *testing1.B) {
	popr := math_rand1.New(math_rand1.NewSource(time1.Now().UnixNano()))
	p := NewPopulatedNidOptCustom(popr)
	data, err := encoding_json.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &NidOptCustom{}
	if err := encoding_json.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		if err := encoding_json.Unmarshal(data, msg); err != nil {
			panic(err)
		}
	}
}

func TestNinOptCustomJSON(t *testing1.T) {
	popr := math_rand1.New(math_rand1.NewSource(time1.Now().UnixNano()))
	p := NewPopulatedNinOptCustom(popr)
	jsondata, err := encoding_json.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &NinOptCustom{}
	err = encoding_json.Unmarshal(jsondata, msg)
	if err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Json Equal %#v", msg, p)
	}
}
func BenchmarkNinOptCustomJSONMarshal(b *testing1.B) {
	popr := math_rand1.New(math_rand1.NewSource(time1.Now().UnixNano()))
	p := NewPopulatedNinOptCustom(popr)
	data, err := encoding_json.Marshal(p)
	if err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		if _, err := encoding_json.Marshal(p); err != nil {
			panic(err)
		}
	}
}

func BenchmarkNinOptCustomJSONUnmarshal(b *testing1.B) {
	popr := math_rand1.New(math_rand1.NewSource(time1.Now().UnixNano()))
	p := NewPopulatedNinOptCustom(popr)
	data, err := encoding_json.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &NinOptCustom{}
	if err := encoding_json.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		if err := encoding_json.Unmarshal(data, msg); err != nil {
			panic(err)
		}
	}
}

func TestNidRepCustomJSON(t *testing1.T) {
	popr := math_rand1.New(math_rand1.NewSource(time1.Now().UnixNano()))
	p := NewPopulatedNidRepCustom(popr)
	jsondata, err := encoding_json.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &NidRepCustom{}
	err = encoding_json.Unmarshal(jsondata, msg)
	if err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Json Equal %#v", msg, p)
	}
}
func BenchmarkNidRepCustomJSONMarshal(b *testing1.B) {
	popr := math_rand1.New(math_rand1.NewSource(time1.Now().UnixNano()))
	p := NewPopulatedNidRepCustom(popr)
	data, err := encoding_json.Marshal(p)
	if err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		if _, err := encoding_json.Marshal(p); err != nil {
			panic(err)
		}
	}
}

func BenchmarkNidRepCustomJSONUnmarshal(b *testing1.B) {
	popr := math_rand1.New(math_rand1.NewSource(time1.Now().UnixNano()))
	p := NewPopulatedNidRepCustom(popr)
	data, err := encoding_json.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &NidRepCustom{}
	if err := encoding_json.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		if err := encoding_json.Unmarshal(data, msg); err != nil {
			panic(err)
		}
	}
}

func TestNinRepCustomJSON(t *testing1.T) {
	popr := math_rand1.New(math_rand1.NewSource(time1.Now().UnixNano()))
	p := NewPopulatedNinRepCustom(popr)
	jsondata, err := encoding_json.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &NinRepCustom{}
	err = encoding_json.Unmarshal(jsondata, msg)
	if err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Json Equal %#v", msg, p)
	}
}
func BenchmarkNinRepCustomJSONMarshal(b *testing1.B) {
	popr := math_rand1.New(math_rand1.NewSource(time1.Now().UnixNano()))
	p := NewPopulatedNinRepCustom(popr)
	data, err := encoding_json.Marshal(p)
	if err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		if _, err := encoding_json.Marshal(p); err != nil {
			panic(err)
		}
	}
}

func BenchmarkNinRepCustomJSONUnmarshal(b *testing1.B) {
	popr := math_rand1.New(math_rand1.NewSource(time1.Now().UnixNano()))
	p := NewPopulatedNinRepCustom(popr)
	data, err := encoding_json.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &NinRepCustom{}
	if err := encoding_json.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		if err := encoding_json.Unmarshal(data, msg); err != nil {
			panic(err)
		}
	}
}

func TestNinOptNativeUnionJSON(t *testing1.T) {
	popr := math_rand1.New(math_rand1.NewSource(time1.Now().UnixNano()))
	p := NewPopulatedNinOptNativeUnion(popr)
	jsondata, err := encoding_json.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &NinOptNativeUnion{}
	err = encoding_json.Unmarshal(jsondata, msg)
	if err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Json Equal %#v", msg, p)
	}
}
func BenchmarkNinOptNativeUnionJSONMarshal(b *testing1.B) {
	popr := math_rand1.New(math_rand1.NewSource(time1.Now().UnixNano()))
	p := NewPopulatedNinOptNativeUnion(popr)
	data, err := encoding_json.Marshal(p)
	if err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		if _, err := encoding_json.Marshal(p); err != nil {
			panic(err)
		}
	}
}

func BenchmarkNinOptNativeUnionJSONUnmarshal(b *testing1.B) {
	popr := math_rand1.New(math_rand1.NewSource(time1.Now().UnixNano()))
	p := NewPopulatedNinOptNativeUnion(popr)
	data, err := encoding_json.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &NinOptNativeUnion{}
	if err := encoding_json.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		if err := encoding_json.Unmarshal(data, msg); err != nil {
			panic(err)
		}
	}
}

func TestNinOptStructUnionJSON(t *testing1.T) {
	popr := math_rand1.New(math_rand1.NewSource(time1.Now().UnixNano()))
	p := NewPopulatedNinOptStructUnion(popr)
	jsondata, err := encoding_json.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &NinOptStructUnion{}
	err = encoding_json.Unmarshal(jsondata, msg)
	if err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Json Equal %#v", msg, p)
	}
}
func BenchmarkNinOptStructUnionJSONMarshal(b *testing1.B) {
	popr := math_rand1.New(math_rand1.NewSource(time1.Now().UnixNano()))
	p := NewPopulatedNinOptStructUnion(popr)
	data, err := encoding_json.Marshal(p)
	if err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		if _, err := encoding_json.Marshal(p); err != nil {
			panic(err)
		}
	}
}

func BenchmarkNinOptStructUnionJSONUnmarshal(b *testing1.B) {
	popr := math_rand1.New(math_rand1.NewSource(time1.Now().UnixNano()))
	p := NewPopulatedNinOptStructUnion(popr)
	data, err := encoding_json.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &NinOptStructUnion{}
	if err := encoding_json.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		if err := encoding_json.Unmarshal(data, msg); err != nil {
			panic(err)
		}
	}
}

func TestNinEmbeddedStructUnionJSON(t *testing1.T) {
	popr := math_rand1.New(math_rand1.NewSource(time1.Now().UnixNano()))
	p := NewPopulatedNinEmbeddedStructUnion(popr)
	jsondata, err := encoding_json.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &NinEmbeddedStructUnion{}
	err = encoding_json.Unmarshal(jsondata, msg)
	if err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Json Equal %#v", msg, p)
	}
}
func BenchmarkNinEmbeddedStructUnionJSONMarshal(b *testing1.B) {
	popr := math_rand1.New(math_rand1.NewSource(time1.Now().UnixNano()))
	p := NewPopulatedNinEmbeddedStructUnion(popr)
	data, err := encoding_json.Marshal(p)
	if err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		if _, err := encoding_json.Marshal(p); err != nil {
			panic(err)
		}
	}
}

func BenchmarkNinEmbeddedStructUnionJSONUnmarshal(b *testing1.B) {
	popr := math_rand1.New(math_rand1.NewSource(time1.Now().UnixNano()))
	p := NewPopulatedNinEmbeddedStructUnion(popr)
	data, err := encoding_json.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &NinEmbeddedStructUnion{}
	if err := encoding_json.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		if err := encoding_json.Unmarshal(data, msg); err != nil {
			panic(err)
		}
	}
}

func TestNinNestedStructUnionJSON(t *testing1.T) {
	popr := math_rand1.New(math_rand1.NewSource(time1.Now().UnixNano()))
	p := NewPopulatedNinNestedStructUnion(popr)
	jsondata, err := encoding_json.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &NinNestedStructUnion{}
	err = encoding_json.Unmarshal(jsondata, msg)
	if err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Json Equal %#v", msg, p)
	}
}
func BenchmarkNinNestedStructUnionJSONMarshal(b *testing1.B) {
	popr := math_rand1.New(math_rand1.NewSource(time1.Now().UnixNano()))
	p := NewPopulatedNinNestedStructUnion(popr)
	data, err := encoding_json.Marshal(p)
	if err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		if _, err := encoding_json.Marshal(p); err != nil {
			panic(err)
		}
	}
}

func BenchmarkNinNestedStructUnionJSONUnmarshal(b *testing1.B) {
	popr := math_rand1.New(math_rand1.NewSource(time1.Now().UnixNano()))
	p := NewPopulatedNinNestedStructUnion(popr)
	data, err := encoding_json.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &NinNestedStructUnion{}
	if err := encoding_json.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		if err := encoding_json.Unmarshal(data, msg); err != nil {
			panic(err)
		}
	}
}

func TestTreeJSON(t *testing1.T) {
	popr := math_rand1.New(math_rand1.NewSource(time1.Now().UnixNano()))
	p := NewPopulatedTree(popr)
	jsondata, err := encoding_json.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &Tree{}
	err = encoding_json.Unmarshal(jsondata, msg)
	if err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Json Equal %#v", msg, p)
	}
}
func BenchmarkTreeJSONMarshal(b *testing1.B) {
	popr := math_rand1.New(math_rand1.NewSource(time1.Now().UnixNano()))
	p := NewPopulatedTree(popr)
	data, err := encoding_json.Marshal(p)
	if err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		if _, err := encoding_json.Marshal(p); err != nil {
			panic(err)
		}
	}
}

func BenchmarkTreeJSONUnmarshal(b *testing1.B) {
	popr := math_rand1.New(math_rand1.NewSource(time1.Now().UnixNano()))
	p := NewPopulatedTree(popr)
	data, err := encoding_json.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &Tree{}
	if err := encoding_json.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		if err := encoding_json.Unmarshal(data, msg); err != nil {
			panic(err)
		}
	}
}

func TestOrBranchJSON(t *testing1.T) {
	popr := math_rand1.New(math_rand1.NewSource(time1.Now().UnixNano()))
	p := NewPopulatedOrBranch(popr)
	jsondata, err := encoding_json.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &OrBranch{}
	err = encoding_json.Unmarshal(jsondata, msg)
	if err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Json Equal %#v", msg, p)
	}
}
func BenchmarkOrBranchJSONMarshal(b *testing1.B) {
	popr := math_rand1.New(math_rand1.NewSource(time1.Now().UnixNano()))
	p := NewPopulatedOrBranch(popr)
	data, err := encoding_json.Marshal(p)
	if err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		if _, err := encoding_json.Marshal(p); err != nil {
			panic(err)
		}
	}
}

func BenchmarkOrBranchJSONUnmarshal(b *testing1.B) {
	popr := math_rand1.New(math_rand1.NewSource(time1.Now().UnixNano()))
	p := NewPopulatedOrBranch(popr)
	data, err := encoding_json.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &OrBranch{}
	if err := encoding_json.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		if err := encoding_json.Unmarshal(data, msg); err != nil {
			panic(err)
		}
	}
}

func TestAndBranchJSON(t *testing1.T) {
	popr := math_rand1.New(math_rand1.NewSource(time1.Now().UnixNano()))
	p := NewPopulatedAndBranch(popr)
	jsondata, err := encoding_json.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &AndBranch{}
	err = encoding_json.Unmarshal(jsondata, msg)
	if err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Json Equal %#v", msg, p)
	}
}
func BenchmarkAndBranchJSONMarshal(b *testing1.B) {
	popr := math_rand1.New(math_rand1.NewSource(time1.Now().UnixNano()))
	p := NewPopulatedAndBranch(popr)
	data, err := encoding_json.Marshal(p)
	if err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		if _, err := encoding_json.Marshal(p); err != nil {
			panic(err)
		}
	}
}

func BenchmarkAndBranchJSONUnmarshal(b *testing1.B) {
	popr := math_rand1.New(math_rand1.NewSource(time1.Now().UnixNano()))
	p := NewPopulatedAndBranch(popr)
	data, err := encoding_json.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &AndBranch{}
	if err := encoding_json.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		if err := encoding_json.Unmarshal(data, msg); err != nil {
			panic(err)
		}
	}
}

func TestLeafJSON(t *testing1.T) {
	popr := math_rand1.New(math_rand1.NewSource(time1.Now().UnixNano()))
	p := NewPopulatedLeaf(popr)
	jsondata, err := encoding_json.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &Leaf{}
	err = encoding_json.Unmarshal(jsondata, msg)
	if err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Json Equal %#v", msg, p)
	}
}
func BenchmarkLeafJSONMarshal(b *testing1.B) {
	popr := math_rand1.New(math_rand1.NewSource(time1.Now().UnixNano()))
	p := NewPopulatedLeaf(popr)
	data, err := encoding_json.Marshal(p)
	if err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		if _, err := encoding_json.Marshal(p); err != nil {
			panic(err)
		}
	}
}

func BenchmarkLeafJSONUnmarshal(b *testing1.B) {
	popr := math_rand1.New(math_rand1.NewSource(time1.Now().UnixNano()))
	p := NewPopulatedLeaf(popr)
	data, err := encoding_json.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &Leaf{}
	if err := encoding_json.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		if err := encoding_json.Unmarshal(data, msg); err != nil {
			panic(err)
		}
	}
}

func TestDeepTreeJSON(t *testing1.T) {
	popr := math_rand1.New(math_rand1.NewSource(time1.Now().UnixNano()))
	p := NewPopulatedDeepTree(popr)
	jsondata, err := encoding_json.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &DeepTree{}
	err = encoding_json.Unmarshal(jsondata, msg)
	if err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Json Equal %#v", msg, p)
	}
}
func BenchmarkDeepTreeJSONMarshal(b *testing1.B) {
	popr := math_rand1.New(math_rand1.NewSource(time1.Now().UnixNano()))
	p := NewPopulatedDeepTree(popr)
	data, err := encoding_json.Marshal(p)
	if err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		if _, err := encoding_json.Marshal(p); err != nil {
			panic(err)
		}
	}
}

func BenchmarkDeepTreeJSONUnmarshal(b *testing1.B) {
	popr := math_rand1.New(math_rand1.NewSource(time1.Now().UnixNano()))
	p := NewPopulatedDeepTree(popr)
	data, err := encoding_json.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &DeepTree{}
	if err := encoding_json.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		if err := encoding_json.Unmarshal(data, msg); err != nil {
			panic(err)
		}
	}
}

func TestADeepBranchJSON(t *testing1.T) {
	popr := math_rand1.New(math_rand1.NewSource(time1.Now().UnixNano()))
	p := NewPopulatedADeepBranch(popr)
	jsondata, err := encoding_json.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &ADeepBranch{}
	err = encoding_json.Unmarshal(jsondata, msg)
	if err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Json Equal %#v", msg, p)
	}
}
func BenchmarkADeepBranchJSONMarshal(b *testing1.B) {
	popr := math_rand1.New(math_rand1.NewSource(time1.Now().UnixNano()))
	p := NewPopulatedADeepBranch(popr)
	data, err := encoding_json.Marshal(p)
	if err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		if _, err := encoding_json.Marshal(p); err != nil {
			panic(err)
		}
	}
}

func BenchmarkADeepBranchJSONUnmarshal(b *testing1.B) {
	popr := math_rand1.New(math_rand1.NewSource(time1.Now().UnixNano()))
	p := NewPopulatedADeepBranch(popr)
	data, err := encoding_json.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &ADeepBranch{}
	if err := encoding_json.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		if err := encoding_json.Unmarshal(data, msg); err != nil {
			panic(err)
		}
	}
}

func TestAndDeepBranchJSON(t *testing1.T) {
	popr := math_rand1.New(math_rand1.NewSource(time1.Now().UnixNano()))
	p := NewPopulatedAndDeepBranch(popr)
	jsondata, err := encoding_json.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &AndDeepBranch{}
	err = encoding_json.Unmarshal(jsondata, msg)
	if err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Json Equal %#v", msg, p)
	}
}
func BenchmarkAndDeepBranchJSONMarshal(b *testing1.B) {
	popr := math_rand1.New(math_rand1.NewSource(time1.Now().UnixNano()))
	p := NewPopulatedAndDeepBranch(popr)
	data, err := encoding_json.Marshal(p)
	if err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		if _, err := encoding_json.Marshal(p); err != nil {
			panic(err)
		}
	}
}

func BenchmarkAndDeepBranchJSONUnmarshal(b *testing1.B) {
	popr := math_rand1.New(math_rand1.NewSource(time1.Now().UnixNano()))
	p := NewPopulatedAndDeepBranch(popr)
	data, err := encoding_json.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &AndDeepBranch{}
	if err := encoding_json.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		if err := encoding_json.Unmarshal(data, msg); err != nil {
			panic(err)
		}
	}
}

func TestDeepLeafJSON(t *testing1.T) {
	popr := math_rand1.New(math_rand1.NewSource(time1.Now().UnixNano()))
	p := NewPopulatedDeepLeaf(popr)
	jsondata, err := encoding_json.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &DeepLeaf{}
	err = encoding_json.Unmarshal(jsondata, msg)
	if err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Json Equal %#v", msg, p)
	}
}
func BenchmarkDeepLeafJSONMarshal(b *testing1.B) {
	popr := math_rand1.New(math_rand1.NewSource(time1.Now().UnixNano()))
	p := NewPopulatedDeepLeaf(popr)
	data, err := encoding_json.Marshal(p)
	if err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		if _, err := encoding_json.Marshal(p); err != nil {
			panic(err)
		}
	}
}

func BenchmarkDeepLeafJSONUnmarshal(b *testing1.B) {
	popr := math_rand1.New(math_rand1.NewSource(time1.Now().UnixNano()))
	p := NewPopulatedDeepLeaf(popr)
	data, err := encoding_json.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &DeepLeaf{}
	if err := encoding_json.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		if err := encoding_json.Unmarshal(data, msg); err != nil {
			panic(err)
		}
	}
}

func TestNilJSON(t *testing1.T) {
	popr := math_rand1.New(math_rand1.NewSource(time1.Now().UnixNano()))
	p := NewPopulatedNil(popr)
	jsondata, err := encoding_json.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &Nil{}
	err = encoding_json.Unmarshal(jsondata, msg)
	if err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Json Equal %#v", msg, p)
	}
}
func BenchmarkNilJSONMarshal(b *testing1.B) {
	popr := math_rand1.New(math_rand1.NewSource(time1.Now().UnixNano()))
	p := NewPopulatedNil(popr)
	data, err := encoding_json.Marshal(p)
	if err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		if _, err := encoding_json.Marshal(p); err != nil {
			panic(err)
		}
	}
}

func BenchmarkNilJSONUnmarshal(b *testing1.B) {
	popr := math_rand1.New(math_rand1.NewSource(time1.Now().UnixNano()))
	p := NewPopulatedNil(popr)
	data, err := encoding_json.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &Nil{}
	if err := encoding_json.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		if err := encoding_json.Unmarshal(data, msg); err != nil {
			panic(err)
		}
	}
}

func TestNidOptNativeProtoText(t *testing2.T) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedNidOptNative(popr)
	data := code_google_com_p_gogoprotobuf_proto1.MarshalTextString(p)
	msg := &NidOptNative{}
	if err := code_google_com_p_gogoprotobuf_proto1.UnmarshalText(data, msg); err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Proto %#v", msg, p)
	}
}

func TestNidOptNativeProtoCompactText(t *testing2.T) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedNidOptNative(popr)
	data := code_google_com_p_gogoprotobuf_proto1.CompactTextString(p)
	msg := &NidOptNative{}
	if err := code_google_com_p_gogoprotobuf_proto1.UnmarshalText(data, msg); err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Proto %#v", msg, p)
	}
}

func BenchmarkNidOptNativeProtoTextMarshal(b *testing2.B) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedNidOptNative(popr)
	data := code_google_com_p_gogoprotobuf_proto1.MarshalTextString(p)
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		code_google_com_p_gogoprotobuf_proto1.MarshalTextString(p)
	}
}

func BenchmarkNidOptNativeProtoCompactTextMarshal(b *testing2.B) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedNidOptNative(popr)
	data := code_google_com_p_gogoprotobuf_proto1.CompactTextString(p)
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		code_google_com_p_gogoprotobuf_proto1.CompactTextString(p)
	}
}

func BenchmarkNidOptNativeProtoTextUnmarshal(b *testing2.B) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedNidOptNative(popr)
	data := code_google_com_p_gogoprotobuf_proto1.MarshalTextString(p)
	msg := &NidOptNative{}
	if err := code_google_com_p_gogoprotobuf_proto1.UnmarshalText(data, msg); err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		msg.Reset()
		if err := code_google_com_p_gogoprotobuf_proto1.UnmarshalText(data, msg); err != nil {
			panic(fmt.Sprintf("%v given %v", err, data))
		}
	}
}

func TestNinOptNativeProtoText(t *testing2.T) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedNinOptNative(popr)
	data := code_google_com_p_gogoprotobuf_proto1.MarshalTextString(p)
	msg := &NinOptNative{}
	if err := code_google_com_p_gogoprotobuf_proto1.UnmarshalText(data, msg); err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Proto %#v", msg, p)
	}
}

func TestNinOptNativeProtoCompactText(t *testing2.T) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedNinOptNative(popr)
	data := code_google_com_p_gogoprotobuf_proto1.CompactTextString(p)
	msg := &NinOptNative{}
	if err := code_google_com_p_gogoprotobuf_proto1.UnmarshalText(data, msg); err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Proto %#v", msg, p)
	}
}

func BenchmarkNinOptNativeProtoTextMarshal(b *testing2.B) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedNinOptNative(popr)
	data := code_google_com_p_gogoprotobuf_proto1.MarshalTextString(p)
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		code_google_com_p_gogoprotobuf_proto1.MarshalTextString(p)
	}
}

func BenchmarkNinOptNativeProtoCompactTextMarshal(b *testing2.B) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedNinOptNative(popr)
	data := code_google_com_p_gogoprotobuf_proto1.CompactTextString(p)
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		code_google_com_p_gogoprotobuf_proto1.CompactTextString(p)
	}
}

func BenchmarkNinOptNativeProtoTextUnmarshal(b *testing2.B) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedNinOptNative(popr)
	data := code_google_com_p_gogoprotobuf_proto1.MarshalTextString(p)
	msg := &NinOptNative{}
	if err := code_google_com_p_gogoprotobuf_proto1.UnmarshalText(data, msg); err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		msg.Reset()
		if err := code_google_com_p_gogoprotobuf_proto1.UnmarshalText(data, msg); err != nil {
			panic(fmt.Sprintf("%v given %v", err, data))
		}
	}
}

func TestNidRepNativeProtoText(t *testing2.T) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedNidRepNative(popr)
	data := code_google_com_p_gogoprotobuf_proto1.MarshalTextString(p)
	msg := &NidRepNative{}
	if err := code_google_com_p_gogoprotobuf_proto1.UnmarshalText(data, msg); err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Proto %#v", msg, p)
	}
}

func TestNidRepNativeProtoCompactText(t *testing2.T) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedNidRepNative(popr)
	data := code_google_com_p_gogoprotobuf_proto1.CompactTextString(p)
	msg := &NidRepNative{}
	if err := code_google_com_p_gogoprotobuf_proto1.UnmarshalText(data, msg); err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Proto %#v", msg, p)
	}
}

func BenchmarkNidRepNativeProtoTextMarshal(b *testing2.B) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedNidRepNative(popr)
	data := code_google_com_p_gogoprotobuf_proto1.MarshalTextString(p)
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		code_google_com_p_gogoprotobuf_proto1.MarshalTextString(p)
	}
}

func BenchmarkNidRepNativeProtoCompactTextMarshal(b *testing2.B) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedNidRepNative(popr)
	data := code_google_com_p_gogoprotobuf_proto1.CompactTextString(p)
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		code_google_com_p_gogoprotobuf_proto1.CompactTextString(p)
	}
}

func BenchmarkNidRepNativeProtoTextUnmarshal(b *testing2.B) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedNidRepNative(popr)
	data := code_google_com_p_gogoprotobuf_proto1.MarshalTextString(p)
	msg := &NidRepNative{}
	if err := code_google_com_p_gogoprotobuf_proto1.UnmarshalText(data, msg); err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		msg.Reset()
		if err := code_google_com_p_gogoprotobuf_proto1.UnmarshalText(data, msg); err != nil {
			panic(fmt.Sprintf("%v given %v", err, data))
		}
	}
}

func TestNinRepNativeProtoText(t *testing2.T) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedNinRepNative(popr)
	data := code_google_com_p_gogoprotobuf_proto1.MarshalTextString(p)
	msg := &NinRepNative{}
	if err := code_google_com_p_gogoprotobuf_proto1.UnmarshalText(data, msg); err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Proto %#v", msg, p)
	}
}

func TestNinRepNativeProtoCompactText(t *testing2.T) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedNinRepNative(popr)
	data := code_google_com_p_gogoprotobuf_proto1.CompactTextString(p)
	msg := &NinRepNative{}
	if err := code_google_com_p_gogoprotobuf_proto1.UnmarshalText(data, msg); err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Proto %#v", msg, p)
	}
}

func BenchmarkNinRepNativeProtoTextMarshal(b *testing2.B) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedNinRepNative(popr)
	data := code_google_com_p_gogoprotobuf_proto1.MarshalTextString(p)
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		code_google_com_p_gogoprotobuf_proto1.MarshalTextString(p)
	}
}

func BenchmarkNinRepNativeProtoCompactTextMarshal(b *testing2.B) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedNinRepNative(popr)
	data := code_google_com_p_gogoprotobuf_proto1.CompactTextString(p)
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		code_google_com_p_gogoprotobuf_proto1.CompactTextString(p)
	}
}

func BenchmarkNinRepNativeProtoTextUnmarshal(b *testing2.B) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedNinRepNative(popr)
	data := code_google_com_p_gogoprotobuf_proto1.MarshalTextString(p)
	msg := &NinRepNative{}
	if err := code_google_com_p_gogoprotobuf_proto1.UnmarshalText(data, msg); err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		msg.Reset()
		if err := code_google_com_p_gogoprotobuf_proto1.UnmarshalText(data, msg); err != nil {
			panic(fmt.Sprintf("%v given %v", err, data))
		}
	}
}

func TestNidRepPackedNativeProtoText(t *testing2.T) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedNidRepPackedNative(popr)
	data := code_google_com_p_gogoprotobuf_proto1.MarshalTextString(p)
	msg := &NidRepPackedNative{}
	if err := code_google_com_p_gogoprotobuf_proto1.UnmarshalText(data, msg); err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Proto %#v", msg, p)
	}
}

func TestNidRepPackedNativeProtoCompactText(t *testing2.T) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedNidRepPackedNative(popr)
	data := code_google_com_p_gogoprotobuf_proto1.CompactTextString(p)
	msg := &NidRepPackedNative{}
	if err := code_google_com_p_gogoprotobuf_proto1.UnmarshalText(data, msg); err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Proto %#v", msg, p)
	}
}

func BenchmarkNidRepPackedNativeProtoTextMarshal(b *testing2.B) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedNidRepPackedNative(popr)
	data := code_google_com_p_gogoprotobuf_proto1.MarshalTextString(p)
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		code_google_com_p_gogoprotobuf_proto1.MarshalTextString(p)
	}
}

func BenchmarkNidRepPackedNativeProtoCompactTextMarshal(b *testing2.B) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedNidRepPackedNative(popr)
	data := code_google_com_p_gogoprotobuf_proto1.CompactTextString(p)
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		code_google_com_p_gogoprotobuf_proto1.CompactTextString(p)
	}
}

func BenchmarkNidRepPackedNativeProtoTextUnmarshal(b *testing2.B) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedNidRepPackedNative(popr)
	data := code_google_com_p_gogoprotobuf_proto1.MarshalTextString(p)
	msg := &NidRepPackedNative{}
	if err := code_google_com_p_gogoprotobuf_proto1.UnmarshalText(data, msg); err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		msg.Reset()
		if err := code_google_com_p_gogoprotobuf_proto1.UnmarshalText(data, msg); err != nil {
			panic(fmt.Sprintf("%v given %v", err, data))
		}
	}
}

func TestNinRepPackedNativeProtoText(t *testing2.T) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedNinRepPackedNative(popr)
	data := code_google_com_p_gogoprotobuf_proto1.MarshalTextString(p)
	msg := &NinRepPackedNative{}
	if err := code_google_com_p_gogoprotobuf_proto1.UnmarshalText(data, msg); err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Proto %#v", msg, p)
	}
}

func TestNinRepPackedNativeProtoCompactText(t *testing2.T) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedNinRepPackedNative(popr)
	data := code_google_com_p_gogoprotobuf_proto1.CompactTextString(p)
	msg := &NinRepPackedNative{}
	if err := code_google_com_p_gogoprotobuf_proto1.UnmarshalText(data, msg); err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Proto %#v", msg, p)
	}
}

func BenchmarkNinRepPackedNativeProtoTextMarshal(b *testing2.B) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedNinRepPackedNative(popr)
	data := code_google_com_p_gogoprotobuf_proto1.MarshalTextString(p)
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		code_google_com_p_gogoprotobuf_proto1.MarshalTextString(p)
	}
}

func BenchmarkNinRepPackedNativeProtoCompactTextMarshal(b *testing2.B) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedNinRepPackedNative(popr)
	data := code_google_com_p_gogoprotobuf_proto1.CompactTextString(p)
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		code_google_com_p_gogoprotobuf_proto1.CompactTextString(p)
	}
}

func BenchmarkNinRepPackedNativeProtoTextUnmarshal(b *testing2.B) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedNinRepPackedNative(popr)
	data := code_google_com_p_gogoprotobuf_proto1.MarshalTextString(p)
	msg := &NinRepPackedNative{}
	if err := code_google_com_p_gogoprotobuf_proto1.UnmarshalText(data, msg); err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		msg.Reset()
		if err := code_google_com_p_gogoprotobuf_proto1.UnmarshalText(data, msg); err != nil {
			panic(fmt.Sprintf("%v given %v", err, data))
		}
	}
}

func TestNidOptStructProtoText(t *testing2.T) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedNidOptStruct(popr)
	data := code_google_com_p_gogoprotobuf_proto1.MarshalTextString(p)
	msg := &NidOptStruct{}
	if err := code_google_com_p_gogoprotobuf_proto1.UnmarshalText(data, msg); err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Proto %#v", msg, p)
	}
}

func TestNidOptStructProtoCompactText(t *testing2.T) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedNidOptStruct(popr)
	data := code_google_com_p_gogoprotobuf_proto1.CompactTextString(p)
	msg := &NidOptStruct{}
	if err := code_google_com_p_gogoprotobuf_proto1.UnmarshalText(data, msg); err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Proto %#v", msg, p)
	}
}

func BenchmarkNidOptStructProtoTextMarshal(b *testing2.B) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedNidOptStruct(popr)
	data := code_google_com_p_gogoprotobuf_proto1.MarshalTextString(p)
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		code_google_com_p_gogoprotobuf_proto1.MarshalTextString(p)
	}
}

func BenchmarkNidOptStructProtoCompactTextMarshal(b *testing2.B) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedNidOptStruct(popr)
	data := code_google_com_p_gogoprotobuf_proto1.CompactTextString(p)
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		code_google_com_p_gogoprotobuf_proto1.CompactTextString(p)
	}
}

func BenchmarkNidOptStructProtoTextUnmarshal(b *testing2.B) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedNidOptStruct(popr)
	data := code_google_com_p_gogoprotobuf_proto1.MarshalTextString(p)
	msg := &NidOptStruct{}
	if err := code_google_com_p_gogoprotobuf_proto1.UnmarshalText(data, msg); err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		msg.Reset()
		if err := code_google_com_p_gogoprotobuf_proto1.UnmarshalText(data, msg); err != nil {
			panic(fmt.Sprintf("%v given %v", err, data))
		}
	}
}

func TestNinOptStructProtoText(t *testing2.T) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedNinOptStruct(popr)
	data := code_google_com_p_gogoprotobuf_proto1.MarshalTextString(p)
	msg := &NinOptStruct{}
	if err := code_google_com_p_gogoprotobuf_proto1.UnmarshalText(data, msg); err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Proto %#v", msg, p)
	}
}

func TestNinOptStructProtoCompactText(t *testing2.T) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedNinOptStruct(popr)
	data := code_google_com_p_gogoprotobuf_proto1.CompactTextString(p)
	msg := &NinOptStruct{}
	if err := code_google_com_p_gogoprotobuf_proto1.UnmarshalText(data, msg); err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Proto %#v", msg, p)
	}
}

func BenchmarkNinOptStructProtoTextMarshal(b *testing2.B) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedNinOptStruct(popr)
	data := code_google_com_p_gogoprotobuf_proto1.MarshalTextString(p)
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		code_google_com_p_gogoprotobuf_proto1.MarshalTextString(p)
	}
}

func BenchmarkNinOptStructProtoCompactTextMarshal(b *testing2.B) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedNinOptStruct(popr)
	data := code_google_com_p_gogoprotobuf_proto1.CompactTextString(p)
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		code_google_com_p_gogoprotobuf_proto1.CompactTextString(p)
	}
}

func BenchmarkNinOptStructProtoTextUnmarshal(b *testing2.B) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedNinOptStruct(popr)
	data := code_google_com_p_gogoprotobuf_proto1.MarshalTextString(p)
	msg := &NinOptStruct{}
	if err := code_google_com_p_gogoprotobuf_proto1.UnmarshalText(data, msg); err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		msg.Reset()
		if err := code_google_com_p_gogoprotobuf_proto1.UnmarshalText(data, msg); err != nil {
			panic(fmt.Sprintf("%v given %v", err, data))
		}
	}
}

func TestNidRepStructProtoText(t *testing2.T) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedNidRepStruct(popr)
	data := code_google_com_p_gogoprotobuf_proto1.MarshalTextString(p)
	msg := &NidRepStruct{}
	if err := code_google_com_p_gogoprotobuf_proto1.UnmarshalText(data, msg); err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Proto %#v", msg, p)
	}
}

func TestNidRepStructProtoCompactText(t *testing2.T) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedNidRepStruct(popr)
	data := code_google_com_p_gogoprotobuf_proto1.CompactTextString(p)
	msg := &NidRepStruct{}
	if err := code_google_com_p_gogoprotobuf_proto1.UnmarshalText(data, msg); err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Proto %#v", msg, p)
	}
}

func BenchmarkNidRepStructProtoTextMarshal(b *testing2.B) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedNidRepStruct(popr)
	data := code_google_com_p_gogoprotobuf_proto1.MarshalTextString(p)
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		code_google_com_p_gogoprotobuf_proto1.MarshalTextString(p)
	}
}

func BenchmarkNidRepStructProtoCompactTextMarshal(b *testing2.B) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedNidRepStruct(popr)
	data := code_google_com_p_gogoprotobuf_proto1.CompactTextString(p)
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		code_google_com_p_gogoprotobuf_proto1.CompactTextString(p)
	}
}

func BenchmarkNidRepStructProtoTextUnmarshal(b *testing2.B) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedNidRepStruct(popr)
	data := code_google_com_p_gogoprotobuf_proto1.MarshalTextString(p)
	msg := &NidRepStruct{}
	if err := code_google_com_p_gogoprotobuf_proto1.UnmarshalText(data, msg); err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		msg.Reset()
		if err := code_google_com_p_gogoprotobuf_proto1.UnmarshalText(data, msg); err != nil {
			panic(fmt.Sprintf("%v given %v", err, data))
		}
	}
}

func TestNinRepStructProtoText(t *testing2.T) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedNinRepStruct(popr)
	data := code_google_com_p_gogoprotobuf_proto1.MarshalTextString(p)
	msg := &NinRepStruct{}
	if err := code_google_com_p_gogoprotobuf_proto1.UnmarshalText(data, msg); err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Proto %#v", msg, p)
	}
}

func TestNinRepStructProtoCompactText(t *testing2.T) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedNinRepStruct(popr)
	data := code_google_com_p_gogoprotobuf_proto1.CompactTextString(p)
	msg := &NinRepStruct{}
	if err := code_google_com_p_gogoprotobuf_proto1.UnmarshalText(data, msg); err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Proto %#v", msg, p)
	}
}

func BenchmarkNinRepStructProtoTextMarshal(b *testing2.B) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedNinRepStruct(popr)
	data := code_google_com_p_gogoprotobuf_proto1.MarshalTextString(p)
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		code_google_com_p_gogoprotobuf_proto1.MarshalTextString(p)
	}
}

func BenchmarkNinRepStructProtoCompactTextMarshal(b *testing2.B) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedNinRepStruct(popr)
	data := code_google_com_p_gogoprotobuf_proto1.CompactTextString(p)
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		code_google_com_p_gogoprotobuf_proto1.CompactTextString(p)
	}
}

func BenchmarkNinRepStructProtoTextUnmarshal(b *testing2.B) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedNinRepStruct(popr)
	data := code_google_com_p_gogoprotobuf_proto1.MarshalTextString(p)
	msg := &NinRepStruct{}
	if err := code_google_com_p_gogoprotobuf_proto1.UnmarshalText(data, msg); err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		msg.Reset()
		if err := code_google_com_p_gogoprotobuf_proto1.UnmarshalText(data, msg); err != nil {
			panic(fmt.Sprintf("%v given %v", err, data))
		}
	}
}

func TestNidEmbeddedStructProtoText(t *testing2.T) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedNidEmbeddedStruct(popr)
	data := code_google_com_p_gogoprotobuf_proto1.MarshalTextString(p)
	msg := &NidEmbeddedStruct{}
	if err := code_google_com_p_gogoprotobuf_proto1.UnmarshalText(data, msg); err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Proto %#v", msg, p)
	}
}

func TestNidEmbeddedStructProtoCompactText(t *testing2.T) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedNidEmbeddedStruct(popr)
	data := code_google_com_p_gogoprotobuf_proto1.CompactTextString(p)
	msg := &NidEmbeddedStruct{}
	if err := code_google_com_p_gogoprotobuf_proto1.UnmarshalText(data, msg); err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Proto %#v", msg, p)
	}
}

func BenchmarkNidEmbeddedStructProtoTextMarshal(b *testing2.B) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedNidEmbeddedStruct(popr)
	data := code_google_com_p_gogoprotobuf_proto1.MarshalTextString(p)
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		code_google_com_p_gogoprotobuf_proto1.MarshalTextString(p)
	}
}

func BenchmarkNidEmbeddedStructProtoCompactTextMarshal(b *testing2.B) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedNidEmbeddedStruct(popr)
	data := code_google_com_p_gogoprotobuf_proto1.CompactTextString(p)
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		code_google_com_p_gogoprotobuf_proto1.CompactTextString(p)
	}
}

func BenchmarkNidEmbeddedStructProtoTextUnmarshal(b *testing2.B) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedNidEmbeddedStruct(popr)
	data := code_google_com_p_gogoprotobuf_proto1.MarshalTextString(p)
	msg := &NidEmbeddedStruct{}
	if err := code_google_com_p_gogoprotobuf_proto1.UnmarshalText(data, msg); err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		msg.Reset()
		if err := code_google_com_p_gogoprotobuf_proto1.UnmarshalText(data, msg); err != nil {
			panic(fmt.Sprintf("%v given %v", err, data))
		}
	}
}

func TestNinEmbeddedStructProtoText(t *testing2.T) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedNinEmbeddedStruct(popr)
	data := code_google_com_p_gogoprotobuf_proto1.MarshalTextString(p)
	msg := &NinEmbeddedStruct{}
	if err := code_google_com_p_gogoprotobuf_proto1.UnmarshalText(data, msg); err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Proto %#v", msg, p)
	}
}

func TestNinEmbeddedStructProtoCompactText(t *testing2.T) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedNinEmbeddedStruct(popr)
	data := code_google_com_p_gogoprotobuf_proto1.CompactTextString(p)
	msg := &NinEmbeddedStruct{}
	if err := code_google_com_p_gogoprotobuf_proto1.UnmarshalText(data, msg); err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Proto %#v", msg, p)
	}
}

func BenchmarkNinEmbeddedStructProtoTextMarshal(b *testing2.B) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedNinEmbeddedStruct(popr)
	data := code_google_com_p_gogoprotobuf_proto1.MarshalTextString(p)
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		code_google_com_p_gogoprotobuf_proto1.MarshalTextString(p)
	}
}

func BenchmarkNinEmbeddedStructProtoCompactTextMarshal(b *testing2.B) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedNinEmbeddedStruct(popr)
	data := code_google_com_p_gogoprotobuf_proto1.CompactTextString(p)
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		code_google_com_p_gogoprotobuf_proto1.CompactTextString(p)
	}
}

func BenchmarkNinEmbeddedStructProtoTextUnmarshal(b *testing2.B) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedNinEmbeddedStruct(popr)
	data := code_google_com_p_gogoprotobuf_proto1.MarshalTextString(p)
	msg := &NinEmbeddedStruct{}
	if err := code_google_com_p_gogoprotobuf_proto1.UnmarshalText(data, msg); err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		msg.Reset()
		if err := code_google_com_p_gogoprotobuf_proto1.UnmarshalText(data, msg); err != nil {
			panic(fmt.Sprintf("%v given %v", err, data))
		}
	}
}

func TestNidNestedStructProtoText(t *testing2.T) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedNidNestedStruct(popr)
	data := code_google_com_p_gogoprotobuf_proto1.MarshalTextString(p)
	msg := &NidNestedStruct{}
	if err := code_google_com_p_gogoprotobuf_proto1.UnmarshalText(data, msg); err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Proto %#v", msg, p)
	}
}

func TestNidNestedStructProtoCompactText(t *testing2.T) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedNidNestedStruct(popr)
	data := code_google_com_p_gogoprotobuf_proto1.CompactTextString(p)
	msg := &NidNestedStruct{}
	if err := code_google_com_p_gogoprotobuf_proto1.UnmarshalText(data, msg); err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Proto %#v", msg, p)
	}
}

func BenchmarkNidNestedStructProtoTextMarshal(b *testing2.B) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedNidNestedStruct(popr)
	data := code_google_com_p_gogoprotobuf_proto1.MarshalTextString(p)
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		code_google_com_p_gogoprotobuf_proto1.MarshalTextString(p)
	}
}

func BenchmarkNidNestedStructProtoCompactTextMarshal(b *testing2.B) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedNidNestedStruct(popr)
	data := code_google_com_p_gogoprotobuf_proto1.CompactTextString(p)
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		code_google_com_p_gogoprotobuf_proto1.CompactTextString(p)
	}
}

func BenchmarkNidNestedStructProtoTextUnmarshal(b *testing2.B) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedNidNestedStruct(popr)
	data := code_google_com_p_gogoprotobuf_proto1.MarshalTextString(p)
	msg := &NidNestedStruct{}
	if err := code_google_com_p_gogoprotobuf_proto1.UnmarshalText(data, msg); err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		msg.Reset()
		if err := code_google_com_p_gogoprotobuf_proto1.UnmarshalText(data, msg); err != nil {
			panic(fmt.Sprintf("%v given %v", err, data))
		}
	}
}

func TestNinNestedStructProtoText(t *testing2.T) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedNinNestedStruct(popr)
	data := code_google_com_p_gogoprotobuf_proto1.MarshalTextString(p)
	msg := &NinNestedStruct{}
	if err := code_google_com_p_gogoprotobuf_proto1.UnmarshalText(data, msg); err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Proto %#v", msg, p)
	}
}

func TestNinNestedStructProtoCompactText(t *testing2.T) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedNinNestedStruct(popr)
	data := code_google_com_p_gogoprotobuf_proto1.CompactTextString(p)
	msg := &NinNestedStruct{}
	if err := code_google_com_p_gogoprotobuf_proto1.UnmarshalText(data, msg); err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Proto %#v", msg, p)
	}
}

func BenchmarkNinNestedStructProtoTextMarshal(b *testing2.B) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedNinNestedStruct(popr)
	data := code_google_com_p_gogoprotobuf_proto1.MarshalTextString(p)
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		code_google_com_p_gogoprotobuf_proto1.MarshalTextString(p)
	}
}

func BenchmarkNinNestedStructProtoCompactTextMarshal(b *testing2.B) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedNinNestedStruct(popr)
	data := code_google_com_p_gogoprotobuf_proto1.CompactTextString(p)
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		code_google_com_p_gogoprotobuf_proto1.CompactTextString(p)
	}
}

func BenchmarkNinNestedStructProtoTextUnmarshal(b *testing2.B) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedNinNestedStruct(popr)
	data := code_google_com_p_gogoprotobuf_proto1.MarshalTextString(p)
	msg := &NinNestedStruct{}
	if err := code_google_com_p_gogoprotobuf_proto1.UnmarshalText(data, msg); err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		msg.Reset()
		if err := code_google_com_p_gogoprotobuf_proto1.UnmarshalText(data, msg); err != nil {
			panic(fmt.Sprintf("%v given %v", err, data))
		}
	}
}

func TestNidOptCustomProtoText(t *testing2.T) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedNidOptCustom(popr)
	data := code_google_com_p_gogoprotobuf_proto1.MarshalTextString(p)
	msg := &NidOptCustom{}
	if err := code_google_com_p_gogoprotobuf_proto1.UnmarshalText(data, msg); err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Proto %#v", msg, p)
	}
}

func TestNidOptCustomProtoCompactText(t *testing2.T) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedNidOptCustom(popr)
	data := code_google_com_p_gogoprotobuf_proto1.CompactTextString(p)
	msg := &NidOptCustom{}
	if err := code_google_com_p_gogoprotobuf_proto1.UnmarshalText(data, msg); err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Proto %#v", msg, p)
	}
}

func BenchmarkNidOptCustomProtoTextMarshal(b *testing2.B) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedNidOptCustom(popr)
	data := code_google_com_p_gogoprotobuf_proto1.MarshalTextString(p)
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		code_google_com_p_gogoprotobuf_proto1.MarshalTextString(p)
	}
}

func BenchmarkNidOptCustomProtoCompactTextMarshal(b *testing2.B) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedNidOptCustom(popr)
	data := code_google_com_p_gogoprotobuf_proto1.CompactTextString(p)
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		code_google_com_p_gogoprotobuf_proto1.CompactTextString(p)
	}
}

func BenchmarkNidOptCustomProtoTextUnmarshal(b *testing2.B) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedNidOptCustom(popr)
	data := code_google_com_p_gogoprotobuf_proto1.MarshalTextString(p)
	msg := &NidOptCustom{}
	if err := code_google_com_p_gogoprotobuf_proto1.UnmarshalText(data, msg); err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		msg.Reset()
		if err := code_google_com_p_gogoprotobuf_proto1.UnmarshalText(data, msg); err != nil {
			panic(fmt.Sprintf("%v given %v", err, data))
		}
	}
}

func TestNinOptCustomProtoText(t *testing2.T) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedNinOptCustom(popr)
	data := code_google_com_p_gogoprotobuf_proto1.MarshalTextString(p)
	msg := &NinOptCustom{}
	if err := code_google_com_p_gogoprotobuf_proto1.UnmarshalText(data, msg); err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Proto %#v", msg, p)
	}
}

func TestNinOptCustomProtoCompactText(t *testing2.T) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedNinOptCustom(popr)
	data := code_google_com_p_gogoprotobuf_proto1.CompactTextString(p)
	msg := &NinOptCustom{}
	if err := code_google_com_p_gogoprotobuf_proto1.UnmarshalText(data, msg); err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Proto %#v", msg, p)
	}
}

func BenchmarkNinOptCustomProtoTextMarshal(b *testing2.B) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedNinOptCustom(popr)
	data := code_google_com_p_gogoprotobuf_proto1.MarshalTextString(p)
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		code_google_com_p_gogoprotobuf_proto1.MarshalTextString(p)
	}
}

func BenchmarkNinOptCustomProtoCompactTextMarshal(b *testing2.B) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedNinOptCustom(popr)
	data := code_google_com_p_gogoprotobuf_proto1.CompactTextString(p)
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		code_google_com_p_gogoprotobuf_proto1.CompactTextString(p)
	}
}

func BenchmarkNinOptCustomProtoTextUnmarshal(b *testing2.B) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedNinOptCustom(popr)
	data := code_google_com_p_gogoprotobuf_proto1.MarshalTextString(p)
	msg := &NinOptCustom{}
	if err := code_google_com_p_gogoprotobuf_proto1.UnmarshalText(data, msg); err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		msg.Reset()
		if err := code_google_com_p_gogoprotobuf_proto1.UnmarshalText(data, msg); err != nil {
			panic(fmt.Sprintf("%v given %v", err, data))
		}
	}
}

func TestNidRepCustomProtoText(t *testing2.T) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedNidRepCustom(popr)
	data := code_google_com_p_gogoprotobuf_proto1.MarshalTextString(p)
	msg := &NidRepCustom{}
	if err := code_google_com_p_gogoprotobuf_proto1.UnmarshalText(data, msg); err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Proto %#v", msg, p)
	}
}

func TestNidRepCustomProtoCompactText(t *testing2.T) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedNidRepCustom(popr)
	data := code_google_com_p_gogoprotobuf_proto1.CompactTextString(p)
	msg := &NidRepCustom{}
	if err := code_google_com_p_gogoprotobuf_proto1.UnmarshalText(data, msg); err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Proto %#v", msg, p)
	}
}

func BenchmarkNidRepCustomProtoTextMarshal(b *testing2.B) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedNidRepCustom(popr)
	data := code_google_com_p_gogoprotobuf_proto1.MarshalTextString(p)
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		code_google_com_p_gogoprotobuf_proto1.MarshalTextString(p)
	}
}

func BenchmarkNidRepCustomProtoCompactTextMarshal(b *testing2.B) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedNidRepCustom(popr)
	data := code_google_com_p_gogoprotobuf_proto1.CompactTextString(p)
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		code_google_com_p_gogoprotobuf_proto1.CompactTextString(p)
	}
}

func BenchmarkNidRepCustomProtoTextUnmarshal(b *testing2.B) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedNidRepCustom(popr)
	data := code_google_com_p_gogoprotobuf_proto1.MarshalTextString(p)
	msg := &NidRepCustom{}
	if err := code_google_com_p_gogoprotobuf_proto1.UnmarshalText(data, msg); err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		msg.Reset()
		if err := code_google_com_p_gogoprotobuf_proto1.UnmarshalText(data, msg); err != nil {
			panic(fmt.Sprintf("%v given %v", err, data))
		}
	}
}

func TestNinRepCustomProtoText(t *testing2.T) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedNinRepCustom(popr)
	data := code_google_com_p_gogoprotobuf_proto1.MarshalTextString(p)
	msg := &NinRepCustom{}
	if err := code_google_com_p_gogoprotobuf_proto1.UnmarshalText(data, msg); err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Proto %#v", msg, p)
	}
}

func TestNinRepCustomProtoCompactText(t *testing2.T) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedNinRepCustom(popr)
	data := code_google_com_p_gogoprotobuf_proto1.CompactTextString(p)
	msg := &NinRepCustom{}
	if err := code_google_com_p_gogoprotobuf_proto1.UnmarshalText(data, msg); err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Proto %#v", msg, p)
	}
}

func BenchmarkNinRepCustomProtoTextMarshal(b *testing2.B) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedNinRepCustom(popr)
	data := code_google_com_p_gogoprotobuf_proto1.MarshalTextString(p)
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		code_google_com_p_gogoprotobuf_proto1.MarshalTextString(p)
	}
}

func BenchmarkNinRepCustomProtoCompactTextMarshal(b *testing2.B) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedNinRepCustom(popr)
	data := code_google_com_p_gogoprotobuf_proto1.CompactTextString(p)
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		code_google_com_p_gogoprotobuf_proto1.CompactTextString(p)
	}
}

func BenchmarkNinRepCustomProtoTextUnmarshal(b *testing2.B) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedNinRepCustom(popr)
	data := code_google_com_p_gogoprotobuf_proto1.MarshalTextString(p)
	msg := &NinRepCustom{}
	if err := code_google_com_p_gogoprotobuf_proto1.UnmarshalText(data, msg); err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		msg.Reset()
		if err := code_google_com_p_gogoprotobuf_proto1.UnmarshalText(data, msg); err != nil {
			panic(fmt.Sprintf("%v given %v", err, data))
		}
	}
}

func TestNinOptNativeUnionProtoText(t *testing2.T) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedNinOptNativeUnion(popr)
	data := code_google_com_p_gogoprotobuf_proto1.MarshalTextString(p)
	msg := &NinOptNativeUnion{}
	if err := code_google_com_p_gogoprotobuf_proto1.UnmarshalText(data, msg); err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Proto %#v", msg, p)
	}
}

func TestNinOptNativeUnionProtoCompactText(t *testing2.T) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedNinOptNativeUnion(popr)
	data := code_google_com_p_gogoprotobuf_proto1.CompactTextString(p)
	msg := &NinOptNativeUnion{}
	if err := code_google_com_p_gogoprotobuf_proto1.UnmarshalText(data, msg); err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Proto %#v", msg, p)
	}
}

func BenchmarkNinOptNativeUnionProtoTextMarshal(b *testing2.B) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedNinOptNativeUnion(popr)
	data := code_google_com_p_gogoprotobuf_proto1.MarshalTextString(p)
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		code_google_com_p_gogoprotobuf_proto1.MarshalTextString(p)
	}
}

func BenchmarkNinOptNativeUnionProtoCompactTextMarshal(b *testing2.B) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedNinOptNativeUnion(popr)
	data := code_google_com_p_gogoprotobuf_proto1.CompactTextString(p)
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		code_google_com_p_gogoprotobuf_proto1.CompactTextString(p)
	}
}

func BenchmarkNinOptNativeUnionProtoTextUnmarshal(b *testing2.B) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedNinOptNativeUnion(popr)
	data := code_google_com_p_gogoprotobuf_proto1.MarshalTextString(p)
	msg := &NinOptNativeUnion{}
	if err := code_google_com_p_gogoprotobuf_proto1.UnmarshalText(data, msg); err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		msg.Reset()
		if err := code_google_com_p_gogoprotobuf_proto1.UnmarshalText(data, msg); err != nil {
			panic(fmt.Sprintf("%v given %v", err, data))
		}
	}
}

func TestNinOptStructUnionProtoText(t *testing2.T) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedNinOptStructUnion(popr)
	data := code_google_com_p_gogoprotobuf_proto1.MarshalTextString(p)
	msg := &NinOptStructUnion{}
	if err := code_google_com_p_gogoprotobuf_proto1.UnmarshalText(data, msg); err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Proto %#v", msg, p)
	}
}

func TestNinOptStructUnionProtoCompactText(t *testing2.T) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedNinOptStructUnion(popr)
	data := code_google_com_p_gogoprotobuf_proto1.CompactTextString(p)
	msg := &NinOptStructUnion{}
	if err := code_google_com_p_gogoprotobuf_proto1.UnmarshalText(data, msg); err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Proto %#v", msg, p)
	}
}

func BenchmarkNinOptStructUnionProtoTextMarshal(b *testing2.B) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedNinOptStructUnion(popr)
	data := code_google_com_p_gogoprotobuf_proto1.MarshalTextString(p)
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		code_google_com_p_gogoprotobuf_proto1.MarshalTextString(p)
	}
}

func BenchmarkNinOptStructUnionProtoCompactTextMarshal(b *testing2.B) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedNinOptStructUnion(popr)
	data := code_google_com_p_gogoprotobuf_proto1.CompactTextString(p)
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		code_google_com_p_gogoprotobuf_proto1.CompactTextString(p)
	}
}

func BenchmarkNinOptStructUnionProtoTextUnmarshal(b *testing2.B) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedNinOptStructUnion(popr)
	data := code_google_com_p_gogoprotobuf_proto1.MarshalTextString(p)
	msg := &NinOptStructUnion{}
	if err := code_google_com_p_gogoprotobuf_proto1.UnmarshalText(data, msg); err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		msg.Reset()
		if err := code_google_com_p_gogoprotobuf_proto1.UnmarshalText(data, msg); err != nil {
			panic(fmt.Sprintf("%v given %v", err, data))
		}
	}
}

func TestNinEmbeddedStructUnionProtoText(t *testing2.T) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedNinEmbeddedStructUnion(popr)
	data := code_google_com_p_gogoprotobuf_proto1.MarshalTextString(p)
	msg := &NinEmbeddedStructUnion{}
	if err := code_google_com_p_gogoprotobuf_proto1.UnmarshalText(data, msg); err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Proto %#v", msg, p)
	}
}

func TestNinEmbeddedStructUnionProtoCompactText(t *testing2.T) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedNinEmbeddedStructUnion(popr)
	data := code_google_com_p_gogoprotobuf_proto1.CompactTextString(p)
	msg := &NinEmbeddedStructUnion{}
	if err := code_google_com_p_gogoprotobuf_proto1.UnmarshalText(data, msg); err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Proto %#v", msg, p)
	}
}

func BenchmarkNinEmbeddedStructUnionProtoTextMarshal(b *testing2.B) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedNinEmbeddedStructUnion(popr)
	data := code_google_com_p_gogoprotobuf_proto1.MarshalTextString(p)
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		code_google_com_p_gogoprotobuf_proto1.MarshalTextString(p)
	}
}

func BenchmarkNinEmbeddedStructUnionProtoCompactTextMarshal(b *testing2.B) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedNinEmbeddedStructUnion(popr)
	data := code_google_com_p_gogoprotobuf_proto1.CompactTextString(p)
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		code_google_com_p_gogoprotobuf_proto1.CompactTextString(p)
	}
}

func BenchmarkNinEmbeddedStructUnionProtoTextUnmarshal(b *testing2.B) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedNinEmbeddedStructUnion(popr)
	data := code_google_com_p_gogoprotobuf_proto1.MarshalTextString(p)
	msg := &NinEmbeddedStructUnion{}
	if err := code_google_com_p_gogoprotobuf_proto1.UnmarshalText(data, msg); err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		msg.Reset()
		if err := code_google_com_p_gogoprotobuf_proto1.UnmarshalText(data, msg); err != nil {
			panic(fmt.Sprintf("%v given %v", err, data))
		}
	}
}

func TestNinNestedStructUnionProtoText(t *testing2.T) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedNinNestedStructUnion(popr)
	data := code_google_com_p_gogoprotobuf_proto1.MarshalTextString(p)
	msg := &NinNestedStructUnion{}
	if err := code_google_com_p_gogoprotobuf_proto1.UnmarshalText(data, msg); err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Proto %#v", msg, p)
	}
}

func TestNinNestedStructUnionProtoCompactText(t *testing2.T) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedNinNestedStructUnion(popr)
	data := code_google_com_p_gogoprotobuf_proto1.CompactTextString(p)
	msg := &NinNestedStructUnion{}
	if err := code_google_com_p_gogoprotobuf_proto1.UnmarshalText(data, msg); err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Proto %#v", msg, p)
	}
}

func BenchmarkNinNestedStructUnionProtoTextMarshal(b *testing2.B) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedNinNestedStructUnion(popr)
	data := code_google_com_p_gogoprotobuf_proto1.MarshalTextString(p)
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		code_google_com_p_gogoprotobuf_proto1.MarshalTextString(p)
	}
}

func BenchmarkNinNestedStructUnionProtoCompactTextMarshal(b *testing2.B) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedNinNestedStructUnion(popr)
	data := code_google_com_p_gogoprotobuf_proto1.CompactTextString(p)
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		code_google_com_p_gogoprotobuf_proto1.CompactTextString(p)
	}
}

func BenchmarkNinNestedStructUnionProtoTextUnmarshal(b *testing2.B) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedNinNestedStructUnion(popr)
	data := code_google_com_p_gogoprotobuf_proto1.MarshalTextString(p)
	msg := &NinNestedStructUnion{}
	if err := code_google_com_p_gogoprotobuf_proto1.UnmarshalText(data, msg); err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		msg.Reset()
		if err := code_google_com_p_gogoprotobuf_proto1.UnmarshalText(data, msg); err != nil {
			panic(fmt.Sprintf("%v given %v", err, data))
		}
	}
}

func TestTreeProtoText(t *testing2.T) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedTree(popr)
	data := code_google_com_p_gogoprotobuf_proto1.MarshalTextString(p)
	msg := &Tree{}
	if err := code_google_com_p_gogoprotobuf_proto1.UnmarshalText(data, msg); err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Proto %#v", msg, p)
	}
}

func TestTreeProtoCompactText(t *testing2.T) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedTree(popr)
	data := code_google_com_p_gogoprotobuf_proto1.CompactTextString(p)
	msg := &Tree{}
	if err := code_google_com_p_gogoprotobuf_proto1.UnmarshalText(data, msg); err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Proto %#v", msg, p)
	}
}

func BenchmarkTreeProtoTextMarshal(b *testing2.B) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedTree(popr)
	data := code_google_com_p_gogoprotobuf_proto1.MarshalTextString(p)
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		code_google_com_p_gogoprotobuf_proto1.MarshalTextString(p)
	}
}

func BenchmarkTreeProtoCompactTextMarshal(b *testing2.B) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedTree(popr)
	data := code_google_com_p_gogoprotobuf_proto1.CompactTextString(p)
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		code_google_com_p_gogoprotobuf_proto1.CompactTextString(p)
	}
}

func BenchmarkTreeProtoTextUnmarshal(b *testing2.B) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedTree(popr)
	data := code_google_com_p_gogoprotobuf_proto1.MarshalTextString(p)
	msg := &Tree{}
	if err := code_google_com_p_gogoprotobuf_proto1.UnmarshalText(data, msg); err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		msg.Reset()
		if err := code_google_com_p_gogoprotobuf_proto1.UnmarshalText(data, msg); err != nil {
			panic(fmt.Sprintf("%v given %v", err, data))
		}
	}
}

func TestOrBranchProtoText(t *testing2.T) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedOrBranch(popr)
	data := code_google_com_p_gogoprotobuf_proto1.MarshalTextString(p)
	msg := &OrBranch{}
	if err := code_google_com_p_gogoprotobuf_proto1.UnmarshalText(data, msg); err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Proto %#v", msg, p)
	}
}

func TestOrBranchProtoCompactText(t *testing2.T) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedOrBranch(popr)
	data := code_google_com_p_gogoprotobuf_proto1.CompactTextString(p)
	msg := &OrBranch{}
	if err := code_google_com_p_gogoprotobuf_proto1.UnmarshalText(data, msg); err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Proto %#v", msg, p)
	}
}

func BenchmarkOrBranchProtoTextMarshal(b *testing2.B) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedOrBranch(popr)
	data := code_google_com_p_gogoprotobuf_proto1.MarshalTextString(p)
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		code_google_com_p_gogoprotobuf_proto1.MarshalTextString(p)
	}
}

func BenchmarkOrBranchProtoCompactTextMarshal(b *testing2.B) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedOrBranch(popr)
	data := code_google_com_p_gogoprotobuf_proto1.CompactTextString(p)
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		code_google_com_p_gogoprotobuf_proto1.CompactTextString(p)
	}
}

func BenchmarkOrBranchProtoTextUnmarshal(b *testing2.B) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedOrBranch(popr)
	data := code_google_com_p_gogoprotobuf_proto1.MarshalTextString(p)
	msg := &OrBranch{}
	if err := code_google_com_p_gogoprotobuf_proto1.UnmarshalText(data, msg); err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		msg.Reset()
		if err := code_google_com_p_gogoprotobuf_proto1.UnmarshalText(data, msg); err != nil {
			panic(fmt.Sprintf("%v given %v", err, data))
		}
	}
}

func TestAndBranchProtoText(t *testing2.T) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedAndBranch(popr)
	data := code_google_com_p_gogoprotobuf_proto1.MarshalTextString(p)
	msg := &AndBranch{}
	if err := code_google_com_p_gogoprotobuf_proto1.UnmarshalText(data, msg); err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Proto %#v", msg, p)
	}
}

func TestAndBranchProtoCompactText(t *testing2.T) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedAndBranch(popr)
	data := code_google_com_p_gogoprotobuf_proto1.CompactTextString(p)
	msg := &AndBranch{}
	if err := code_google_com_p_gogoprotobuf_proto1.UnmarshalText(data, msg); err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Proto %#v", msg, p)
	}
}

func BenchmarkAndBranchProtoTextMarshal(b *testing2.B) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedAndBranch(popr)
	data := code_google_com_p_gogoprotobuf_proto1.MarshalTextString(p)
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		code_google_com_p_gogoprotobuf_proto1.MarshalTextString(p)
	}
}

func BenchmarkAndBranchProtoCompactTextMarshal(b *testing2.B) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedAndBranch(popr)
	data := code_google_com_p_gogoprotobuf_proto1.CompactTextString(p)
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		code_google_com_p_gogoprotobuf_proto1.CompactTextString(p)
	}
}

func BenchmarkAndBranchProtoTextUnmarshal(b *testing2.B) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedAndBranch(popr)
	data := code_google_com_p_gogoprotobuf_proto1.MarshalTextString(p)
	msg := &AndBranch{}
	if err := code_google_com_p_gogoprotobuf_proto1.UnmarshalText(data, msg); err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		msg.Reset()
		if err := code_google_com_p_gogoprotobuf_proto1.UnmarshalText(data, msg); err != nil {
			panic(fmt.Sprintf("%v given %v", err, data))
		}
	}
}

func TestLeafProtoText(t *testing2.T) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedLeaf(popr)
	data := code_google_com_p_gogoprotobuf_proto1.MarshalTextString(p)
	msg := &Leaf{}
	if err := code_google_com_p_gogoprotobuf_proto1.UnmarshalText(data, msg); err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Proto %#v", msg, p)
	}
}

func TestLeafProtoCompactText(t *testing2.T) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedLeaf(popr)
	data := code_google_com_p_gogoprotobuf_proto1.CompactTextString(p)
	msg := &Leaf{}
	if err := code_google_com_p_gogoprotobuf_proto1.UnmarshalText(data, msg); err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Proto %#v", msg, p)
	}
}

func BenchmarkLeafProtoTextMarshal(b *testing2.B) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedLeaf(popr)
	data := code_google_com_p_gogoprotobuf_proto1.MarshalTextString(p)
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		code_google_com_p_gogoprotobuf_proto1.MarshalTextString(p)
	}
}

func BenchmarkLeafProtoCompactTextMarshal(b *testing2.B) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedLeaf(popr)
	data := code_google_com_p_gogoprotobuf_proto1.CompactTextString(p)
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		code_google_com_p_gogoprotobuf_proto1.CompactTextString(p)
	}
}

func BenchmarkLeafProtoTextUnmarshal(b *testing2.B) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedLeaf(popr)
	data := code_google_com_p_gogoprotobuf_proto1.MarshalTextString(p)
	msg := &Leaf{}
	if err := code_google_com_p_gogoprotobuf_proto1.UnmarshalText(data, msg); err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		msg.Reset()
		if err := code_google_com_p_gogoprotobuf_proto1.UnmarshalText(data, msg); err != nil {
			panic(fmt.Sprintf("%v given %v", err, data))
		}
	}
}

func TestDeepTreeProtoText(t *testing2.T) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedDeepTree(popr)
	data := code_google_com_p_gogoprotobuf_proto1.MarshalTextString(p)
	msg := &DeepTree{}
	if err := code_google_com_p_gogoprotobuf_proto1.UnmarshalText(data, msg); err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Proto %#v", msg, p)
	}
}

func TestDeepTreeProtoCompactText(t *testing2.T) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedDeepTree(popr)
	data := code_google_com_p_gogoprotobuf_proto1.CompactTextString(p)
	msg := &DeepTree{}
	if err := code_google_com_p_gogoprotobuf_proto1.UnmarshalText(data, msg); err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Proto %#v", msg, p)
	}
}

func BenchmarkDeepTreeProtoTextMarshal(b *testing2.B) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedDeepTree(popr)
	data := code_google_com_p_gogoprotobuf_proto1.MarshalTextString(p)
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		code_google_com_p_gogoprotobuf_proto1.MarshalTextString(p)
	}
}

func BenchmarkDeepTreeProtoCompactTextMarshal(b *testing2.B) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedDeepTree(popr)
	data := code_google_com_p_gogoprotobuf_proto1.CompactTextString(p)
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		code_google_com_p_gogoprotobuf_proto1.CompactTextString(p)
	}
}

func BenchmarkDeepTreeProtoTextUnmarshal(b *testing2.B) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedDeepTree(popr)
	data := code_google_com_p_gogoprotobuf_proto1.MarshalTextString(p)
	msg := &DeepTree{}
	if err := code_google_com_p_gogoprotobuf_proto1.UnmarshalText(data, msg); err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		msg.Reset()
		if err := code_google_com_p_gogoprotobuf_proto1.UnmarshalText(data, msg); err != nil {
			panic(fmt.Sprintf("%v given %v", err, data))
		}
	}
}

func TestADeepBranchProtoText(t *testing2.T) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedADeepBranch(popr)
	data := code_google_com_p_gogoprotobuf_proto1.MarshalTextString(p)
	msg := &ADeepBranch{}
	if err := code_google_com_p_gogoprotobuf_proto1.UnmarshalText(data, msg); err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Proto %#v", msg, p)
	}
}

func TestADeepBranchProtoCompactText(t *testing2.T) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedADeepBranch(popr)
	data := code_google_com_p_gogoprotobuf_proto1.CompactTextString(p)
	msg := &ADeepBranch{}
	if err := code_google_com_p_gogoprotobuf_proto1.UnmarshalText(data, msg); err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Proto %#v", msg, p)
	}
}

func BenchmarkADeepBranchProtoTextMarshal(b *testing2.B) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedADeepBranch(popr)
	data := code_google_com_p_gogoprotobuf_proto1.MarshalTextString(p)
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		code_google_com_p_gogoprotobuf_proto1.MarshalTextString(p)
	}
}

func BenchmarkADeepBranchProtoCompactTextMarshal(b *testing2.B) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedADeepBranch(popr)
	data := code_google_com_p_gogoprotobuf_proto1.CompactTextString(p)
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		code_google_com_p_gogoprotobuf_proto1.CompactTextString(p)
	}
}

func BenchmarkADeepBranchProtoTextUnmarshal(b *testing2.B) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedADeepBranch(popr)
	data := code_google_com_p_gogoprotobuf_proto1.MarshalTextString(p)
	msg := &ADeepBranch{}
	if err := code_google_com_p_gogoprotobuf_proto1.UnmarshalText(data, msg); err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		msg.Reset()
		if err := code_google_com_p_gogoprotobuf_proto1.UnmarshalText(data, msg); err != nil {
			panic(fmt.Sprintf("%v given %v", err, data))
		}
	}
}

func TestAndDeepBranchProtoText(t *testing2.T) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedAndDeepBranch(popr)
	data := code_google_com_p_gogoprotobuf_proto1.MarshalTextString(p)
	msg := &AndDeepBranch{}
	if err := code_google_com_p_gogoprotobuf_proto1.UnmarshalText(data, msg); err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Proto %#v", msg, p)
	}
}

func TestAndDeepBranchProtoCompactText(t *testing2.T) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedAndDeepBranch(popr)
	data := code_google_com_p_gogoprotobuf_proto1.CompactTextString(p)
	msg := &AndDeepBranch{}
	if err := code_google_com_p_gogoprotobuf_proto1.UnmarshalText(data, msg); err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Proto %#v", msg, p)
	}
}

func BenchmarkAndDeepBranchProtoTextMarshal(b *testing2.B) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedAndDeepBranch(popr)
	data := code_google_com_p_gogoprotobuf_proto1.MarshalTextString(p)
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		code_google_com_p_gogoprotobuf_proto1.MarshalTextString(p)
	}
}

func BenchmarkAndDeepBranchProtoCompactTextMarshal(b *testing2.B) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedAndDeepBranch(popr)
	data := code_google_com_p_gogoprotobuf_proto1.CompactTextString(p)
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		code_google_com_p_gogoprotobuf_proto1.CompactTextString(p)
	}
}

func BenchmarkAndDeepBranchProtoTextUnmarshal(b *testing2.B) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedAndDeepBranch(popr)
	data := code_google_com_p_gogoprotobuf_proto1.MarshalTextString(p)
	msg := &AndDeepBranch{}
	if err := code_google_com_p_gogoprotobuf_proto1.UnmarshalText(data, msg); err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		msg.Reset()
		if err := code_google_com_p_gogoprotobuf_proto1.UnmarshalText(data, msg); err != nil {
			panic(fmt.Sprintf("%v given %v", err, data))
		}
	}
}

func TestDeepLeafProtoText(t *testing2.T) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedDeepLeaf(popr)
	data := code_google_com_p_gogoprotobuf_proto1.MarshalTextString(p)
	msg := &DeepLeaf{}
	if err := code_google_com_p_gogoprotobuf_proto1.UnmarshalText(data, msg); err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Proto %#v", msg, p)
	}
}

func TestDeepLeafProtoCompactText(t *testing2.T) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedDeepLeaf(popr)
	data := code_google_com_p_gogoprotobuf_proto1.CompactTextString(p)
	msg := &DeepLeaf{}
	if err := code_google_com_p_gogoprotobuf_proto1.UnmarshalText(data, msg); err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Proto %#v", msg, p)
	}
}

func BenchmarkDeepLeafProtoTextMarshal(b *testing2.B) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedDeepLeaf(popr)
	data := code_google_com_p_gogoprotobuf_proto1.MarshalTextString(p)
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		code_google_com_p_gogoprotobuf_proto1.MarshalTextString(p)
	}
}

func BenchmarkDeepLeafProtoCompactTextMarshal(b *testing2.B) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedDeepLeaf(popr)
	data := code_google_com_p_gogoprotobuf_proto1.CompactTextString(p)
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		code_google_com_p_gogoprotobuf_proto1.CompactTextString(p)
	}
}

func BenchmarkDeepLeafProtoTextUnmarshal(b *testing2.B) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedDeepLeaf(popr)
	data := code_google_com_p_gogoprotobuf_proto1.MarshalTextString(p)
	msg := &DeepLeaf{}
	if err := code_google_com_p_gogoprotobuf_proto1.UnmarshalText(data, msg); err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		msg.Reset()
		if err := code_google_com_p_gogoprotobuf_proto1.UnmarshalText(data, msg); err != nil {
			panic(fmt.Sprintf("%v given %v", err, data))
		}
	}
}

func TestNilProtoText(t *testing2.T) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedNil(popr)
	data := code_google_com_p_gogoprotobuf_proto1.MarshalTextString(p)
	msg := &Nil{}
	if err := code_google_com_p_gogoprotobuf_proto1.UnmarshalText(data, msg); err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Proto %#v", msg, p)
	}
}

func TestNilProtoCompactText(t *testing2.T) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedNil(popr)
	data := code_google_com_p_gogoprotobuf_proto1.CompactTextString(p)
	msg := &Nil{}
	if err := code_google_com_p_gogoprotobuf_proto1.UnmarshalText(data, msg); err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Proto %#v", msg, p)
	}
}

func BenchmarkNilProtoTextMarshal(b *testing2.B) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedNil(popr)
	data := code_google_com_p_gogoprotobuf_proto1.MarshalTextString(p)
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		code_google_com_p_gogoprotobuf_proto1.MarshalTextString(p)
	}
}

func BenchmarkNilProtoCompactTextMarshal(b *testing2.B) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedNil(popr)
	data := code_google_com_p_gogoprotobuf_proto1.CompactTextString(p)
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		code_google_com_p_gogoprotobuf_proto1.CompactTextString(p)
	}
}

func BenchmarkNilProtoTextUnmarshal(b *testing2.B) {
	popr := math_rand2.New(math_rand2.NewSource(time2.Now().UnixNano()))
	p := NewPopulatedNil(popr)
	data := code_google_com_p_gogoprotobuf_proto1.MarshalTextString(p)
	msg := &Nil{}
	if err := code_google_com_p_gogoprotobuf_proto1.UnmarshalText(data, msg); err != nil {
		panic(err)
	}
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		msg.Reset()
		if err := code_google_com_p_gogoprotobuf_proto1.UnmarshalText(data, msg); err != nil {
			panic(fmt.Sprintf("%v given %v", err, data))
		}
	}
}

func TestNinOptNativeUnionUnion(t *testing3.T) {
	popr := math_rand3.New(math_rand3.NewSource(time3.Now().UnixNano()))
	p := NewPopulatedNinOptNativeUnion(popr)
	v := p.GetValue()
	msg := &NinOptNativeUnion{}
	if !msg.SetValue(v) {
		t.Fatalf("Union: Could not set Value")
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Union Equal %#v", msg, p)
	}
}
func TestNinOptStructUnionUnion(t *testing3.T) {
	popr := math_rand3.New(math_rand3.NewSource(time3.Now().UnixNano()))
	p := NewPopulatedNinOptStructUnion(popr)
	v := p.GetValue()
	msg := &NinOptStructUnion{}
	if !msg.SetValue(v) {
		t.Fatalf("Union: Could not set Value")
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Union Equal %#v", msg, p)
	}
}
func TestNinEmbeddedStructUnionUnion(t *testing3.T) {
	popr := math_rand3.New(math_rand3.NewSource(time3.Now().UnixNano()))
	p := NewPopulatedNinEmbeddedStructUnion(popr)
	v := p.GetValue()
	msg := &NinEmbeddedStructUnion{}
	if !msg.SetValue(v) {
		t.Fatalf("Union: Could not set Value")
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Union Equal %#v", msg, p)
	}
}
func TestNinNestedStructUnionUnion(t *testing3.T) {
	popr := math_rand3.New(math_rand3.NewSource(time3.Now().UnixNano()))
	p := NewPopulatedNinNestedStructUnion(popr)
	v := p.GetValue()
	msg := &NinNestedStructUnion{}
	if !msg.SetValue(v) {
		t.Fatalf("Union: Could not set Value")
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Union Equal %#v", msg, p)
	}
}
func TestTreeUnion(t *testing3.T) {
	popr := math_rand3.New(math_rand3.NewSource(time3.Now().UnixNano()))
	p := NewPopulatedTree(popr)
	v := p.GetValue()
	msg := &Tree{}
	if !msg.SetValue(v) {
		t.Fatalf("Union: Could not set Value")
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Union Equal %#v", msg, p)
	}
}
func TestDeepTreeUnion(t *testing3.T) {
	popr := math_rand3.New(math_rand3.NewSource(time3.Now().UnixNano()))
	p := NewPopulatedDeepTree(popr)
	v := p.GetValue()
	msg := &DeepTree{}
	if !msg.SetValue(v) {
		t.Fatalf("Union: Could not set Value")
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Union Equal %#v", msg, p)
	}
}
func TestNidOptNativeStringGen(t *testing4.T) {
	popr := math_rand4.New(math_rand4.NewSource(time4.Now().UnixNano()))
	p := NewPopulatedNidOptNative(popr)
	s1 := p.String()
	s2 := fmt1.Sprintf("%v", p)
	if s1 != s2 {
		t.Fatalf("String want %v got %v", s1, s2)
	}
}
func BenchmarkNidOptNativeStringGen(b *testing4.B) {
	popr := math_rand4.New(math_rand4.NewSource(time4.Now().UnixNano()))
	p := NewPopulatedNidOptNative(popr)
	data := p.String()
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		p.String()
	}
}

func TestNinOptNativeStringGen(t *testing4.T) {
	popr := math_rand4.New(math_rand4.NewSource(time4.Now().UnixNano()))
	p := NewPopulatedNinOptNative(popr)
	s1 := p.String()
	s2 := fmt1.Sprintf("%v", p)
	if s1 != s2 {
		t.Fatalf("String want %v got %v", s1, s2)
	}
}
func BenchmarkNinOptNativeStringGen(b *testing4.B) {
	popr := math_rand4.New(math_rand4.NewSource(time4.Now().UnixNano()))
	p := NewPopulatedNinOptNative(popr)
	data := p.String()
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		p.String()
	}
}

func TestNidRepNativeStringGen(t *testing4.T) {
	popr := math_rand4.New(math_rand4.NewSource(time4.Now().UnixNano()))
	p := NewPopulatedNidRepNative(popr)
	s1 := p.String()
	s2 := fmt1.Sprintf("%v", p)
	if s1 != s2 {
		t.Fatalf("String want %v got %v", s1, s2)
	}
}
func BenchmarkNidRepNativeStringGen(b *testing4.B) {
	popr := math_rand4.New(math_rand4.NewSource(time4.Now().UnixNano()))
	p := NewPopulatedNidRepNative(popr)
	data := p.String()
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		p.String()
	}
}

func TestNinRepNativeStringGen(t *testing4.T) {
	popr := math_rand4.New(math_rand4.NewSource(time4.Now().UnixNano()))
	p := NewPopulatedNinRepNative(popr)
	s1 := p.String()
	s2 := fmt1.Sprintf("%v", p)
	if s1 != s2 {
		t.Fatalf("String want %v got %v", s1, s2)
	}
}
func BenchmarkNinRepNativeStringGen(b *testing4.B) {
	popr := math_rand4.New(math_rand4.NewSource(time4.Now().UnixNano()))
	p := NewPopulatedNinRepNative(popr)
	data := p.String()
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		p.String()
	}
}

func TestNidRepPackedNativeStringGen(t *testing4.T) {
	popr := math_rand4.New(math_rand4.NewSource(time4.Now().UnixNano()))
	p := NewPopulatedNidRepPackedNative(popr)
	s1 := p.String()
	s2 := fmt1.Sprintf("%v", p)
	if s1 != s2 {
		t.Fatalf("String want %v got %v", s1, s2)
	}
}
func BenchmarkNidRepPackedNativeStringGen(b *testing4.B) {
	popr := math_rand4.New(math_rand4.NewSource(time4.Now().UnixNano()))
	p := NewPopulatedNidRepPackedNative(popr)
	data := p.String()
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		p.String()
	}
}

func TestNinRepPackedNativeStringGen(t *testing4.T) {
	popr := math_rand4.New(math_rand4.NewSource(time4.Now().UnixNano()))
	p := NewPopulatedNinRepPackedNative(popr)
	s1 := p.String()
	s2 := fmt1.Sprintf("%v", p)
	if s1 != s2 {
		t.Fatalf("String want %v got %v", s1, s2)
	}
}
func BenchmarkNinRepPackedNativeStringGen(b *testing4.B) {
	popr := math_rand4.New(math_rand4.NewSource(time4.Now().UnixNano()))
	p := NewPopulatedNinRepPackedNative(popr)
	data := p.String()
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		p.String()
	}
}

func TestNidOptStructStringGen(t *testing4.T) {
	popr := math_rand4.New(math_rand4.NewSource(time4.Now().UnixNano()))
	p := NewPopulatedNidOptStruct(popr)
	s1 := p.String()
	s2 := fmt1.Sprintf("%v", p)
	if s1 != s2 {
		t.Fatalf("String want %v got %v", s1, s2)
	}
}
func BenchmarkNidOptStructStringGen(b *testing4.B) {
	popr := math_rand4.New(math_rand4.NewSource(time4.Now().UnixNano()))
	p := NewPopulatedNidOptStruct(popr)
	data := p.String()
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		p.String()
	}
}

func TestNinOptStructStringGen(t *testing4.T) {
	popr := math_rand4.New(math_rand4.NewSource(time4.Now().UnixNano()))
	p := NewPopulatedNinOptStruct(popr)
	s1 := p.String()
	s2 := fmt1.Sprintf("%v", p)
	if s1 != s2 {
		t.Fatalf("String want %v got %v", s1, s2)
	}
}
func BenchmarkNinOptStructStringGen(b *testing4.B) {
	popr := math_rand4.New(math_rand4.NewSource(time4.Now().UnixNano()))
	p := NewPopulatedNinOptStruct(popr)
	data := p.String()
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		p.String()
	}
}

func TestNidRepStructStringGen(t *testing4.T) {
	popr := math_rand4.New(math_rand4.NewSource(time4.Now().UnixNano()))
	p := NewPopulatedNidRepStruct(popr)
	s1 := p.String()
	s2 := fmt1.Sprintf("%v", p)
	if s1 != s2 {
		t.Fatalf("String want %v got %v", s1, s2)
	}
}
func BenchmarkNidRepStructStringGen(b *testing4.B) {
	popr := math_rand4.New(math_rand4.NewSource(time4.Now().UnixNano()))
	p := NewPopulatedNidRepStruct(popr)
	data := p.String()
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		p.String()
	}
}

func TestNinRepStructStringGen(t *testing4.T) {
	popr := math_rand4.New(math_rand4.NewSource(time4.Now().UnixNano()))
	p := NewPopulatedNinRepStruct(popr)
	s1 := p.String()
	s2 := fmt1.Sprintf("%v", p)
	if s1 != s2 {
		t.Fatalf("String want %v got %v", s1, s2)
	}
}
func BenchmarkNinRepStructStringGen(b *testing4.B) {
	popr := math_rand4.New(math_rand4.NewSource(time4.Now().UnixNano()))
	p := NewPopulatedNinRepStruct(popr)
	data := p.String()
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		p.String()
	}
}

func TestNidEmbeddedStructStringGen(t *testing4.T) {
	popr := math_rand4.New(math_rand4.NewSource(time4.Now().UnixNano()))
	p := NewPopulatedNidEmbeddedStruct(popr)
	s1 := p.String()
	s2 := fmt1.Sprintf("%v", p)
	if s1 != s2 {
		t.Fatalf("String want %v got %v", s1, s2)
	}
}
func BenchmarkNidEmbeddedStructStringGen(b *testing4.B) {
	popr := math_rand4.New(math_rand4.NewSource(time4.Now().UnixNano()))
	p := NewPopulatedNidEmbeddedStruct(popr)
	data := p.String()
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		p.String()
	}
}

func TestNinEmbeddedStructStringGen(t *testing4.T) {
	popr := math_rand4.New(math_rand4.NewSource(time4.Now().UnixNano()))
	p := NewPopulatedNinEmbeddedStruct(popr)
	s1 := p.String()
	s2 := fmt1.Sprintf("%v", p)
	if s1 != s2 {
		t.Fatalf("String want %v got %v", s1, s2)
	}
}
func BenchmarkNinEmbeddedStructStringGen(b *testing4.B) {
	popr := math_rand4.New(math_rand4.NewSource(time4.Now().UnixNano()))
	p := NewPopulatedNinEmbeddedStruct(popr)
	data := p.String()
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		p.String()
	}
}

func TestNidNestedStructStringGen(t *testing4.T) {
	popr := math_rand4.New(math_rand4.NewSource(time4.Now().UnixNano()))
	p := NewPopulatedNidNestedStruct(popr)
	s1 := p.String()
	s2 := fmt1.Sprintf("%v", p)
	if s1 != s2 {
		t.Fatalf("String want %v got %v", s1, s2)
	}
}
func BenchmarkNidNestedStructStringGen(b *testing4.B) {
	popr := math_rand4.New(math_rand4.NewSource(time4.Now().UnixNano()))
	p := NewPopulatedNidNestedStruct(popr)
	data := p.String()
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		p.String()
	}
}

func TestNinNestedStructStringGen(t *testing4.T) {
	popr := math_rand4.New(math_rand4.NewSource(time4.Now().UnixNano()))
	p := NewPopulatedNinNestedStruct(popr)
	s1 := p.String()
	s2 := fmt1.Sprintf("%v", p)
	if s1 != s2 {
		t.Fatalf("String want %v got %v", s1, s2)
	}
}
func BenchmarkNinNestedStructStringGen(b *testing4.B) {
	popr := math_rand4.New(math_rand4.NewSource(time4.Now().UnixNano()))
	p := NewPopulatedNinNestedStruct(popr)
	data := p.String()
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		p.String()
	}
}

func TestNidOptCustomStringGen(t *testing4.T) {
	popr := math_rand4.New(math_rand4.NewSource(time4.Now().UnixNano()))
	p := NewPopulatedNidOptCustom(popr)
	s1 := p.String()
	s2 := fmt1.Sprintf("%v", p)
	if s1 != s2 {
		t.Fatalf("String want %v got %v", s1, s2)
	}
}
func BenchmarkNidOptCustomStringGen(b *testing4.B) {
	popr := math_rand4.New(math_rand4.NewSource(time4.Now().UnixNano()))
	p := NewPopulatedNidOptCustom(popr)
	data := p.String()
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		p.String()
	}
}

func TestNinOptCustomStringGen(t *testing4.T) {
	popr := math_rand4.New(math_rand4.NewSource(time4.Now().UnixNano()))
	p := NewPopulatedNinOptCustom(popr)
	s1 := p.String()
	s2 := fmt1.Sprintf("%v", p)
	if s1 != s2 {
		t.Fatalf("String want %v got %v", s1, s2)
	}
}
func BenchmarkNinOptCustomStringGen(b *testing4.B) {
	popr := math_rand4.New(math_rand4.NewSource(time4.Now().UnixNano()))
	p := NewPopulatedNinOptCustom(popr)
	data := p.String()
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		p.String()
	}
}

func TestNidRepCustomStringGen(t *testing4.T) {
	popr := math_rand4.New(math_rand4.NewSource(time4.Now().UnixNano()))
	p := NewPopulatedNidRepCustom(popr)
	s1 := p.String()
	s2 := fmt1.Sprintf("%v", p)
	if s1 != s2 {
		t.Fatalf("String want %v got %v", s1, s2)
	}
}
func BenchmarkNidRepCustomStringGen(b *testing4.B) {
	popr := math_rand4.New(math_rand4.NewSource(time4.Now().UnixNano()))
	p := NewPopulatedNidRepCustom(popr)
	data := p.String()
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		p.String()
	}
}

func TestNinRepCustomStringGen(t *testing4.T) {
	popr := math_rand4.New(math_rand4.NewSource(time4.Now().UnixNano()))
	p := NewPopulatedNinRepCustom(popr)
	s1 := p.String()
	s2 := fmt1.Sprintf("%v", p)
	if s1 != s2 {
		t.Fatalf("String want %v got %v", s1, s2)
	}
}
func BenchmarkNinRepCustomStringGen(b *testing4.B) {
	popr := math_rand4.New(math_rand4.NewSource(time4.Now().UnixNano()))
	p := NewPopulatedNinRepCustom(popr)
	data := p.String()
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		p.String()
	}
}

func TestNinOptNativeUnionStringGen(t *testing4.T) {
	popr := math_rand4.New(math_rand4.NewSource(time4.Now().UnixNano()))
	p := NewPopulatedNinOptNativeUnion(popr)
	s1 := p.String()
	s2 := fmt1.Sprintf("%v", p)
	if s1 != s2 {
		t.Fatalf("String want %v got %v", s1, s2)
	}
}
func BenchmarkNinOptNativeUnionStringGen(b *testing4.B) {
	popr := math_rand4.New(math_rand4.NewSource(time4.Now().UnixNano()))
	p := NewPopulatedNinOptNativeUnion(popr)
	data := p.String()
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		p.String()
	}
}

func TestNinOptStructUnionStringGen(t *testing4.T) {
	popr := math_rand4.New(math_rand4.NewSource(time4.Now().UnixNano()))
	p := NewPopulatedNinOptStructUnion(popr)
	s1 := p.String()
	s2 := fmt1.Sprintf("%v", p)
	if s1 != s2 {
		t.Fatalf("String want %v got %v", s1, s2)
	}
}
func BenchmarkNinOptStructUnionStringGen(b *testing4.B) {
	popr := math_rand4.New(math_rand4.NewSource(time4.Now().UnixNano()))
	p := NewPopulatedNinOptStructUnion(popr)
	data := p.String()
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		p.String()
	}
}

func TestNinEmbeddedStructUnionStringGen(t *testing4.T) {
	popr := math_rand4.New(math_rand4.NewSource(time4.Now().UnixNano()))
	p := NewPopulatedNinEmbeddedStructUnion(popr)
	s1 := p.String()
	s2 := fmt1.Sprintf("%v", p)
	if s1 != s2 {
		t.Fatalf("String want %v got %v", s1, s2)
	}
}
func BenchmarkNinEmbeddedStructUnionStringGen(b *testing4.B) {
	popr := math_rand4.New(math_rand4.NewSource(time4.Now().UnixNano()))
	p := NewPopulatedNinEmbeddedStructUnion(popr)
	data := p.String()
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		p.String()
	}
}

func TestNinNestedStructUnionStringGen(t *testing4.T) {
	popr := math_rand4.New(math_rand4.NewSource(time4.Now().UnixNano()))
	p := NewPopulatedNinNestedStructUnion(popr)
	s1 := p.String()
	s2 := fmt1.Sprintf("%v", p)
	if s1 != s2 {
		t.Fatalf("String want %v got %v", s1, s2)
	}
}
func BenchmarkNinNestedStructUnionStringGen(b *testing4.B) {
	popr := math_rand4.New(math_rand4.NewSource(time4.Now().UnixNano()))
	p := NewPopulatedNinNestedStructUnion(popr)
	data := p.String()
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		p.String()
	}
}

func TestTreeStringGen(t *testing4.T) {
	popr := math_rand4.New(math_rand4.NewSource(time4.Now().UnixNano()))
	p := NewPopulatedTree(popr)
	s1 := p.String()
	s2 := fmt1.Sprintf("%v", p)
	if s1 != s2 {
		t.Fatalf("String want %v got %v", s1, s2)
	}
}
func BenchmarkTreeStringGen(b *testing4.B) {
	popr := math_rand4.New(math_rand4.NewSource(time4.Now().UnixNano()))
	p := NewPopulatedTree(popr)
	data := p.String()
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		p.String()
	}
}

func TestOrBranchStringGen(t *testing4.T) {
	popr := math_rand4.New(math_rand4.NewSource(time4.Now().UnixNano()))
	p := NewPopulatedOrBranch(popr)
	s1 := p.String()
	s2 := fmt1.Sprintf("%v", p)
	if s1 != s2 {
		t.Fatalf("String want %v got %v", s1, s2)
	}
}
func BenchmarkOrBranchStringGen(b *testing4.B) {
	popr := math_rand4.New(math_rand4.NewSource(time4.Now().UnixNano()))
	p := NewPopulatedOrBranch(popr)
	data := p.String()
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		p.String()
	}
}

func TestAndBranchStringGen(t *testing4.T) {
	popr := math_rand4.New(math_rand4.NewSource(time4.Now().UnixNano()))
	p := NewPopulatedAndBranch(popr)
	s1 := p.String()
	s2 := fmt1.Sprintf("%v", p)
	if s1 != s2 {
		t.Fatalf("String want %v got %v", s1, s2)
	}
}
func BenchmarkAndBranchStringGen(b *testing4.B) {
	popr := math_rand4.New(math_rand4.NewSource(time4.Now().UnixNano()))
	p := NewPopulatedAndBranch(popr)
	data := p.String()
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		p.String()
	}
}

func TestLeafStringGen(t *testing4.T) {
	popr := math_rand4.New(math_rand4.NewSource(time4.Now().UnixNano()))
	p := NewPopulatedLeaf(popr)
	s1 := p.String()
	s2 := fmt1.Sprintf("%v", p)
	if s1 != s2 {
		t.Fatalf("String want %v got %v", s1, s2)
	}
}
func BenchmarkLeafStringGen(b *testing4.B) {
	popr := math_rand4.New(math_rand4.NewSource(time4.Now().UnixNano()))
	p := NewPopulatedLeaf(popr)
	data := p.String()
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		p.String()
	}
}

func TestDeepTreeStringGen(t *testing4.T) {
	popr := math_rand4.New(math_rand4.NewSource(time4.Now().UnixNano()))
	p := NewPopulatedDeepTree(popr)
	s1 := p.String()
	s2 := fmt1.Sprintf("%v", p)
	if s1 != s2 {
		t.Fatalf("String want %v got %v", s1, s2)
	}
}
func BenchmarkDeepTreeStringGen(b *testing4.B) {
	popr := math_rand4.New(math_rand4.NewSource(time4.Now().UnixNano()))
	p := NewPopulatedDeepTree(popr)
	data := p.String()
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		p.String()
	}
}

func TestADeepBranchStringGen(t *testing4.T) {
	popr := math_rand4.New(math_rand4.NewSource(time4.Now().UnixNano()))
	p := NewPopulatedADeepBranch(popr)
	s1 := p.String()
	s2 := fmt1.Sprintf("%v", p)
	if s1 != s2 {
		t.Fatalf("String want %v got %v", s1, s2)
	}
}
func BenchmarkADeepBranchStringGen(b *testing4.B) {
	popr := math_rand4.New(math_rand4.NewSource(time4.Now().UnixNano()))
	p := NewPopulatedADeepBranch(popr)
	data := p.String()
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		p.String()
	}
}

func TestAndDeepBranchStringGen(t *testing4.T) {
	popr := math_rand4.New(math_rand4.NewSource(time4.Now().UnixNano()))
	p := NewPopulatedAndDeepBranch(popr)
	s1 := p.String()
	s2 := fmt1.Sprintf("%v", p)
	if s1 != s2 {
		t.Fatalf("String want %v got %v", s1, s2)
	}
}
func BenchmarkAndDeepBranchStringGen(b *testing4.B) {
	popr := math_rand4.New(math_rand4.NewSource(time4.Now().UnixNano()))
	p := NewPopulatedAndDeepBranch(popr)
	data := p.String()
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		p.String()
	}
}

func TestDeepLeafStringGen(t *testing4.T) {
	popr := math_rand4.New(math_rand4.NewSource(time4.Now().UnixNano()))
	p := NewPopulatedDeepLeaf(popr)
	s1 := p.String()
	s2 := fmt1.Sprintf("%v", p)
	if s1 != s2 {
		t.Fatalf("String want %v got %v", s1, s2)
	}
}
func BenchmarkDeepLeafStringGen(b *testing4.B) {
	popr := math_rand4.New(math_rand4.NewSource(time4.Now().UnixNano()))
	p := NewPopulatedDeepLeaf(popr)
	data := p.String()
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		p.String()
	}
}

func TestNilStringGen(t *testing4.T) {
	popr := math_rand4.New(math_rand4.NewSource(time4.Now().UnixNano()))
	p := NewPopulatedNil(popr)
	s1 := p.String()
	s2 := fmt1.Sprintf("%v", p)
	if s1 != s2 {
		t.Fatalf("String want %v got %v", s1, s2)
	}
}
func BenchmarkNilStringGen(b *testing4.B) {
	popr := math_rand4.New(math_rand4.NewSource(time4.Now().UnixNano()))
	p := NewPopulatedNil(popr)
	data := p.String()
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		p.String()
	}
}

func BenchmarkNidOptNativePopulate(b *testing5.B) {
	popr := math_rand5.New(math_rand5.NewSource(time5.Now().UnixNano()))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		NewPopulatedNidOptNative(popr)
	}
}

func BenchmarkNinOptNativePopulate(b *testing5.B) {
	popr := math_rand5.New(math_rand5.NewSource(time5.Now().UnixNano()))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		NewPopulatedNinOptNative(popr)
	}
}

func BenchmarkNidRepNativePopulate(b *testing5.B) {
	popr := math_rand5.New(math_rand5.NewSource(time5.Now().UnixNano()))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		NewPopulatedNidRepNative(popr)
	}
}

func BenchmarkNinRepNativePopulate(b *testing5.B) {
	popr := math_rand5.New(math_rand5.NewSource(time5.Now().UnixNano()))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		NewPopulatedNinRepNative(popr)
	}
}

func BenchmarkNidRepPackedNativePopulate(b *testing5.B) {
	popr := math_rand5.New(math_rand5.NewSource(time5.Now().UnixNano()))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		NewPopulatedNidRepPackedNative(popr)
	}
}

func BenchmarkNinRepPackedNativePopulate(b *testing5.B) {
	popr := math_rand5.New(math_rand5.NewSource(time5.Now().UnixNano()))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		NewPopulatedNinRepPackedNative(popr)
	}
}

func BenchmarkNidOptStructPopulate(b *testing5.B) {
	popr := math_rand5.New(math_rand5.NewSource(time5.Now().UnixNano()))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		NewPopulatedNidOptStruct(popr)
	}
}

func BenchmarkNinOptStructPopulate(b *testing5.B) {
	popr := math_rand5.New(math_rand5.NewSource(time5.Now().UnixNano()))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		NewPopulatedNinOptStruct(popr)
	}
}

func BenchmarkNidRepStructPopulate(b *testing5.B) {
	popr := math_rand5.New(math_rand5.NewSource(time5.Now().UnixNano()))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		NewPopulatedNidRepStruct(popr)
	}
}

func BenchmarkNinRepStructPopulate(b *testing5.B) {
	popr := math_rand5.New(math_rand5.NewSource(time5.Now().UnixNano()))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		NewPopulatedNinRepStruct(popr)
	}
}

func BenchmarkNidEmbeddedStructPopulate(b *testing5.B) {
	popr := math_rand5.New(math_rand5.NewSource(time5.Now().UnixNano()))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		NewPopulatedNidEmbeddedStruct(popr)
	}
}

func BenchmarkNinEmbeddedStructPopulate(b *testing5.B) {
	popr := math_rand5.New(math_rand5.NewSource(time5.Now().UnixNano()))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		NewPopulatedNinEmbeddedStruct(popr)
	}
}

func BenchmarkNidNestedStructPopulate(b *testing5.B) {
	popr := math_rand5.New(math_rand5.NewSource(time5.Now().UnixNano()))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		NewPopulatedNidNestedStruct(popr)
	}
}

func BenchmarkNinNestedStructPopulate(b *testing5.B) {
	popr := math_rand5.New(math_rand5.NewSource(time5.Now().UnixNano()))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		NewPopulatedNinNestedStruct(popr)
	}
}

func BenchmarkNidOptCustomPopulate(b *testing5.B) {
	popr := math_rand5.New(math_rand5.NewSource(time5.Now().UnixNano()))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		NewPopulatedNidOptCustom(popr)
	}
}

func BenchmarkNinOptCustomPopulate(b *testing5.B) {
	popr := math_rand5.New(math_rand5.NewSource(time5.Now().UnixNano()))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		NewPopulatedNinOptCustom(popr)
	}
}

func BenchmarkNidRepCustomPopulate(b *testing5.B) {
	popr := math_rand5.New(math_rand5.NewSource(time5.Now().UnixNano()))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		NewPopulatedNidRepCustom(popr)
	}
}

func BenchmarkNinRepCustomPopulate(b *testing5.B) {
	popr := math_rand5.New(math_rand5.NewSource(time5.Now().UnixNano()))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		NewPopulatedNinRepCustom(popr)
	}
}

func BenchmarkNinOptNativeUnionPopulate(b *testing5.B) {
	popr := math_rand5.New(math_rand5.NewSource(time5.Now().UnixNano()))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		NewPopulatedNinOptNativeUnion(popr)
	}
}

func BenchmarkNinOptStructUnionPopulate(b *testing5.B) {
	popr := math_rand5.New(math_rand5.NewSource(time5.Now().UnixNano()))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		NewPopulatedNinOptStructUnion(popr)
	}
}

func BenchmarkNinEmbeddedStructUnionPopulate(b *testing5.B) {
	popr := math_rand5.New(math_rand5.NewSource(time5.Now().UnixNano()))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		NewPopulatedNinEmbeddedStructUnion(popr)
	}
}

func BenchmarkNinNestedStructUnionPopulate(b *testing5.B) {
	popr := math_rand5.New(math_rand5.NewSource(time5.Now().UnixNano()))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		NewPopulatedNinNestedStructUnion(popr)
	}
}

func BenchmarkTreePopulate(b *testing5.B) {
	popr := math_rand5.New(math_rand5.NewSource(time5.Now().UnixNano()))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		NewPopulatedTree(popr)
	}
}

func BenchmarkOrBranchPopulate(b *testing5.B) {
	popr := math_rand5.New(math_rand5.NewSource(time5.Now().UnixNano()))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		NewPopulatedOrBranch(popr)
	}
}

func BenchmarkAndBranchPopulate(b *testing5.B) {
	popr := math_rand5.New(math_rand5.NewSource(time5.Now().UnixNano()))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		NewPopulatedAndBranch(popr)
	}
}

func BenchmarkLeafPopulate(b *testing5.B) {
	popr := math_rand5.New(math_rand5.NewSource(time5.Now().UnixNano()))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		NewPopulatedLeaf(popr)
	}
}

func BenchmarkDeepTreePopulate(b *testing5.B) {
	popr := math_rand5.New(math_rand5.NewSource(time5.Now().UnixNano()))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		NewPopulatedDeepTree(popr)
	}
}

func BenchmarkADeepBranchPopulate(b *testing5.B) {
	popr := math_rand5.New(math_rand5.NewSource(time5.Now().UnixNano()))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		NewPopulatedADeepBranch(popr)
	}
}

func BenchmarkAndDeepBranchPopulate(b *testing5.B) {
	popr := math_rand5.New(math_rand5.NewSource(time5.Now().UnixNano()))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		NewPopulatedAndDeepBranch(popr)
	}
}

func BenchmarkDeepLeafPopulate(b *testing5.B) {
	popr := math_rand5.New(math_rand5.NewSource(time5.Now().UnixNano()))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		NewPopulatedDeepLeaf(popr)
	}
}

func BenchmarkNilPopulate(b *testing5.B) {
	popr := math_rand5.New(math_rand5.NewSource(time5.Now().UnixNano()))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		NewPopulatedNil(popr)
	}
}

func TestNidOptNativeGoString(t *testing6.T) {
	popr := math_rand6.New(math_rand6.NewSource(time6.Now().UnixNano()))
	p := NewPopulatedNidOptNative(popr)
	s1 := p.GoString()
	s2 := fmt2.Sprintf("%#v", p)
	if s1 != s2 {
		t.Fatalf("GoString want %v got %v", s1, s2)
	}
	_, err := go_parser.ParseExpr(s1)
	if err != nil {
		panic(err)
	}
}
func BenchmarkNidOptNativeGoString(b *testing6.B) {
	popr := math_rand6.New(math_rand6.NewSource(time6.Now().UnixNano()))
	p := NewPopulatedNidOptNative(popr)
	data := p.GoString()
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		p.GoString()
	}
}

func TestNinOptNativeGoString(t *testing6.T) {
	popr := math_rand6.New(math_rand6.NewSource(time6.Now().UnixNano()))
	p := NewPopulatedNinOptNative(popr)
	s1 := p.GoString()
	s2 := fmt2.Sprintf("%#v", p)
	if s1 != s2 {
		t.Fatalf("GoString want %v got %v", s1, s2)
	}
	_, err := go_parser.ParseExpr(s1)
	if err != nil {
		panic(err)
	}
}
func BenchmarkNinOptNativeGoString(b *testing6.B) {
	popr := math_rand6.New(math_rand6.NewSource(time6.Now().UnixNano()))
	p := NewPopulatedNinOptNative(popr)
	data := p.GoString()
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		p.GoString()
	}
}

func TestNidRepNativeGoString(t *testing6.T) {
	popr := math_rand6.New(math_rand6.NewSource(time6.Now().UnixNano()))
	p := NewPopulatedNidRepNative(popr)
	s1 := p.GoString()
	s2 := fmt2.Sprintf("%#v", p)
	if s1 != s2 {
		t.Fatalf("GoString want %v got %v", s1, s2)
	}
	_, err := go_parser.ParseExpr(s1)
	if err != nil {
		panic(err)
	}
}
func BenchmarkNidRepNativeGoString(b *testing6.B) {
	popr := math_rand6.New(math_rand6.NewSource(time6.Now().UnixNano()))
	p := NewPopulatedNidRepNative(popr)
	data := p.GoString()
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		p.GoString()
	}
}

func TestNinRepNativeGoString(t *testing6.T) {
	popr := math_rand6.New(math_rand6.NewSource(time6.Now().UnixNano()))
	p := NewPopulatedNinRepNative(popr)
	s1 := p.GoString()
	s2 := fmt2.Sprintf("%#v", p)
	if s1 != s2 {
		t.Fatalf("GoString want %v got %v", s1, s2)
	}
	_, err := go_parser.ParseExpr(s1)
	if err != nil {
		panic(err)
	}
}
func BenchmarkNinRepNativeGoString(b *testing6.B) {
	popr := math_rand6.New(math_rand6.NewSource(time6.Now().UnixNano()))
	p := NewPopulatedNinRepNative(popr)
	data := p.GoString()
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		p.GoString()
	}
}

func TestNidRepPackedNativeGoString(t *testing6.T) {
	popr := math_rand6.New(math_rand6.NewSource(time6.Now().UnixNano()))
	p := NewPopulatedNidRepPackedNative(popr)
	s1 := p.GoString()
	s2 := fmt2.Sprintf("%#v", p)
	if s1 != s2 {
		t.Fatalf("GoString want %v got %v", s1, s2)
	}
	_, err := go_parser.ParseExpr(s1)
	if err != nil {
		panic(err)
	}
}
func BenchmarkNidRepPackedNativeGoString(b *testing6.B) {
	popr := math_rand6.New(math_rand6.NewSource(time6.Now().UnixNano()))
	p := NewPopulatedNidRepPackedNative(popr)
	data := p.GoString()
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		p.GoString()
	}
}

func TestNinRepPackedNativeGoString(t *testing6.T) {
	popr := math_rand6.New(math_rand6.NewSource(time6.Now().UnixNano()))
	p := NewPopulatedNinRepPackedNative(popr)
	s1 := p.GoString()
	s2 := fmt2.Sprintf("%#v", p)
	if s1 != s2 {
		t.Fatalf("GoString want %v got %v", s1, s2)
	}
	_, err := go_parser.ParseExpr(s1)
	if err != nil {
		panic(err)
	}
}
func BenchmarkNinRepPackedNativeGoString(b *testing6.B) {
	popr := math_rand6.New(math_rand6.NewSource(time6.Now().UnixNano()))
	p := NewPopulatedNinRepPackedNative(popr)
	data := p.GoString()
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		p.GoString()
	}
}

func TestNidOptStructGoString(t *testing6.T) {
	popr := math_rand6.New(math_rand6.NewSource(time6.Now().UnixNano()))
	p := NewPopulatedNidOptStruct(popr)
	s1 := p.GoString()
	s2 := fmt2.Sprintf("%#v", p)
	if s1 != s2 {
		t.Fatalf("GoString want %v got %v", s1, s2)
	}
	_, err := go_parser.ParseExpr(s1)
	if err != nil {
		panic(err)
	}
}
func BenchmarkNidOptStructGoString(b *testing6.B) {
	popr := math_rand6.New(math_rand6.NewSource(time6.Now().UnixNano()))
	p := NewPopulatedNidOptStruct(popr)
	data := p.GoString()
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		p.GoString()
	}
}

func TestNinOptStructGoString(t *testing6.T) {
	popr := math_rand6.New(math_rand6.NewSource(time6.Now().UnixNano()))
	p := NewPopulatedNinOptStruct(popr)
	s1 := p.GoString()
	s2 := fmt2.Sprintf("%#v", p)
	if s1 != s2 {
		t.Fatalf("GoString want %v got %v", s1, s2)
	}
	_, err := go_parser.ParseExpr(s1)
	if err != nil {
		panic(err)
	}
}
func BenchmarkNinOptStructGoString(b *testing6.B) {
	popr := math_rand6.New(math_rand6.NewSource(time6.Now().UnixNano()))
	p := NewPopulatedNinOptStruct(popr)
	data := p.GoString()
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		p.GoString()
	}
}

func TestNidRepStructGoString(t *testing6.T) {
	popr := math_rand6.New(math_rand6.NewSource(time6.Now().UnixNano()))
	p := NewPopulatedNidRepStruct(popr)
	s1 := p.GoString()
	s2 := fmt2.Sprintf("%#v", p)
	if s1 != s2 {
		t.Fatalf("GoString want %v got %v", s1, s2)
	}
	_, err := go_parser.ParseExpr(s1)
	if err != nil {
		panic(err)
	}
}
func BenchmarkNidRepStructGoString(b *testing6.B) {
	popr := math_rand6.New(math_rand6.NewSource(time6.Now().UnixNano()))
	p := NewPopulatedNidRepStruct(popr)
	data := p.GoString()
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		p.GoString()
	}
}

func TestNinRepStructGoString(t *testing6.T) {
	popr := math_rand6.New(math_rand6.NewSource(time6.Now().UnixNano()))
	p := NewPopulatedNinRepStruct(popr)
	s1 := p.GoString()
	s2 := fmt2.Sprintf("%#v", p)
	if s1 != s2 {
		t.Fatalf("GoString want %v got %v", s1, s2)
	}
	_, err := go_parser.ParseExpr(s1)
	if err != nil {
		panic(err)
	}
}
func BenchmarkNinRepStructGoString(b *testing6.B) {
	popr := math_rand6.New(math_rand6.NewSource(time6.Now().UnixNano()))
	p := NewPopulatedNinRepStruct(popr)
	data := p.GoString()
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		p.GoString()
	}
}

func TestNidEmbeddedStructGoString(t *testing6.T) {
	popr := math_rand6.New(math_rand6.NewSource(time6.Now().UnixNano()))
	p := NewPopulatedNidEmbeddedStruct(popr)
	s1 := p.GoString()
	s2 := fmt2.Sprintf("%#v", p)
	if s1 != s2 {
		t.Fatalf("GoString want %v got %v", s1, s2)
	}
	_, err := go_parser.ParseExpr(s1)
	if err != nil {
		panic(err)
	}
}
func BenchmarkNidEmbeddedStructGoString(b *testing6.B) {
	popr := math_rand6.New(math_rand6.NewSource(time6.Now().UnixNano()))
	p := NewPopulatedNidEmbeddedStruct(popr)
	data := p.GoString()
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		p.GoString()
	}
}

func TestNinEmbeddedStructGoString(t *testing6.T) {
	popr := math_rand6.New(math_rand6.NewSource(time6.Now().UnixNano()))
	p := NewPopulatedNinEmbeddedStruct(popr)
	s1 := p.GoString()
	s2 := fmt2.Sprintf("%#v", p)
	if s1 != s2 {
		t.Fatalf("GoString want %v got %v", s1, s2)
	}
	_, err := go_parser.ParseExpr(s1)
	if err != nil {
		panic(err)
	}
}
func BenchmarkNinEmbeddedStructGoString(b *testing6.B) {
	popr := math_rand6.New(math_rand6.NewSource(time6.Now().UnixNano()))
	p := NewPopulatedNinEmbeddedStruct(popr)
	data := p.GoString()
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		p.GoString()
	}
}

func TestNidNestedStructGoString(t *testing6.T) {
	popr := math_rand6.New(math_rand6.NewSource(time6.Now().UnixNano()))
	p := NewPopulatedNidNestedStruct(popr)
	s1 := p.GoString()
	s2 := fmt2.Sprintf("%#v", p)
	if s1 != s2 {
		t.Fatalf("GoString want %v got %v", s1, s2)
	}
	_, err := go_parser.ParseExpr(s1)
	if err != nil {
		panic(err)
	}
}
func BenchmarkNidNestedStructGoString(b *testing6.B) {
	popr := math_rand6.New(math_rand6.NewSource(time6.Now().UnixNano()))
	p := NewPopulatedNidNestedStruct(popr)
	data := p.GoString()
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		p.GoString()
	}
}

func TestNinNestedStructGoString(t *testing6.T) {
	popr := math_rand6.New(math_rand6.NewSource(time6.Now().UnixNano()))
	p := NewPopulatedNinNestedStruct(popr)
	s1 := p.GoString()
	s2 := fmt2.Sprintf("%#v", p)
	if s1 != s2 {
		t.Fatalf("GoString want %v got %v", s1, s2)
	}
	_, err := go_parser.ParseExpr(s1)
	if err != nil {
		panic(err)
	}
}
func BenchmarkNinNestedStructGoString(b *testing6.B) {
	popr := math_rand6.New(math_rand6.NewSource(time6.Now().UnixNano()))
	p := NewPopulatedNinNestedStruct(popr)
	data := p.GoString()
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		p.GoString()
	}
}

func TestNidOptCustomGoString(t *testing6.T) {
	popr := math_rand6.New(math_rand6.NewSource(time6.Now().UnixNano()))
	p := NewPopulatedNidOptCustom(popr)
	s1 := p.GoString()
	s2 := fmt2.Sprintf("%#v", p)
	if s1 != s2 {
		t.Fatalf("GoString want %v got %v", s1, s2)
	}
	_, err := go_parser.ParseExpr(s1)
	if err != nil {
		panic(err)
	}
}
func BenchmarkNidOptCustomGoString(b *testing6.B) {
	popr := math_rand6.New(math_rand6.NewSource(time6.Now().UnixNano()))
	p := NewPopulatedNidOptCustom(popr)
	data := p.GoString()
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		p.GoString()
	}
}

func TestNinOptCustomGoString(t *testing6.T) {
	popr := math_rand6.New(math_rand6.NewSource(time6.Now().UnixNano()))
	p := NewPopulatedNinOptCustom(popr)
	s1 := p.GoString()
	s2 := fmt2.Sprintf("%#v", p)
	if s1 != s2 {
		t.Fatalf("GoString want %v got %v", s1, s2)
	}
	_, err := go_parser.ParseExpr(s1)
	if err != nil {
		panic(err)
	}
}
func BenchmarkNinOptCustomGoString(b *testing6.B) {
	popr := math_rand6.New(math_rand6.NewSource(time6.Now().UnixNano()))
	p := NewPopulatedNinOptCustom(popr)
	data := p.GoString()
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		p.GoString()
	}
}

func TestNidRepCustomGoString(t *testing6.T) {
	popr := math_rand6.New(math_rand6.NewSource(time6.Now().UnixNano()))
	p := NewPopulatedNidRepCustom(popr)
	s1 := p.GoString()
	s2 := fmt2.Sprintf("%#v", p)
	if s1 != s2 {
		t.Fatalf("GoString want %v got %v", s1, s2)
	}
	_, err := go_parser.ParseExpr(s1)
	if err != nil {
		panic(err)
	}
}
func BenchmarkNidRepCustomGoString(b *testing6.B) {
	popr := math_rand6.New(math_rand6.NewSource(time6.Now().UnixNano()))
	p := NewPopulatedNidRepCustom(popr)
	data := p.GoString()
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		p.GoString()
	}
}

func TestNinRepCustomGoString(t *testing6.T) {
	popr := math_rand6.New(math_rand6.NewSource(time6.Now().UnixNano()))
	p := NewPopulatedNinRepCustom(popr)
	s1 := p.GoString()
	s2 := fmt2.Sprintf("%#v", p)
	if s1 != s2 {
		t.Fatalf("GoString want %v got %v", s1, s2)
	}
	_, err := go_parser.ParseExpr(s1)
	if err != nil {
		panic(err)
	}
}
func BenchmarkNinRepCustomGoString(b *testing6.B) {
	popr := math_rand6.New(math_rand6.NewSource(time6.Now().UnixNano()))
	p := NewPopulatedNinRepCustom(popr)
	data := p.GoString()
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		p.GoString()
	}
}

func TestNinOptNativeUnionGoString(t *testing6.T) {
	popr := math_rand6.New(math_rand6.NewSource(time6.Now().UnixNano()))
	p := NewPopulatedNinOptNativeUnion(popr)
	s1 := p.GoString()
	s2 := fmt2.Sprintf("%#v", p)
	if s1 != s2 {
		t.Fatalf("GoString want %v got %v", s1, s2)
	}
	_, err := go_parser.ParseExpr(s1)
	if err != nil {
		panic(err)
	}
}
func BenchmarkNinOptNativeUnionGoString(b *testing6.B) {
	popr := math_rand6.New(math_rand6.NewSource(time6.Now().UnixNano()))
	p := NewPopulatedNinOptNativeUnion(popr)
	data := p.GoString()
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		p.GoString()
	}
}

func TestNinOptStructUnionGoString(t *testing6.T) {
	popr := math_rand6.New(math_rand6.NewSource(time6.Now().UnixNano()))
	p := NewPopulatedNinOptStructUnion(popr)
	s1 := p.GoString()
	s2 := fmt2.Sprintf("%#v", p)
	if s1 != s2 {
		t.Fatalf("GoString want %v got %v", s1, s2)
	}
	_, err := go_parser.ParseExpr(s1)
	if err != nil {
		panic(err)
	}
}
func BenchmarkNinOptStructUnionGoString(b *testing6.B) {
	popr := math_rand6.New(math_rand6.NewSource(time6.Now().UnixNano()))
	p := NewPopulatedNinOptStructUnion(popr)
	data := p.GoString()
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		p.GoString()
	}
}

func TestNinEmbeddedStructUnionGoString(t *testing6.T) {
	popr := math_rand6.New(math_rand6.NewSource(time6.Now().UnixNano()))
	p := NewPopulatedNinEmbeddedStructUnion(popr)
	s1 := p.GoString()
	s2 := fmt2.Sprintf("%#v", p)
	if s1 != s2 {
		t.Fatalf("GoString want %v got %v", s1, s2)
	}
	_, err := go_parser.ParseExpr(s1)
	if err != nil {
		panic(err)
	}
}
func BenchmarkNinEmbeddedStructUnionGoString(b *testing6.B) {
	popr := math_rand6.New(math_rand6.NewSource(time6.Now().UnixNano()))
	p := NewPopulatedNinEmbeddedStructUnion(popr)
	data := p.GoString()
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		p.GoString()
	}
}

func TestNinNestedStructUnionGoString(t *testing6.T) {
	popr := math_rand6.New(math_rand6.NewSource(time6.Now().UnixNano()))
	p := NewPopulatedNinNestedStructUnion(popr)
	s1 := p.GoString()
	s2 := fmt2.Sprintf("%#v", p)
	if s1 != s2 {
		t.Fatalf("GoString want %v got %v", s1, s2)
	}
	_, err := go_parser.ParseExpr(s1)
	if err != nil {
		panic(err)
	}
}
func BenchmarkNinNestedStructUnionGoString(b *testing6.B) {
	popr := math_rand6.New(math_rand6.NewSource(time6.Now().UnixNano()))
	p := NewPopulatedNinNestedStructUnion(popr)
	data := p.GoString()
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		p.GoString()
	}
}

func TestTreeGoString(t *testing6.T) {
	popr := math_rand6.New(math_rand6.NewSource(time6.Now().UnixNano()))
	p := NewPopulatedTree(popr)
	s1 := p.GoString()
	s2 := fmt2.Sprintf("%#v", p)
	if s1 != s2 {
		t.Fatalf("GoString want %v got %v", s1, s2)
	}
	_, err := go_parser.ParseExpr(s1)
	if err != nil {
		panic(err)
	}
}
func BenchmarkTreeGoString(b *testing6.B) {
	popr := math_rand6.New(math_rand6.NewSource(time6.Now().UnixNano()))
	p := NewPopulatedTree(popr)
	data := p.GoString()
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		p.GoString()
	}
}

func TestOrBranchGoString(t *testing6.T) {
	popr := math_rand6.New(math_rand6.NewSource(time6.Now().UnixNano()))
	p := NewPopulatedOrBranch(popr)
	s1 := p.GoString()
	s2 := fmt2.Sprintf("%#v", p)
	if s1 != s2 {
		t.Fatalf("GoString want %v got %v", s1, s2)
	}
	_, err := go_parser.ParseExpr(s1)
	if err != nil {
		panic(err)
	}
}
func BenchmarkOrBranchGoString(b *testing6.B) {
	popr := math_rand6.New(math_rand6.NewSource(time6.Now().UnixNano()))
	p := NewPopulatedOrBranch(popr)
	data := p.GoString()
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		p.GoString()
	}
}

func TestAndBranchGoString(t *testing6.T) {
	popr := math_rand6.New(math_rand6.NewSource(time6.Now().UnixNano()))
	p := NewPopulatedAndBranch(popr)
	s1 := p.GoString()
	s2 := fmt2.Sprintf("%#v", p)
	if s1 != s2 {
		t.Fatalf("GoString want %v got %v", s1, s2)
	}
	_, err := go_parser.ParseExpr(s1)
	if err != nil {
		panic(err)
	}
}
func BenchmarkAndBranchGoString(b *testing6.B) {
	popr := math_rand6.New(math_rand6.NewSource(time6.Now().UnixNano()))
	p := NewPopulatedAndBranch(popr)
	data := p.GoString()
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		p.GoString()
	}
}

func TestLeafGoString(t *testing6.T) {
	popr := math_rand6.New(math_rand6.NewSource(time6.Now().UnixNano()))
	p := NewPopulatedLeaf(popr)
	s1 := p.GoString()
	s2 := fmt2.Sprintf("%#v", p)
	if s1 != s2 {
		t.Fatalf("GoString want %v got %v", s1, s2)
	}
	_, err := go_parser.ParseExpr(s1)
	if err != nil {
		panic(err)
	}
}
func BenchmarkLeafGoString(b *testing6.B) {
	popr := math_rand6.New(math_rand6.NewSource(time6.Now().UnixNano()))
	p := NewPopulatedLeaf(popr)
	data := p.GoString()
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		p.GoString()
	}
}

func TestDeepTreeGoString(t *testing6.T) {
	popr := math_rand6.New(math_rand6.NewSource(time6.Now().UnixNano()))
	p := NewPopulatedDeepTree(popr)
	s1 := p.GoString()
	s2 := fmt2.Sprintf("%#v", p)
	if s1 != s2 {
		t.Fatalf("GoString want %v got %v", s1, s2)
	}
	_, err := go_parser.ParseExpr(s1)
	if err != nil {
		panic(err)
	}
}
func BenchmarkDeepTreeGoString(b *testing6.B) {
	popr := math_rand6.New(math_rand6.NewSource(time6.Now().UnixNano()))
	p := NewPopulatedDeepTree(popr)
	data := p.GoString()
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		p.GoString()
	}
}

func TestADeepBranchGoString(t *testing6.T) {
	popr := math_rand6.New(math_rand6.NewSource(time6.Now().UnixNano()))
	p := NewPopulatedADeepBranch(popr)
	s1 := p.GoString()
	s2 := fmt2.Sprintf("%#v", p)
	if s1 != s2 {
		t.Fatalf("GoString want %v got %v", s1, s2)
	}
	_, err := go_parser.ParseExpr(s1)
	if err != nil {
		panic(err)
	}
}
func BenchmarkADeepBranchGoString(b *testing6.B) {
	popr := math_rand6.New(math_rand6.NewSource(time6.Now().UnixNano()))
	p := NewPopulatedADeepBranch(popr)
	data := p.GoString()
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		p.GoString()
	}
}

func TestAndDeepBranchGoString(t *testing6.T) {
	popr := math_rand6.New(math_rand6.NewSource(time6.Now().UnixNano()))
	p := NewPopulatedAndDeepBranch(popr)
	s1 := p.GoString()
	s2 := fmt2.Sprintf("%#v", p)
	if s1 != s2 {
		t.Fatalf("GoString want %v got %v", s1, s2)
	}
	_, err := go_parser.ParseExpr(s1)
	if err != nil {
		panic(err)
	}
}
func BenchmarkAndDeepBranchGoString(b *testing6.B) {
	popr := math_rand6.New(math_rand6.NewSource(time6.Now().UnixNano()))
	p := NewPopulatedAndDeepBranch(popr)
	data := p.GoString()
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		p.GoString()
	}
}

func TestDeepLeafGoString(t *testing6.T) {
	popr := math_rand6.New(math_rand6.NewSource(time6.Now().UnixNano()))
	p := NewPopulatedDeepLeaf(popr)
	s1 := p.GoString()
	s2 := fmt2.Sprintf("%#v", p)
	if s1 != s2 {
		t.Fatalf("GoString want %v got %v", s1, s2)
	}
	_, err := go_parser.ParseExpr(s1)
	if err != nil {
		panic(err)
	}
}
func BenchmarkDeepLeafGoString(b *testing6.B) {
	popr := math_rand6.New(math_rand6.NewSource(time6.Now().UnixNano()))
	p := NewPopulatedDeepLeaf(popr)
	data := p.GoString()
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		p.GoString()
	}
}

func TestNilGoString(t *testing6.T) {
	popr := math_rand6.New(math_rand6.NewSource(time6.Now().UnixNano()))
	p := NewPopulatedNil(popr)
	s1 := p.GoString()
	s2 := fmt2.Sprintf("%#v", p)
	if s1 != s2 {
		t.Fatalf("GoString want %v got %v", s1, s2)
	}
	_, err := go_parser.ParseExpr(s1)
	if err != nil {
		panic(err)
	}
}
func BenchmarkNilGoString(b *testing6.B) {
	popr := math_rand6.New(math_rand6.NewSource(time6.Now().UnixNano()))
	p := NewPopulatedNil(popr)
	data := p.GoString()
	b.SetBytes(int64(len(data)))
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		p.GoString()
	}
}

func TestNidOptNativeFace(t *testing7.T) {
	popr := math_rand7.New(math_rand7.NewSource(time7.Now().UnixNano()))
	p := NewPopulatedNidOptNative(popr)
	msg := p.TestProto()
	if !p.Equal(msg) {
		t.Fatalf("%#v !Face Equal %#v", msg, p)
	}
}
func BenchmarkNidOptNativeFace(b *testing7.B) {
	popr := math_rand7.New(math_rand7.NewSource(time7.Now().UnixNano()))
	p := NewPopulatedNidOptNative(popr)
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		p.TestProto()
	}
}

func TestNinOptNativeFace(t *testing7.T) {
	popr := math_rand7.New(math_rand7.NewSource(time7.Now().UnixNano()))
	p := NewPopulatedNinOptNative(popr)
	msg := p.TestProto()
	if !p.Equal(msg) {
		t.Fatalf("%#v !Face Equal %#v", msg, p)
	}
}
func BenchmarkNinOptNativeFace(b *testing7.B) {
	popr := math_rand7.New(math_rand7.NewSource(time7.Now().UnixNano()))
	p := NewPopulatedNinOptNative(popr)
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		p.TestProto()
	}
}

func TestNidRepNativeFace(t *testing7.T) {
	popr := math_rand7.New(math_rand7.NewSource(time7.Now().UnixNano()))
	p := NewPopulatedNidRepNative(popr)
	msg := p.TestProto()
	if !p.Equal(msg) {
		t.Fatalf("%#v !Face Equal %#v", msg, p)
	}
}
func BenchmarkNidRepNativeFace(b *testing7.B) {
	popr := math_rand7.New(math_rand7.NewSource(time7.Now().UnixNano()))
	p := NewPopulatedNidRepNative(popr)
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		p.TestProto()
	}
}

func TestNinRepNativeFace(t *testing7.T) {
	popr := math_rand7.New(math_rand7.NewSource(time7.Now().UnixNano()))
	p := NewPopulatedNinRepNative(popr)
	msg := p.TestProto()
	if !p.Equal(msg) {
		t.Fatalf("%#v !Face Equal %#v", msg, p)
	}
}
func BenchmarkNinRepNativeFace(b *testing7.B) {
	popr := math_rand7.New(math_rand7.NewSource(time7.Now().UnixNano()))
	p := NewPopulatedNinRepNative(popr)
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		p.TestProto()
	}
}

func TestNidRepPackedNativeFace(t *testing7.T) {
	popr := math_rand7.New(math_rand7.NewSource(time7.Now().UnixNano()))
	p := NewPopulatedNidRepPackedNative(popr)
	msg := p.TestProto()
	if !p.Equal(msg) {
		t.Fatalf("%#v !Face Equal %#v", msg, p)
	}
}
func BenchmarkNidRepPackedNativeFace(b *testing7.B) {
	popr := math_rand7.New(math_rand7.NewSource(time7.Now().UnixNano()))
	p := NewPopulatedNidRepPackedNative(popr)
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		p.TestProto()
	}
}

func TestNinRepPackedNativeFace(t *testing7.T) {
	popr := math_rand7.New(math_rand7.NewSource(time7.Now().UnixNano()))
	p := NewPopulatedNinRepPackedNative(popr)
	msg := p.TestProto()
	if !p.Equal(msg) {
		t.Fatalf("%#v !Face Equal %#v", msg, p)
	}
}
func BenchmarkNinRepPackedNativeFace(b *testing7.B) {
	popr := math_rand7.New(math_rand7.NewSource(time7.Now().UnixNano()))
	p := NewPopulatedNinRepPackedNative(popr)
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		p.TestProto()
	}
}

func TestNidOptStructFace(t *testing7.T) {
	popr := math_rand7.New(math_rand7.NewSource(time7.Now().UnixNano()))
	p := NewPopulatedNidOptStruct(popr)
	msg := p.TestProto()
	if !p.Equal(msg) {
		t.Fatalf("%#v !Face Equal %#v", msg, p)
	}
}
func BenchmarkNidOptStructFace(b *testing7.B) {
	popr := math_rand7.New(math_rand7.NewSource(time7.Now().UnixNano()))
	p := NewPopulatedNidOptStruct(popr)
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		p.TestProto()
	}
}

func TestNinOptStructFace(t *testing7.T) {
	popr := math_rand7.New(math_rand7.NewSource(time7.Now().UnixNano()))
	p := NewPopulatedNinOptStruct(popr)
	msg := p.TestProto()
	if !p.Equal(msg) {
		t.Fatalf("%#v !Face Equal %#v", msg, p)
	}
}
func BenchmarkNinOptStructFace(b *testing7.B) {
	popr := math_rand7.New(math_rand7.NewSource(time7.Now().UnixNano()))
	p := NewPopulatedNinOptStruct(popr)
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		p.TestProto()
	}
}

func TestNidRepStructFace(t *testing7.T) {
	popr := math_rand7.New(math_rand7.NewSource(time7.Now().UnixNano()))
	p := NewPopulatedNidRepStruct(popr)
	msg := p.TestProto()
	if !p.Equal(msg) {
		t.Fatalf("%#v !Face Equal %#v", msg, p)
	}
}
func BenchmarkNidRepStructFace(b *testing7.B) {
	popr := math_rand7.New(math_rand7.NewSource(time7.Now().UnixNano()))
	p := NewPopulatedNidRepStruct(popr)
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		p.TestProto()
	}
}

func TestNinRepStructFace(t *testing7.T) {
	popr := math_rand7.New(math_rand7.NewSource(time7.Now().UnixNano()))
	p := NewPopulatedNinRepStruct(popr)
	msg := p.TestProto()
	if !p.Equal(msg) {
		t.Fatalf("%#v !Face Equal %#v", msg, p)
	}
}
func BenchmarkNinRepStructFace(b *testing7.B) {
	popr := math_rand7.New(math_rand7.NewSource(time7.Now().UnixNano()))
	p := NewPopulatedNinRepStruct(popr)
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		p.TestProto()
	}
}

func TestNidEmbeddedStructFace(t *testing7.T) {
	popr := math_rand7.New(math_rand7.NewSource(time7.Now().UnixNano()))
	p := NewPopulatedNidEmbeddedStruct(popr)
	msg := p.TestProto()
	if !p.Equal(msg) {
		t.Fatalf("%#v !Face Equal %#v", msg, p)
	}
}
func BenchmarkNidEmbeddedStructFace(b *testing7.B) {
	popr := math_rand7.New(math_rand7.NewSource(time7.Now().UnixNano()))
	p := NewPopulatedNidEmbeddedStruct(popr)
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		p.TestProto()
	}
}

func TestNinEmbeddedStructFace(t *testing7.T) {
	popr := math_rand7.New(math_rand7.NewSource(time7.Now().UnixNano()))
	p := NewPopulatedNinEmbeddedStruct(popr)
	msg := p.TestProto()
	if !p.Equal(msg) {
		t.Fatalf("%#v !Face Equal %#v", msg, p)
	}
}
func BenchmarkNinEmbeddedStructFace(b *testing7.B) {
	popr := math_rand7.New(math_rand7.NewSource(time7.Now().UnixNano()))
	p := NewPopulatedNinEmbeddedStruct(popr)
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		p.TestProto()
	}
}

func TestNidNestedStructFace(t *testing7.T) {
	popr := math_rand7.New(math_rand7.NewSource(time7.Now().UnixNano()))
	p := NewPopulatedNidNestedStruct(popr)
	msg := p.TestProto()
	if !p.Equal(msg) {
		t.Fatalf("%#v !Face Equal %#v", msg, p)
	}
}
func BenchmarkNidNestedStructFace(b *testing7.B) {
	popr := math_rand7.New(math_rand7.NewSource(time7.Now().UnixNano()))
	p := NewPopulatedNidNestedStruct(popr)
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		p.TestProto()
	}
}

func TestNinNestedStructFace(t *testing7.T) {
	popr := math_rand7.New(math_rand7.NewSource(time7.Now().UnixNano()))
	p := NewPopulatedNinNestedStruct(popr)
	msg := p.TestProto()
	if !p.Equal(msg) {
		t.Fatalf("%#v !Face Equal %#v", msg, p)
	}
}
func BenchmarkNinNestedStructFace(b *testing7.B) {
	popr := math_rand7.New(math_rand7.NewSource(time7.Now().UnixNano()))
	p := NewPopulatedNinNestedStruct(popr)
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		p.TestProto()
	}
}

func TestNidOptCustomFace(t *testing7.T) {
	popr := math_rand7.New(math_rand7.NewSource(time7.Now().UnixNano()))
	p := NewPopulatedNidOptCustom(popr)
	msg := p.TestProto()
	if !p.Equal(msg) {
		t.Fatalf("%#v !Face Equal %#v", msg, p)
	}
}
func BenchmarkNidOptCustomFace(b *testing7.B) {
	popr := math_rand7.New(math_rand7.NewSource(time7.Now().UnixNano()))
	p := NewPopulatedNidOptCustom(popr)
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		p.TestProto()
	}
}

func TestNinOptCustomFace(t *testing7.T) {
	popr := math_rand7.New(math_rand7.NewSource(time7.Now().UnixNano()))
	p := NewPopulatedNinOptCustom(popr)
	msg := p.TestProto()
	if !p.Equal(msg) {
		t.Fatalf("%#v !Face Equal %#v", msg, p)
	}
}
func BenchmarkNinOptCustomFace(b *testing7.B) {
	popr := math_rand7.New(math_rand7.NewSource(time7.Now().UnixNano()))
	p := NewPopulatedNinOptCustom(popr)
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		p.TestProto()
	}
}

func TestNidRepCustomFace(t *testing7.T) {
	popr := math_rand7.New(math_rand7.NewSource(time7.Now().UnixNano()))
	p := NewPopulatedNidRepCustom(popr)
	msg := p.TestProto()
	if !p.Equal(msg) {
		t.Fatalf("%#v !Face Equal %#v", msg, p)
	}
}
func BenchmarkNidRepCustomFace(b *testing7.B) {
	popr := math_rand7.New(math_rand7.NewSource(time7.Now().UnixNano()))
	p := NewPopulatedNidRepCustom(popr)
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		p.TestProto()
	}
}

func TestNinRepCustomFace(t *testing7.T) {
	popr := math_rand7.New(math_rand7.NewSource(time7.Now().UnixNano()))
	p := NewPopulatedNinRepCustom(popr)
	msg := p.TestProto()
	if !p.Equal(msg) {
		t.Fatalf("%#v !Face Equal %#v", msg, p)
	}
}
func BenchmarkNinRepCustomFace(b *testing7.B) {
	popr := math_rand7.New(math_rand7.NewSource(time7.Now().UnixNano()))
	p := NewPopulatedNinRepCustom(popr)
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		p.TestProto()
	}
}

func TestNinOptNativeUnionFace(t *testing7.T) {
	popr := math_rand7.New(math_rand7.NewSource(time7.Now().UnixNano()))
	p := NewPopulatedNinOptNativeUnion(popr)
	msg := p.TestProto()
	if !p.Equal(msg) {
		t.Fatalf("%#v !Face Equal %#v", msg, p)
	}
}
func BenchmarkNinOptNativeUnionFace(b *testing7.B) {
	popr := math_rand7.New(math_rand7.NewSource(time7.Now().UnixNano()))
	p := NewPopulatedNinOptNativeUnion(popr)
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		p.TestProto()
	}
}

func TestNinOptStructUnionFace(t *testing7.T) {
	popr := math_rand7.New(math_rand7.NewSource(time7.Now().UnixNano()))
	p := NewPopulatedNinOptStructUnion(popr)
	msg := p.TestProto()
	if !p.Equal(msg) {
		t.Fatalf("%#v !Face Equal %#v", msg, p)
	}
}
func BenchmarkNinOptStructUnionFace(b *testing7.B) {
	popr := math_rand7.New(math_rand7.NewSource(time7.Now().UnixNano()))
	p := NewPopulatedNinOptStructUnion(popr)
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		p.TestProto()
	}
}

func TestNinEmbeddedStructUnionFace(t *testing7.T) {
	popr := math_rand7.New(math_rand7.NewSource(time7.Now().UnixNano()))
	p := NewPopulatedNinEmbeddedStructUnion(popr)
	msg := p.TestProto()
	if !p.Equal(msg) {
		t.Fatalf("%#v !Face Equal %#v", msg, p)
	}
}
func BenchmarkNinEmbeddedStructUnionFace(b *testing7.B) {
	popr := math_rand7.New(math_rand7.NewSource(time7.Now().UnixNano()))
	p := NewPopulatedNinEmbeddedStructUnion(popr)
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		p.TestProto()
	}
}

func TestNinNestedStructUnionFace(t *testing7.T) {
	popr := math_rand7.New(math_rand7.NewSource(time7.Now().UnixNano()))
	p := NewPopulatedNinNestedStructUnion(popr)
	msg := p.TestProto()
	if !p.Equal(msg) {
		t.Fatalf("%#v !Face Equal %#v", msg, p)
	}
}
func BenchmarkNinNestedStructUnionFace(b *testing7.B) {
	popr := math_rand7.New(math_rand7.NewSource(time7.Now().UnixNano()))
	p := NewPopulatedNinNestedStructUnion(popr)
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		p.TestProto()
	}
}

func TestTreeFace(t *testing7.T) {
	popr := math_rand7.New(math_rand7.NewSource(time7.Now().UnixNano()))
	p := NewPopulatedTree(popr)
	msg := p.TestProto()
	if !p.Equal(msg) {
		t.Fatalf("%#v !Face Equal %#v", msg, p)
	}
}
func BenchmarkTreeFace(b *testing7.B) {
	popr := math_rand7.New(math_rand7.NewSource(time7.Now().UnixNano()))
	p := NewPopulatedTree(popr)
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		p.TestProto()
	}
}

func TestOrBranchFace(t *testing7.T) {
	popr := math_rand7.New(math_rand7.NewSource(time7.Now().UnixNano()))
	p := NewPopulatedOrBranch(popr)
	msg := p.TestProto()
	if !p.Equal(msg) {
		t.Fatalf("%#v !Face Equal %#v", msg, p)
	}
}
func BenchmarkOrBranchFace(b *testing7.B) {
	popr := math_rand7.New(math_rand7.NewSource(time7.Now().UnixNano()))
	p := NewPopulatedOrBranch(popr)
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		p.TestProto()
	}
}

func TestAndBranchFace(t *testing7.T) {
	popr := math_rand7.New(math_rand7.NewSource(time7.Now().UnixNano()))
	p := NewPopulatedAndBranch(popr)
	msg := p.TestProto()
	if !p.Equal(msg) {
		t.Fatalf("%#v !Face Equal %#v", msg, p)
	}
}
func BenchmarkAndBranchFace(b *testing7.B) {
	popr := math_rand7.New(math_rand7.NewSource(time7.Now().UnixNano()))
	p := NewPopulatedAndBranch(popr)
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		p.TestProto()
	}
}

func TestLeafFace(t *testing7.T) {
	popr := math_rand7.New(math_rand7.NewSource(time7.Now().UnixNano()))
	p := NewPopulatedLeaf(popr)
	msg := p.TestProto()
	if !p.Equal(msg) {
		t.Fatalf("%#v !Face Equal %#v", msg, p)
	}
}
func BenchmarkLeafFace(b *testing7.B) {
	popr := math_rand7.New(math_rand7.NewSource(time7.Now().UnixNano()))
	p := NewPopulatedLeaf(popr)
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		p.TestProto()
	}
}

func TestDeepTreeFace(t *testing7.T) {
	popr := math_rand7.New(math_rand7.NewSource(time7.Now().UnixNano()))
	p := NewPopulatedDeepTree(popr)
	msg := p.TestProto()
	if !p.Equal(msg) {
		t.Fatalf("%#v !Face Equal %#v", msg, p)
	}
}
func BenchmarkDeepTreeFace(b *testing7.B) {
	popr := math_rand7.New(math_rand7.NewSource(time7.Now().UnixNano()))
	p := NewPopulatedDeepTree(popr)
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		p.TestProto()
	}
}

func TestADeepBranchFace(t *testing7.T) {
	popr := math_rand7.New(math_rand7.NewSource(time7.Now().UnixNano()))
	p := NewPopulatedADeepBranch(popr)
	msg := p.TestProto()
	if !p.Equal(msg) {
		t.Fatalf("%#v !Face Equal %#v", msg, p)
	}
}
func BenchmarkADeepBranchFace(b *testing7.B) {
	popr := math_rand7.New(math_rand7.NewSource(time7.Now().UnixNano()))
	p := NewPopulatedADeepBranch(popr)
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		p.TestProto()
	}
}

func TestAndDeepBranchFace(t *testing7.T) {
	popr := math_rand7.New(math_rand7.NewSource(time7.Now().UnixNano()))
	p := NewPopulatedAndDeepBranch(popr)
	msg := p.TestProto()
	if !p.Equal(msg) {
		t.Fatalf("%#v !Face Equal %#v", msg, p)
	}
}
func BenchmarkAndDeepBranchFace(b *testing7.B) {
	popr := math_rand7.New(math_rand7.NewSource(time7.Now().UnixNano()))
	p := NewPopulatedAndDeepBranch(popr)
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		p.TestProto()
	}
}

func TestDeepLeafFace(t *testing7.T) {
	popr := math_rand7.New(math_rand7.NewSource(time7.Now().UnixNano()))
	p := NewPopulatedDeepLeaf(popr)
	msg := p.TestProto()
	if !p.Equal(msg) {
		t.Fatalf("%#v !Face Equal %#v", msg, p)
	}
}
func BenchmarkDeepLeafFace(b *testing7.B) {
	popr := math_rand7.New(math_rand7.NewSource(time7.Now().UnixNano()))
	p := NewPopulatedDeepLeaf(popr)
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		p.TestProto()
	}
}

func TestNilFace(t *testing7.T) {
	popr := math_rand7.New(math_rand7.NewSource(time7.Now().UnixNano()))
	p := NewPopulatedNil(popr)
	msg := p.TestProto()
	if !p.Equal(msg) {
		t.Fatalf("%#v !Face Equal %#v", msg, p)
	}
}
func BenchmarkNilFace(b *testing7.B) {
	popr := math_rand7.New(math_rand7.NewSource(time7.Now().UnixNano()))
	p := NewPopulatedNil(popr)
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		p.TestProto()
	}
}

func TestNidOptNativeVerboseEqual(t *testing8.T) {
	popr := math_rand8.New(math_rand8.NewSource(time8.Now().UnixNano()))
	p := NewPopulatedNidOptNative(popr)
	data, err := code_google_com_p_gogoprotobuf_proto2.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &NidOptNative{}
	if err := code_google_com_p_gogoprotobuf_proto2.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	if err := p.VerboseEqual(msg); err != nil {
		t.Fatalf("%#v !VerboseEqual %#v, since %v", msg, p, err)
	}
}
func BenchmarkNidOptNativeEqual(b *testing8.B) {
	popr := math_rand8.New(math_rand8.NewSource(time8.Now().UnixNano()))
	p := NewPopulatedNidOptNative(popr)
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		p.Equal(p)
	}
}

func TestNinOptNativeVerboseEqual(t *testing8.T) {
	popr := math_rand8.New(math_rand8.NewSource(time8.Now().UnixNano()))
	p := NewPopulatedNinOptNative(popr)
	data, err := code_google_com_p_gogoprotobuf_proto2.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &NinOptNative{}
	if err := code_google_com_p_gogoprotobuf_proto2.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	if err := p.VerboseEqual(msg); err != nil {
		t.Fatalf("%#v !VerboseEqual %#v, since %v", msg, p, err)
	}
}
func BenchmarkNinOptNativeEqual(b *testing8.B) {
	popr := math_rand8.New(math_rand8.NewSource(time8.Now().UnixNano()))
	p := NewPopulatedNinOptNative(popr)
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		p.Equal(p)
	}
}

func TestNidRepNativeVerboseEqual(t *testing8.T) {
	popr := math_rand8.New(math_rand8.NewSource(time8.Now().UnixNano()))
	p := NewPopulatedNidRepNative(popr)
	data, err := code_google_com_p_gogoprotobuf_proto2.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &NidRepNative{}
	if err := code_google_com_p_gogoprotobuf_proto2.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	if err := p.VerboseEqual(msg); err != nil {
		t.Fatalf("%#v !VerboseEqual %#v, since %v", msg, p, err)
	}
}
func BenchmarkNidRepNativeEqual(b *testing8.B) {
	popr := math_rand8.New(math_rand8.NewSource(time8.Now().UnixNano()))
	p := NewPopulatedNidRepNative(popr)
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		p.Equal(p)
	}
}

func TestNinRepNativeVerboseEqual(t *testing8.T) {
	popr := math_rand8.New(math_rand8.NewSource(time8.Now().UnixNano()))
	p := NewPopulatedNinRepNative(popr)
	data, err := code_google_com_p_gogoprotobuf_proto2.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &NinRepNative{}
	if err := code_google_com_p_gogoprotobuf_proto2.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	if err := p.VerboseEqual(msg); err != nil {
		t.Fatalf("%#v !VerboseEqual %#v, since %v", msg, p, err)
	}
}
func BenchmarkNinRepNativeEqual(b *testing8.B) {
	popr := math_rand8.New(math_rand8.NewSource(time8.Now().UnixNano()))
	p := NewPopulatedNinRepNative(popr)
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		p.Equal(p)
	}
}

func TestNidRepPackedNativeVerboseEqual(t *testing8.T) {
	popr := math_rand8.New(math_rand8.NewSource(time8.Now().UnixNano()))
	p := NewPopulatedNidRepPackedNative(popr)
	data, err := code_google_com_p_gogoprotobuf_proto2.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &NidRepPackedNative{}
	if err := code_google_com_p_gogoprotobuf_proto2.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	if err := p.VerboseEqual(msg); err != nil {
		t.Fatalf("%#v !VerboseEqual %#v, since %v", msg, p, err)
	}
}
func BenchmarkNidRepPackedNativeEqual(b *testing8.B) {
	popr := math_rand8.New(math_rand8.NewSource(time8.Now().UnixNano()))
	p := NewPopulatedNidRepPackedNative(popr)
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		p.Equal(p)
	}
}

func TestNinRepPackedNativeVerboseEqual(t *testing8.T) {
	popr := math_rand8.New(math_rand8.NewSource(time8.Now().UnixNano()))
	p := NewPopulatedNinRepPackedNative(popr)
	data, err := code_google_com_p_gogoprotobuf_proto2.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &NinRepPackedNative{}
	if err := code_google_com_p_gogoprotobuf_proto2.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	if err := p.VerboseEqual(msg); err != nil {
		t.Fatalf("%#v !VerboseEqual %#v, since %v", msg, p, err)
	}
}
func BenchmarkNinRepPackedNativeEqual(b *testing8.B) {
	popr := math_rand8.New(math_rand8.NewSource(time8.Now().UnixNano()))
	p := NewPopulatedNinRepPackedNative(popr)
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		p.Equal(p)
	}
}

func TestNidOptStructVerboseEqual(t *testing8.T) {
	popr := math_rand8.New(math_rand8.NewSource(time8.Now().UnixNano()))
	p := NewPopulatedNidOptStruct(popr)
	data, err := code_google_com_p_gogoprotobuf_proto2.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &NidOptStruct{}
	if err := code_google_com_p_gogoprotobuf_proto2.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	if err := p.VerboseEqual(msg); err != nil {
		t.Fatalf("%#v !VerboseEqual %#v, since %v", msg, p, err)
	}
}
func BenchmarkNidOptStructEqual(b *testing8.B) {
	popr := math_rand8.New(math_rand8.NewSource(time8.Now().UnixNano()))
	p := NewPopulatedNidOptStruct(popr)
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		p.Equal(p)
	}
}

func TestNinOptStructVerboseEqual(t *testing8.T) {
	popr := math_rand8.New(math_rand8.NewSource(time8.Now().UnixNano()))
	p := NewPopulatedNinOptStruct(popr)
	data, err := code_google_com_p_gogoprotobuf_proto2.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &NinOptStruct{}
	if err := code_google_com_p_gogoprotobuf_proto2.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	if err := p.VerboseEqual(msg); err != nil {
		t.Fatalf("%#v !VerboseEqual %#v, since %v", msg, p, err)
	}
}
func BenchmarkNinOptStructEqual(b *testing8.B) {
	popr := math_rand8.New(math_rand8.NewSource(time8.Now().UnixNano()))
	p := NewPopulatedNinOptStruct(popr)
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		p.Equal(p)
	}
}

func TestNidRepStructVerboseEqual(t *testing8.T) {
	popr := math_rand8.New(math_rand8.NewSource(time8.Now().UnixNano()))
	p := NewPopulatedNidRepStruct(popr)
	data, err := code_google_com_p_gogoprotobuf_proto2.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &NidRepStruct{}
	if err := code_google_com_p_gogoprotobuf_proto2.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	if err := p.VerboseEqual(msg); err != nil {
		t.Fatalf("%#v !VerboseEqual %#v, since %v", msg, p, err)
	}
}
func BenchmarkNidRepStructEqual(b *testing8.B) {
	popr := math_rand8.New(math_rand8.NewSource(time8.Now().UnixNano()))
	p := NewPopulatedNidRepStruct(popr)
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		p.Equal(p)
	}
}

func TestNinRepStructVerboseEqual(t *testing8.T) {
	popr := math_rand8.New(math_rand8.NewSource(time8.Now().UnixNano()))
	p := NewPopulatedNinRepStruct(popr)
	data, err := code_google_com_p_gogoprotobuf_proto2.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &NinRepStruct{}
	if err := code_google_com_p_gogoprotobuf_proto2.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	if err := p.VerboseEqual(msg); err != nil {
		t.Fatalf("%#v !VerboseEqual %#v, since %v", msg, p, err)
	}
}
func BenchmarkNinRepStructEqual(b *testing8.B) {
	popr := math_rand8.New(math_rand8.NewSource(time8.Now().UnixNano()))
	p := NewPopulatedNinRepStruct(popr)
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		p.Equal(p)
	}
}

func TestNidEmbeddedStructVerboseEqual(t *testing8.T) {
	popr := math_rand8.New(math_rand8.NewSource(time8.Now().UnixNano()))
	p := NewPopulatedNidEmbeddedStruct(popr)
	data, err := code_google_com_p_gogoprotobuf_proto2.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &NidEmbeddedStruct{}
	if err := code_google_com_p_gogoprotobuf_proto2.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	if err := p.VerboseEqual(msg); err != nil {
		t.Fatalf("%#v !VerboseEqual %#v, since %v", msg, p, err)
	}
}
func BenchmarkNidEmbeddedStructEqual(b *testing8.B) {
	popr := math_rand8.New(math_rand8.NewSource(time8.Now().UnixNano()))
	p := NewPopulatedNidEmbeddedStruct(popr)
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		p.Equal(p)
	}
}

func TestNinEmbeddedStructVerboseEqual(t *testing8.T) {
	popr := math_rand8.New(math_rand8.NewSource(time8.Now().UnixNano()))
	p := NewPopulatedNinEmbeddedStruct(popr)
	data, err := code_google_com_p_gogoprotobuf_proto2.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &NinEmbeddedStruct{}
	if err := code_google_com_p_gogoprotobuf_proto2.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	if err := p.VerboseEqual(msg); err != nil {
		t.Fatalf("%#v !VerboseEqual %#v, since %v", msg, p, err)
	}
}
func BenchmarkNinEmbeddedStructEqual(b *testing8.B) {
	popr := math_rand8.New(math_rand8.NewSource(time8.Now().UnixNano()))
	p := NewPopulatedNinEmbeddedStruct(popr)
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		p.Equal(p)
	}
}

func TestNidNestedStructVerboseEqual(t *testing8.T) {
	popr := math_rand8.New(math_rand8.NewSource(time8.Now().UnixNano()))
	p := NewPopulatedNidNestedStruct(popr)
	data, err := code_google_com_p_gogoprotobuf_proto2.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &NidNestedStruct{}
	if err := code_google_com_p_gogoprotobuf_proto2.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	if err := p.VerboseEqual(msg); err != nil {
		t.Fatalf("%#v !VerboseEqual %#v, since %v", msg, p, err)
	}
}
func BenchmarkNidNestedStructEqual(b *testing8.B) {
	popr := math_rand8.New(math_rand8.NewSource(time8.Now().UnixNano()))
	p := NewPopulatedNidNestedStruct(popr)
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		p.Equal(p)
	}
}

func TestNinNestedStructVerboseEqual(t *testing8.T) {
	popr := math_rand8.New(math_rand8.NewSource(time8.Now().UnixNano()))
	p := NewPopulatedNinNestedStruct(popr)
	data, err := code_google_com_p_gogoprotobuf_proto2.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &NinNestedStruct{}
	if err := code_google_com_p_gogoprotobuf_proto2.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	if err := p.VerboseEqual(msg); err != nil {
		t.Fatalf("%#v !VerboseEqual %#v, since %v", msg, p, err)
	}
}
func BenchmarkNinNestedStructEqual(b *testing8.B) {
	popr := math_rand8.New(math_rand8.NewSource(time8.Now().UnixNano()))
	p := NewPopulatedNinNestedStruct(popr)
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		p.Equal(p)
	}
}

func TestNidOptCustomVerboseEqual(t *testing8.T) {
	popr := math_rand8.New(math_rand8.NewSource(time8.Now().UnixNano()))
	p := NewPopulatedNidOptCustom(popr)
	data, err := code_google_com_p_gogoprotobuf_proto2.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &NidOptCustom{}
	if err := code_google_com_p_gogoprotobuf_proto2.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	if err := p.VerboseEqual(msg); err != nil {
		t.Fatalf("%#v !VerboseEqual %#v, since %v", msg, p, err)
	}
}
func BenchmarkNidOptCustomEqual(b *testing8.B) {
	popr := math_rand8.New(math_rand8.NewSource(time8.Now().UnixNano()))
	p := NewPopulatedNidOptCustom(popr)
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		p.Equal(p)
	}
}

func TestNinOptCustomVerboseEqual(t *testing8.T) {
	popr := math_rand8.New(math_rand8.NewSource(time8.Now().UnixNano()))
	p := NewPopulatedNinOptCustom(popr)
	data, err := code_google_com_p_gogoprotobuf_proto2.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &NinOptCustom{}
	if err := code_google_com_p_gogoprotobuf_proto2.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	if err := p.VerboseEqual(msg); err != nil {
		t.Fatalf("%#v !VerboseEqual %#v, since %v", msg, p, err)
	}
}
func BenchmarkNinOptCustomEqual(b *testing8.B) {
	popr := math_rand8.New(math_rand8.NewSource(time8.Now().UnixNano()))
	p := NewPopulatedNinOptCustom(popr)
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		p.Equal(p)
	}
}

func TestNidRepCustomVerboseEqual(t *testing8.T) {
	popr := math_rand8.New(math_rand8.NewSource(time8.Now().UnixNano()))
	p := NewPopulatedNidRepCustom(popr)
	data, err := code_google_com_p_gogoprotobuf_proto2.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &NidRepCustom{}
	if err := code_google_com_p_gogoprotobuf_proto2.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	if err := p.VerboseEqual(msg); err != nil {
		t.Fatalf("%#v !VerboseEqual %#v, since %v", msg, p, err)
	}
}
func BenchmarkNidRepCustomEqual(b *testing8.B) {
	popr := math_rand8.New(math_rand8.NewSource(time8.Now().UnixNano()))
	p := NewPopulatedNidRepCustom(popr)
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		p.Equal(p)
	}
}

func TestNinRepCustomVerboseEqual(t *testing8.T) {
	popr := math_rand8.New(math_rand8.NewSource(time8.Now().UnixNano()))
	p := NewPopulatedNinRepCustom(popr)
	data, err := code_google_com_p_gogoprotobuf_proto2.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &NinRepCustom{}
	if err := code_google_com_p_gogoprotobuf_proto2.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	if err := p.VerboseEqual(msg); err != nil {
		t.Fatalf("%#v !VerboseEqual %#v, since %v", msg, p, err)
	}
}
func BenchmarkNinRepCustomEqual(b *testing8.B) {
	popr := math_rand8.New(math_rand8.NewSource(time8.Now().UnixNano()))
	p := NewPopulatedNinRepCustom(popr)
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		p.Equal(p)
	}
}

func TestNinOptNativeUnionVerboseEqual(t *testing8.T) {
	popr := math_rand8.New(math_rand8.NewSource(time8.Now().UnixNano()))
	p := NewPopulatedNinOptNativeUnion(popr)
	data, err := code_google_com_p_gogoprotobuf_proto2.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &NinOptNativeUnion{}
	if err := code_google_com_p_gogoprotobuf_proto2.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	if err := p.VerboseEqual(msg); err != nil {
		t.Fatalf("%#v !VerboseEqual %#v, since %v", msg, p, err)
	}
}
func BenchmarkNinOptNativeUnionEqual(b *testing8.B) {
	popr := math_rand8.New(math_rand8.NewSource(time8.Now().UnixNano()))
	p := NewPopulatedNinOptNativeUnion(popr)
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		p.Equal(p)
	}
}

func TestNinOptStructUnionVerboseEqual(t *testing8.T) {
	popr := math_rand8.New(math_rand8.NewSource(time8.Now().UnixNano()))
	p := NewPopulatedNinOptStructUnion(popr)
	data, err := code_google_com_p_gogoprotobuf_proto2.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &NinOptStructUnion{}
	if err := code_google_com_p_gogoprotobuf_proto2.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	if err := p.VerboseEqual(msg); err != nil {
		t.Fatalf("%#v !VerboseEqual %#v, since %v", msg, p, err)
	}
}
func BenchmarkNinOptStructUnionEqual(b *testing8.B) {
	popr := math_rand8.New(math_rand8.NewSource(time8.Now().UnixNano()))
	p := NewPopulatedNinOptStructUnion(popr)
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		p.Equal(p)
	}
}

func TestNinEmbeddedStructUnionVerboseEqual(t *testing8.T) {
	popr := math_rand8.New(math_rand8.NewSource(time8.Now().UnixNano()))
	p := NewPopulatedNinEmbeddedStructUnion(popr)
	data, err := code_google_com_p_gogoprotobuf_proto2.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &NinEmbeddedStructUnion{}
	if err := code_google_com_p_gogoprotobuf_proto2.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	if err := p.VerboseEqual(msg); err != nil {
		t.Fatalf("%#v !VerboseEqual %#v, since %v", msg, p, err)
	}
}
func BenchmarkNinEmbeddedStructUnionEqual(b *testing8.B) {
	popr := math_rand8.New(math_rand8.NewSource(time8.Now().UnixNano()))
	p := NewPopulatedNinEmbeddedStructUnion(popr)
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		p.Equal(p)
	}
}

func TestNinNestedStructUnionVerboseEqual(t *testing8.T) {
	popr := math_rand8.New(math_rand8.NewSource(time8.Now().UnixNano()))
	p := NewPopulatedNinNestedStructUnion(popr)
	data, err := code_google_com_p_gogoprotobuf_proto2.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &NinNestedStructUnion{}
	if err := code_google_com_p_gogoprotobuf_proto2.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	if err := p.VerboseEqual(msg); err != nil {
		t.Fatalf("%#v !VerboseEqual %#v, since %v", msg, p, err)
	}
}
func BenchmarkNinNestedStructUnionEqual(b *testing8.B) {
	popr := math_rand8.New(math_rand8.NewSource(time8.Now().UnixNano()))
	p := NewPopulatedNinNestedStructUnion(popr)
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		p.Equal(p)
	}
}

func TestTreeVerboseEqual(t *testing8.T) {
	popr := math_rand8.New(math_rand8.NewSource(time8.Now().UnixNano()))
	p := NewPopulatedTree(popr)
	data, err := code_google_com_p_gogoprotobuf_proto2.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &Tree{}
	if err := code_google_com_p_gogoprotobuf_proto2.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	if err := p.VerboseEqual(msg); err != nil {
		t.Fatalf("%#v !VerboseEqual %#v, since %v", msg, p, err)
	}
}
func BenchmarkTreeEqual(b *testing8.B) {
	popr := math_rand8.New(math_rand8.NewSource(time8.Now().UnixNano()))
	p := NewPopulatedTree(popr)
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		p.Equal(p)
	}
}

func TestOrBranchVerboseEqual(t *testing8.T) {
	popr := math_rand8.New(math_rand8.NewSource(time8.Now().UnixNano()))
	p := NewPopulatedOrBranch(popr)
	data, err := code_google_com_p_gogoprotobuf_proto2.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &OrBranch{}
	if err := code_google_com_p_gogoprotobuf_proto2.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	if err := p.VerboseEqual(msg); err != nil {
		t.Fatalf("%#v !VerboseEqual %#v, since %v", msg, p, err)
	}
}
func BenchmarkOrBranchEqual(b *testing8.B) {
	popr := math_rand8.New(math_rand8.NewSource(time8.Now().UnixNano()))
	p := NewPopulatedOrBranch(popr)
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		p.Equal(p)
	}
}

func TestAndBranchVerboseEqual(t *testing8.T) {
	popr := math_rand8.New(math_rand8.NewSource(time8.Now().UnixNano()))
	p := NewPopulatedAndBranch(popr)
	data, err := code_google_com_p_gogoprotobuf_proto2.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &AndBranch{}
	if err := code_google_com_p_gogoprotobuf_proto2.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	if err := p.VerboseEqual(msg); err != nil {
		t.Fatalf("%#v !VerboseEqual %#v, since %v", msg, p, err)
	}
}
func BenchmarkAndBranchEqual(b *testing8.B) {
	popr := math_rand8.New(math_rand8.NewSource(time8.Now().UnixNano()))
	p := NewPopulatedAndBranch(popr)
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		p.Equal(p)
	}
}

func TestLeafVerboseEqual(t *testing8.T) {
	popr := math_rand8.New(math_rand8.NewSource(time8.Now().UnixNano()))
	p := NewPopulatedLeaf(popr)
	data, err := code_google_com_p_gogoprotobuf_proto2.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &Leaf{}
	if err := code_google_com_p_gogoprotobuf_proto2.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	if err := p.VerboseEqual(msg); err != nil {
		t.Fatalf("%#v !VerboseEqual %#v, since %v", msg, p, err)
	}
}
func BenchmarkLeafEqual(b *testing8.B) {
	popr := math_rand8.New(math_rand8.NewSource(time8.Now().UnixNano()))
	p := NewPopulatedLeaf(popr)
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		p.Equal(p)
	}
}

func TestDeepTreeVerboseEqual(t *testing8.T) {
	popr := math_rand8.New(math_rand8.NewSource(time8.Now().UnixNano()))
	p := NewPopulatedDeepTree(popr)
	data, err := code_google_com_p_gogoprotobuf_proto2.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &DeepTree{}
	if err := code_google_com_p_gogoprotobuf_proto2.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	if err := p.VerboseEqual(msg); err != nil {
		t.Fatalf("%#v !VerboseEqual %#v, since %v", msg, p, err)
	}
}
func BenchmarkDeepTreeEqual(b *testing8.B) {
	popr := math_rand8.New(math_rand8.NewSource(time8.Now().UnixNano()))
	p := NewPopulatedDeepTree(popr)
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		p.Equal(p)
	}
}

func TestADeepBranchVerboseEqual(t *testing8.T) {
	popr := math_rand8.New(math_rand8.NewSource(time8.Now().UnixNano()))
	p := NewPopulatedADeepBranch(popr)
	data, err := code_google_com_p_gogoprotobuf_proto2.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &ADeepBranch{}
	if err := code_google_com_p_gogoprotobuf_proto2.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	if err := p.VerboseEqual(msg); err != nil {
		t.Fatalf("%#v !VerboseEqual %#v, since %v", msg, p, err)
	}
}
func BenchmarkADeepBranchEqual(b *testing8.B) {
	popr := math_rand8.New(math_rand8.NewSource(time8.Now().UnixNano()))
	p := NewPopulatedADeepBranch(popr)
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		p.Equal(p)
	}
}

func TestAndDeepBranchVerboseEqual(t *testing8.T) {
	popr := math_rand8.New(math_rand8.NewSource(time8.Now().UnixNano()))
	p := NewPopulatedAndDeepBranch(popr)
	data, err := code_google_com_p_gogoprotobuf_proto2.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &AndDeepBranch{}
	if err := code_google_com_p_gogoprotobuf_proto2.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	if err := p.VerboseEqual(msg); err != nil {
		t.Fatalf("%#v !VerboseEqual %#v, since %v", msg, p, err)
	}
}
func BenchmarkAndDeepBranchEqual(b *testing8.B) {
	popr := math_rand8.New(math_rand8.NewSource(time8.Now().UnixNano()))
	p := NewPopulatedAndDeepBranch(popr)
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		p.Equal(p)
	}
}

func TestDeepLeafVerboseEqual(t *testing8.T) {
	popr := math_rand8.New(math_rand8.NewSource(time8.Now().UnixNano()))
	p := NewPopulatedDeepLeaf(popr)
	data, err := code_google_com_p_gogoprotobuf_proto2.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &DeepLeaf{}
	if err := code_google_com_p_gogoprotobuf_proto2.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	if err := p.VerboseEqual(msg); err != nil {
		t.Fatalf("%#v !VerboseEqual %#v, since %v", msg, p, err)
	}
}
func BenchmarkDeepLeafEqual(b *testing8.B) {
	popr := math_rand8.New(math_rand8.NewSource(time8.Now().UnixNano()))
	p := NewPopulatedDeepLeaf(popr)
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		p.Equal(p)
	}
}

func TestNilVerboseEqual(t *testing8.T) {
	popr := math_rand8.New(math_rand8.NewSource(time8.Now().UnixNano()))
	p := NewPopulatedNil(popr)
	data, err := code_google_com_p_gogoprotobuf_proto2.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &Nil{}
	if err := code_google_com_p_gogoprotobuf_proto2.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	if err := p.VerboseEqual(msg); err != nil {
		t.Fatalf("%#v !VerboseEqual %#v, since %v", msg, p, err)
	}
}
func BenchmarkNilEqual(b *testing8.B) {
	popr := math_rand8.New(math_rand8.NewSource(time8.Now().UnixNano()))
	p := NewPopulatedNil(popr)
	b.StopTimer()
	b.ResetTimer()
	b.StartTimer()
	for i := 0; i < b.N; i++ {
		p.Equal(p)
	}
}

func TestNidOptNativeDescription(t *testing9.T) {
	popr := math_rand9.New(math_rand9.NewSource(time9.Now().UnixNano()))
	p := NewPopulatedNidOptNative(popr)
	p.Description()
}
func TestNinOptNativeDescription(t *testing9.T) {
	popr := math_rand9.New(math_rand9.NewSource(time9.Now().UnixNano()))
	p := NewPopulatedNinOptNative(popr)
	p.Description()
}
func TestNidRepNativeDescription(t *testing9.T) {
	popr := math_rand9.New(math_rand9.NewSource(time9.Now().UnixNano()))
	p := NewPopulatedNidRepNative(popr)
	p.Description()
}
func TestNinRepNativeDescription(t *testing9.T) {
	popr := math_rand9.New(math_rand9.NewSource(time9.Now().UnixNano()))
	p := NewPopulatedNinRepNative(popr)
	p.Description()
}
func TestNidRepPackedNativeDescription(t *testing9.T) {
	popr := math_rand9.New(math_rand9.NewSource(time9.Now().UnixNano()))
	p := NewPopulatedNidRepPackedNative(popr)
	p.Description()
}
func TestNinRepPackedNativeDescription(t *testing9.T) {
	popr := math_rand9.New(math_rand9.NewSource(time9.Now().UnixNano()))
	p := NewPopulatedNinRepPackedNative(popr)
	p.Description()
}
func TestNidOptStructDescription(t *testing9.T) {
	popr := math_rand9.New(math_rand9.NewSource(time9.Now().UnixNano()))
	p := NewPopulatedNidOptStruct(popr)
	p.Description()
}
func TestNinOptStructDescription(t *testing9.T) {
	popr := math_rand9.New(math_rand9.NewSource(time9.Now().UnixNano()))
	p := NewPopulatedNinOptStruct(popr)
	p.Description()
}
func TestNidRepStructDescription(t *testing9.T) {
	popr := math_rand9.New(math_rand9.NewSource(time9.Now().UnixNano()))
	p := NewPopulatedNidRepStruct(popr)
	p.Description()
}
func TestNinRepStructDescription(t *testing9.T) {
	popr := math_rand9.New(math_rand9.NewSource(time9.Now().UnixNano()))
	p := NewPopulatedNinRepStruct(popr)
	p.Description()
}
func TestNidEmbeddedStructDescription(t *testing9.T) {
	popr := math_rand9.New(math_rand9.NewSource(time9.Now().UnixNano()))
	p := NewPopulatedNidEmbeddedStruct(popr)
	p.Description()
}
func TestNinEmbeddedStructDescription(t *testing9.T) {
	popr := math_rand9.New(math_rand9.NewSource(time9.Now().UnixNano()))
	p := NewPopulatedNinEmbeddedStruct(popr)
	p.Description()
}
func TestNidNestedStructDescription(t *testing9.T) {
	popr := math_rand9.New(math_rand9.NewSource(time9.Now().UnixNano()))
	p := NewPopulatedNidNestedStruct(popr)
	p.Description()
}
func TestNinNestedStructDescription(t *testing9.T) {
	popr := math_rand9.New(math_rand9.NewSource(time9.Now().UnixNano()))
	p := NewPopulatedNinNestedStruct(popr)
	p.Description()
}
func TestNidOptCustomDescription(t *testing9.T) {
	popr := math_rand9.New(math_rand9.NewSource(time9.Now().UnixNano()))
	p := NewPopulatedNidOptCustom(popr)
	p.Description()
}
func TestNinOptCustomDescription(t *testing9.T) {
	popr := math_rand9.New(math_rand9.NewSource(time9.Now().UnixNano()))
	p := NewPopulatedNinOptCustom(popr)
	p.Description()
}
func TestNidRepCustomDescription(t *testing9.T) {
	popr := math_rand9.New(math_rand9.NewSource(time9.Now().UnixNano()))
	p := NewPopulatedNidRepCustom(popr)
	p.Description()
}
func TestNinRepCustomDescription(t *testing9.T) {
	popr := math_rand9.New(math_rand9.NewSource(time9.Now().UnixNano()))
	p := NewPopulatedNinRepCustom(popr)
	p.Description()
}
func TestNinOptNativeUnionDescription(t *testing9.T) {
	popr := math_rand9.New(math_rand9.NewSource(time9.Now().UnixNano()))
	p := NewPopulatedNinOptNativeUnion(popr)
	p.Description()
}
func TestNinOptStructUnionDescription(t *testing9.T) {
	popr := math_rand9.New(math_rand9.NewSource(time9.Now().UnixNano()))
	p := NewPopulatedNinOptStructUnion(popr)
	p.Description()
}
func TestNinEmbeddedStructUnionDescription(t *testing9.T) {
	popr := math_rand9.New(math_rand9.NewSource(time9.Now().UnixNano()))
	p := NewPopulatedNinEmbeddedStructUnion(popr)
	p.Description()
}
func TestNinNestedStructUnionDescription(t *testing9.T) {
	popr := math_rand9.New(math_rand9.NewSource(time9.Now().UnixNano()))
	p := NewPopulatedNinNestedStructUnion(popr)
	p.Description()
}
func TestTreeDescription(t *testing9.T) {
	popr := math_rand9.New(math_rand9.NewSource(time9.Now().UnixNano()))
	p := NewPopulatedTree(popr)
	p.Description()
}
func TestOrBranchDescription(t *testing9.T) {
	popr := math_rand9.New(math_rand9.NewSource(time9.Now().UnixNano()))
	p := NewPopulatedOrBranch(popr)
	p.Description()
}
func TestAndBranchDescription(t *testing9.T) {
	popr := math_rand9.New(math_rand9.NewSource(time9.Now().UnixNano()))
	p := NewPopulatedAndBranch(popr)
	p.Description()
}
func TestLeafDescription(t *testing9.T) {
	popr := math_rand9.New(math_rand9.NewSource(time9.Now().UnixNano()))
	p := NewPopulatedLeaf(popr)
	p.Description()
}
func TestDeepTreeDescription(t *testing9.T) {
	popr := math_rand9.New(math_rand9.NewSource(time9.Now().UnixNano()))
	p := NewPopulatedDeepTree(popr)
	p.Description()
}
func TestADeepBranchDescription(t *testing9.T) {
	popr := math_rand9.New(math_rand9.NewSource(time9.Now().UnixNano()))
	p := NewPopulatedADeepBranch(popr)
	p.Description()
}
func TestAndDeepBranchDescription(t *testing9.T) {
	popr := math_rand9.New(math_rand9.NewSource(time9.Now().UnixNano()))
	p := NewPopulatedAndDeepBranch(popr)
	p.Description()
}
func TestDeepLeafDescription(t *testing9.T) {
	popr := math_rand9.New(math_rand9.NewSource(time9.Now().UnixNano()))
	p := NewPopulatedDeepLeaf(popr)
	p.Description()
}
func TestNilDescription(t *testing9.T) {
	popr := math_rand9.New(math_rand9.NewSource(time9.Now().UnixNano()))
	p := NewPopulatedNil(popr)
	p.Description()
}

//These tests are generated by code.google.com/p/gogoprotobuf/plugin/testgen
